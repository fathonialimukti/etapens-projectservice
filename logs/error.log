2022-10-01 16:35:14:3514 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`email`)[39m
2022-10-01 21:24:33:2433 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.create()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-10-01 21:24:40:2440 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.create()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-10-01 21:30:31:3031 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: NaN,[39m
[31m        ~~~[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true[39m
[31m  }[39m
[31m}[39m

[31mArgument skip: Got invalid value NaN on prisma.findManyProject. Provided Float, expected Int.[39m

[31m[39m
2022-10-01 21:37:27:3727 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:40:34:4034 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:40:57:4057 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:43:54:4354 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:45:55:4555 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:46:36:4636 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:46:51:4651 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:48:14:4814 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:48:19:4819 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:48:21:4821 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:48:22:4822 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:48:26:4826 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:49:04:494 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:50:22:5022 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:50:26:5026 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:50:55:5055 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:54:13:5413 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:55:22:5522 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:56:38:5638 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:56:40:5640 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:57:59:5759 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 21:58:01:581 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'title')[39m
2022-10-01 22:00:30:030 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'page')[39m
2022-10-01 22:01:03:13 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Cannot read properties of undefined (reading 'page')[39m
2022-10-01 22:11:39:1139 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: searchQuery is not defined[39m
2022-10-01 22:11:45:1145 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: NaN,[39m
[31m        ~~~[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument skip: Got invalid value NaN on prisma.findManyProject. Provided Float, expected Int.[39m

[31m[39m
2022-10-01 22:12:22:1222 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: NaN,[39m
[31m        ~~~[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument skip: Got invalid value NaN on prisma.findManyProject. Provided Float, expected Int.[39m

[31m[39m
2022-10-01 22:12:33:1233 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: NaN,[39m
[31m        ~~~[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument skip: Got invalid value NaN on prisma.findManyProject. Provided Float, expected Int.[39m

[31m[39m
2022-10-01 22:13:45:1345 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: NaN,[39m
[31m        ~~~[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument skip: Got invalid value NaN on prisma.findManyProject. Provided Float, expected Int.[39m

[31m[39m
2022-10-01 22:15:22:1522 [31merror[39m: [31m[GET] / >> StatusCode:: 400, Message:: Unexpected token p in JSON at position 4[39m
2022-10-01 22:18:02:182 [31merror[39m: [31m[GET] / >> StatusCode:: 400, Message:: Unexpected string in JSON at position 16[39m
2022-10-01 22:21:36:2136 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: 'LEARNING'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      in: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-01 22:23:38:2338 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: 'LEARNING'[39m
[31m      ~~~~~~[39m
[31m    },[39m
[31m    tech: {[39m
[31m      in: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `search` in where.title.search for type StringFilter. Did you mean `select`?[39m
[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-01 22:23:41:2341 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: 'LEARNING'[39m
[31m      ~~~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `search` in where.title.search for type StringFilter. Did you mean `select`? Available args:[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m

[31m[39m
2022-10-01 22:23:46:2346 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: 'LEARNING'[39m
[31m      ~~~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `search` in where.title.search for type StringFilter. Did you mean `select`? Available args:[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m

[31m[39m
2022-10-01 22:23:50:2350 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: 'LEARNING'[39m
[31m      ~~~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `search` in where.title.search for type StringFilter. Did you mean `select`? Available args:[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m

[31m[39m
2022-10-01 22:25:11:2511 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: tech is not defined[39m
2022-10-01 22:25:27:2527 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: 'LEARNING'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      in: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-01 22:27:06:276 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: 'LEARNING'[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-01 22:29:08:298 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: 'LEARNING'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: {}[39m
[31m      ~~~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument hasEvery: Got invalid value [39m
[31m[[39m
[31m  {}[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<Json>, expected List<String>.[39m

[31m[39m
2022-10-01 22:29:42:2942 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: 'LEARNING'[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     hasSome?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-01 22:29:44:2944 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: 'LEARNING'[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     hasSome?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-01 22:30:11:3011 [31merror[39m: [31m[GET] / >> StatusCode:: 400, Message:: Unexpected string in JSON at position 11[39m
2022-10-01 22:30:22:3022 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: 'learning'[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     hasSome?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-01 22:31:13:3113 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: 'learning'[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-01 22:40:24:4024 [31merror[39m: [31m[GET] /title >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-01 22:40:57:4057 [31merror[39m: [31m[GET] /title >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-01 22:41:03:413 [31merror[39m: [31m[GET] /title >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-01 22:41:29:4129 [31merror[39m: [31m[GET] /title >> StatusCode:: 500, Message:: search is not defined[39m
2022-10-01 22:41:34:4134 [31merror[39m: [31m[GET] /title >> StatusCode:: 500, Message:: search is not defined[39m
2022-10-01 22:42:22:4222 [31merror[39m: [31m[GET] /judul20penelitian >> StatusCode:: 500, Message:: search is not defined[39m
2022-10-01 22:48:59:4859 [31merror[39m: [31m[POST] /create-user >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-01 22:49:35:4935 [31merror[39m: [31m[POST] /create-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    test: 'test',[39m
[31m    ~~~~[39m
[31m+   email: String,[39m
[31m+   username: String,[39m
[31m?   image?: String | null,[39m
[31m?   role?: Admin | Student | Lecturer,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `test` in data.test for type UserCreateInput. Did you mean `role`?[39m
[31mArgument email for data.email is missing.[39m
[31mArgument username for data.username is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-01 22:50:38:5038 [31merror[39m: [31m[POST] /create-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    test: 'test',[39m
[31m    ~~~~[39m
[31m+   email: String,[39m
[31m+   username: String,[39m
[31m?   image?: String | null,[39m
[31m?   role?: Admin | Student | Lecturer,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `test` in data.test for type UserCreateInput. Did you mean `role`?[39m
[31mArgument email for data.email is missing.[39m
[31mArgument username for data.username is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-01 22:52:08:528 [31merror[39m: [31m[POST] /create-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`email`)[39m
2022-10-01 23:16:09:169 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-01 23:16:42:1642 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-01 23:17:29:1729 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-01 23:17:59:1759 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-01 23:18:04:184 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-01 23:18:05:185 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-01 23:39:31:3931 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    email: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   studentAccount?: true,[39m
[31m?   lecturerAccount?: true[39m
[31m  }[39m
[31m}[39m


[31mThe `include` statement for type User must not be empty. Available options are listed in green.[39m
[31m[39m
2022-10-01 23:39:47:3947 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    email: 'fathonialim2@gmail.com'[39m
[31m  },[39m
[31m  include: {[39m
[31m?   studentAccount?: true,[39m
[31m?   lecturerAccount?: true[39m
[31m  }[39m
[31m}[39m


[31mThe `include` statement for type User must not be empty. Available options are listed in green.[39m
[31m[39m
2022-10-02 16:20:37:2037 [31merror[39m: [31m[GET] /get-project >> StatusCode:: 500, Message:: projectService.getOne is not a function[39m
2022-10-02 16:25:08:258 [31merror[39m: [31m[GET] /get-lecturer-profile >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.lecturer.findFirst()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: '1'[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value '1' on prisma.findFirstLecturer. Provided String, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-02 16:26:10:2610 [31merror[39m: [31m[GET] /get-student-profile >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirst()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: '1'[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value '1' on prisma.findFirstStudent. Provided String, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-03 16:28:34:2834 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: role is not defined[39m
2022-10-03 16:28:58:2858 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    role: null[39m
[31m          ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument role for where.role must not be null. Please use undefined instead.[39m

[31m[39m
2022-10-03 16:29:43:2943 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    role: 'admin'[39m
[31m          ~~~~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument role: Got invalid value 'admin' on prisma.findManyUser. Provided String, expected EnumRoleFilter or Role:[39m
[31mtype EnumRoleFilter {[39m
[31m  equals?: Role[39m
[31m  in?: List<Role>[39m
[31m  notIn?: List<Role>[39m
[31m  not?: Role | NestedEnumRoleFilter[39m
[31m}[39m
[31mtype EnumRoleFilter {[39m
[31m  equals?: Role[39m
[31m  in?: List<Role>[39m
[31m  notIn?: List<Role>[39m
[31m  not?: Role | NestedEnumRoleFilter[39m
[31m}[39m

[31m[39m
2022-10-03 17:00:06:06 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: Do not know how to serialize a BigInt[39m
2022-10-03 17:11:00:110 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 30,[39m
[31m  where: {[39m
[31m    isActive: 'true'[39m
[31m              ~~~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument isActive: Got invalid value 'true' on prisma.findManyStudent. Provided String, expected BoolFilter or Boolean:[39m
[31mtype BoolFilter {[39m
[31m  equals?: Boolean[39m
[31m  not?: Boolean | NestedBoolFilter[39m
[31m}[39m
[31mtype BoolFilter {[39m
[31m  equals?: Boolean[39m
[31m  not?: Boolean | NestedBoolFilter[39m
[31m}[39m

[31m[39m
2022-10-03 17:32:49:3249 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    role: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    _count: true,[39m
[31m    ~~~~~~[39m
[31m?   studentAccount?: true,[39m
[31m?   lecturerAccount?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `_count` for include statement on model User. Available options are listed in green.[39m
[31m[39m
2022-10-03 17:33:01:331 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.findMany()` invocation:[39m

[31m{[39m
[31m  include: {[39m
[31m    _count: true,[39m
[31m    ~~~~~~[39m
[31m?   studentAccount?: true,[39m
[31m?   lecturerAccount?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `_count` for include statement on model User. Available options are listed in green.[39m
[31m[39m
2022-10-03 17:49:11:4911 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Invalid status code: {[39m
[31m  then: [Function: then],[39m
[31m  catch: [Function: catch],[39m
[31m  finally: [Function: finally],[39m
[31m  requestTransaction: [Function: requestTransaction],[39m
[31m  [Symbol(Symbol.toStringTag)]: 'PrismaPromise'[39m
[31m}[39m
2022-10-03 17:49:14:4914 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Invalid status code: {[39m
[31m  then: [Function: then],[39m
[31m  catch: [Function: catch],[39m
[31m  finally: [Function: finally],[39m
[31m  requestTransaction: [Function: requestTransaction],[39m
[31m  [Symbol(Symbol.toStringTag)]: 'PrismaPromise'[39m
[31m}[39m
2022-10-03 17:53:43:5343 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Invalid status code: {[39m
[31m  then: [Function: then],[39m
[31m  catch: [Function: catch],[39m
[31m  finally: [Function: finally],[39m
[31m  requestTransaction: [Function: requestTransaction],[39m
[31m  [Symbol(Symbol.toStringTag)]: 'PrismaPromise'[39m
[31m}[39m
2022-10-03 19:18:58:1858 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-03 19:19:33:1933 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-03 19:20:01:201 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-03 19:20:15:2015 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     has?: String | null,[39m
[31m?     equals?: String[] | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-03 19:39:53:3953 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:40:23:4023 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:41:36:4136 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:41:41:4141 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:41:48:4148 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:41:49:4149 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:42:15:4215 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:42:27:4227 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:42:38:4238 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:43:57:4357 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:46:02:462 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:46:10:4610 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:46:26:4626 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:46:34:4634 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:47:20:4720 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:48:34:4834 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-03 19:48:36:4836 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-04 20:35:15:3515 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.createMany()` invocation:[39m

[31m{[39m
[31m  data: [[39m
[31m    {[39m
[31m      email: 'faizseptianifirdaus@it.student.pens.ac.id',[39m
[31m      username: 'faizseptiani',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'Faiz Septiani Firdaus',[39m
[31m          nrp: '2103191033',[39m
[31m          isActive: true,[39m
[31m          project: {[39m
[31m            create: {[39m
[31m              title: 'SISTEM INFORMASI PENGELOLAAN DATA OBAT PADA POLIKLINIK POLITEKNIK ELEKTRONIKA NEGERI SURABAYA',[39m
[31m              description: 'Sistem yang digunakan pada saat ini di Klinik dalam menyediakan obat untuk segi proses peng-inputan data dan pembuatan laporan masih dilakukan secara manual. Maka perlu adanya sistem informasi yang akurat dalam memberikan akses pelayanan yang cepat bagi Klinik ini.',[39m
[31m              abstract: 'Klinik PENS (Politeknik Elektronika Negeri Surabaya) merupakan klinik kesehatan yang bertujuan memberikan layanan kesehatan khususnya kepada mahasiswa, dosen dan pegawai yang berada di lingkungan kampus. Sistem yang digunakan pada saat ini di Klinik dalam menyediakan obat untuk segi proses peng-inputan data dan pembuatan laporan masih dilakukan secara manual. Maka perlu adanya sistem informasi yang akurat dalam memberikan akses pelayanan yang cepat bagi Klinik ini. Dengan memanfaatkan sistem informasi pengelolaan data obat berbasis website ini, memudahkan proses peng-inputan rekap obat, pencarian data obat, serta membuat rekap laporan obat. Sehingga menjadikan pekerjaan lebih efektif dan akurat. Dengan adanya sistem informasi pengelolaan data obat ini, maka proses peng-inputan pada setiap data dan cetakan laporan akan jadi lebih efektif dan efisien. Dalam sistem ini terdapat dua orang pengguna yang terdiri atas dokter dan bagian umum. Fasilitas dari masing-masing pengguna berbeda-beda, sesuai dengan tugasnya masing-masing. Fasilitas untuk dokter adalah memasukkan data keluhan dari pasien, memasukkan data resep obat, memasukkan data obat. Sedangkan untuk bagian umum PENS yaitu melihat laporan dan menerima permintaan restock obat. Berdasarkan rancangan sistem tersebut, dalam proyek akhir ini bagian sistem untuk pengelolaan data obat yang ditanganin oleh dokter klinik dibangun dengan menggunakan Bahasa pemrograman PHP (Hypertext Preprocessor) untuk penulisan script web.',[39m
[31m              images: [[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/1.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/2.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/3.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/4.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/5.png'[39m
[31m              ],[39m
[31m              video: 'https://youtu.be/sW2mZ9TSWqw',[39m
[31m              documents: [[39m
[31m                {[39m
[31m                  name: 'Buku PA - 2103191033 - Faiz Septiani Firdaus - faiz septiani.pdf',[39m
[31m                  url: 'https://drive.google.com/file/d/1rK7fo8LegWWqJG51BPGI4MokdCwYtsOS/view?usp=sharing'[39m
[31m                }[39m
[31m              ],[39m
[31m              tech: [[39m
[31m                'Laravel',[39m
[31m                'MySQL'[39m
[31m              ],[39m
[31m              isActive: true,[39m
[31m              lecturers: {[39m
[31m                connectOrCreate: [[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Dr. Arna Fariza, S.Kom., M.Kom.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Dr. Arna Fariza, S.Kom., M.Kom.',[39m
[31m                      nip: '197107081999032001',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'arnafariza',[39m
[31m                          email: 'arna@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  },[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Rengga Asmara, S.Kom., M.T.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Rengga Asmara, S.Kom., M.T.',[39m
[31m                      nip: '198105082005011002',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'rengga',[39m
[31m                          email: 'rengga@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  }[39m
[31m                ][39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    {[39m
[31m      email: 'iputugedeverdhanggamahandya',[39m
[31m      username: 'iputugedeverdhanggamahandya',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'I Putu Gede Verdhangga Mahandya',[39m
[31m          nrp: '2110181017',[39m
[31m          isActive: true,[39m
[31m          project: {[39m
[31m            create: {[39m
[31m              title: 'RANCANG BANGUN LEARNING ANALYTICS DASHBOARD PADA APLIKASI ETHOL KAMPUS PENS UNTUK MENGUKUR INTERAKSI PEMBELAJARAN',[39m
[31m              description: 'Pandemi COVID-19 menyebabkan banyak sekolah ditiap jenjang, harus dipaksa melakukan pembelajaran berbasis online (Work From Home) secara mendadak dimana salah satunya adalah Politeknik Elektronika Negeri Surabaya. Hal ini menyebabkan dosen dan mahasiswa harus terbiasa beradaptasi terhadap sistem belajar yang baru.',[39m
[31m              abstract: 'Pandemi COVID-19 menyebabkan banyak sekolah ditiap jenjang, harus dipaksa melakukan pembelajaran berbasis online (Work From Home) secara mendadak dimana salah satunya adalah Politeknik Elektronika Negeri Surabaya. Hal ini menyebabkan dosen dan mahasiswa harus terbiasa beradaptasi terhadap sistem belajar yang baru. Salah satu hal yang menjadi permasalahan penting dalam proses pembelajaran online adalah pengawasan dan juga penilaian keaktifan siswa dalam kelas online. Learning Analytics Dashboard merupakan salah satu solusi yang dapat dipakai untuk menyelesaikan permasalahan tersebut. Teknik ini menggunakan data aktifitas mahasiswa pada pembelajaran online yang nantinya diolah untuk menampilkan data berupa statistik yang berhubungan dengan aktifitas mahasiswa. Hasil akhir dari penelitian ini berupa hasil ukur interaksi pembelajaran dalam bentuk dashboard pada aplikasi ETHOL kampus PENS',[39m
[31m              images: [[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/6.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/7.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/8.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/9.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/10.png'[39m
[31m              ],[39m
[31m              video: 'https://youtu.be/sW2mZ9TSWqw',[39m
[31m              documents: [[39m
[31m                {[39m
[31m                  name: 'Buku PA_2110181017_I Putu Gede Verdhangga Mahandya - Tude Verdhangga.pdf',[39m
[31m                  url: 'https://drive.google.com/file/d/1Q5jM1t7lhuQb5QJHIURl52LPx9_PmmXK/view?usp=sharing'[39m
[31m                }[39m
[31m              ],[39m
[31m              tech: [[39m
[31m                'Nuxt js',[39m
[31m                'Oracle db',[39m
[31m                'Chart js',[39m
[31m                'Express js'[39m
[31m              ],[39m
[31m              isActive: true,[39m
[31m              lecturers: {[39m
[31m                connectOrCreate: [[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'M. Udin Harun Al Rasyid, S.Kom., Ph.D.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'M. Udin Harun Al Rasyid, S.Kom., Ph.D.',[39m
[31m                      nip: '198108082005011001',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'udinharun',[39m
[31m                          email: 'udinharun@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  },[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Dwi Susanto, S.ST., MT.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Dwi Susanto, S.ST., MT.',[39m
[31m                      nip: '198308032014041001',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'dwisusanto',[39m
[31m                          email: 'dwisusanto@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  }[39m
[31m                ][39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    {[39m
[31m      email: 'chandrakirana@it.student.pens.ac.id',[39m
[31m      username: 'chandrakirana',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'Chandra Kirana Jatu Indraswari',[39m
[31m          nrp: '2110181033',[39m
[31m          isActive: true,[39m
[31m          project: {[39m
[31m            create: {[39m
[31m              title: 'PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT',[39m
[31m              description: 'UX Design yang baik mampu meningkatkan presentase pengunjung website atau conversion rate sebesar 400%, sedangkan aplikasi dengan user interface yang baik hanya mampu meningkatkan conversion rate sekitar 200%.',[39m
[31m              abstract: 'UX Design menjadi pertimbangan penting dalam mengembangkan produk. UX Design yang baik mampu meningkatkan presentase pengunjung website atau conversion rate sebesar 400%, sedangkan aplikasi dengan user interface yang baik hanya mampu meningkatkan conversion rate sekitar 200%. Pada umumnya, pendokumentasian proses UX Design dilakukan dengan cara manual yaitu melalui kertas atau workbook yang menyebabkan rendahnya shareability antar anggota tim. Proyek akhir ini bertujuan untuk mengembangkan aplikasi baru terkait proses pembuatan dokumen UX Design. Proyek akhir menggunakan metode the five planes yang terdiri dari 5 lapisan, yaitu strategy plane, scope plane, structure plane, skeleton plane, dan surface plane. Fitur yang disediakan adalah (1) SWOT, (2) comparison matrix, (3) lean canvas, (4) project statement, (5) user persona, (6) empathy map, dan (7) user story. Selain itu ada fitur tambahan seperti invite member untuk kolaborasi dan fitur add link documentation antara lain adalah add link mobile version, web version, figma, github, dan spreedsheet. Uji coba dilakukan kepada Mahasiswa IT PENS angkatan 2020 sebanyak 20 orang. Nilai usability yang diukur mencakup efektivitas, efisiensi, dan kepuasan pengguna. Hasil uji coba menunjukkan bahwa nilai efektivitas aplikasi adalah 94%, efisiensi 91%, dan rata-rata kepuasaan adalah 45%. Aplikasi telah lebih mudah digunakan pengguna dibuktikan dengan nilai kepuasan di atas 0 serta nilai efektifitas dan efisiensi yang masuk kategori good.',[39m
[31m              images: [[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/11.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/12.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/13.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/14.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/15.png'[39m
[31m              ],[39m
[31m              video: 'https://youtu.be/sW2mZ9TSWqw',[39m
[31m              documents: [[39m
[31m                {[39m
[31m                  name: 'Buku PA_2110181033_Chandra Kirana Jatu Indraswari - Chandra Kirana Jatu Indraswari.pdf',[39m
[31m                  url: 'https://drive.google.com/file/d/1ISjcqDfCK1MhXDg_JDFSc-EWWrGLOcgh/view?usp=sharing'[39m
[31m                }[39m
[31m              ],[39m
[31m              tech: [[39m
[31m                'Laravel',[39m
[31m                'MySQL'[39m
[31m              ],[39m
[31m              isActive: true,[39m
[31m              lecturers: {[39m
[31m                connectOrCreate: [[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Desy Intan Permatasari, S.Kom., M.Kom.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Desy Intan Permatasari, S.Kom., M.Kom.',[39m
[31m                      nip: '198603232015042004',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'desy',[39m
[31m                          email: 'desy@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  },[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Fadilah Fahrul Hardiansyah, S.ST., M.Kom.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Fadilah Fahrul Hardiansyah, S.ST., M.Kom.',[39m
[31m                      nip: '198901292019031013',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'fahrul',[39m
[31m                          email: 'fahrul@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  },[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Maulidan Bagus Afridian Rasyid, S.Kom'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Fadilah Fahrul Hardiansyah, S.ST., M.Kom.',[39m
[31m                      nip: '012018111001',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'maulidanbagus',[39m
[31m                          email: 'maulidanbagus@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  }[39m
[31m                ][39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    {[39m
[31m      email: 'bagusadlanfadhilah@it.student.pens.ac.id',[39m
[31m      username: 'bagusadlanfadhilah',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'Bagus Adlan Fadhilah',[39m
[31m          nrp: '2103191057',[39m
[31m          isActive: true,[39m
[31m          project: {[39m
[31m            create: {[39m
[31m              title: 'SISTEM INFORMASI PENUNJANG KENAIKAN JABATAN DOSEN DI KAMPUS PENS BERDASARKAN KUM A (PENDIDIKAN) DAN KUM D (PENUNJANG) BEBASIS WEBSITE',[39m
[31m              description: 'Jabatan fungsional dosen adalah kedudukan yang menunjukkan tugas, tanggung jawab, wewenang dan hak seseorang dosen dalam suatu satuan pendidikan tinggi yang dalam pelaksanaannya didasarkan pada keahlian tertentu serta bersifat mandiri.',[39m
[31m              abstract: 'Jabatan fungsional dosen adalah kedudukan yang menunjukkan tugas, tanggung jawab, wewenang dan hak seseorang dosen dalam suatu satuan pendidikan tinggi yang dalam pelaksanaannya didasarkan pada keahlian tertentu serta bersifat mandiri. Fungsi kenaikan jabatan fungsional dosen sangat penting bagi akreditasi perguruan tinggi tempat dosen bernaung. Tetapi, proses kenaikan jabatan fungsional dosen memiliki sejumlah permasalahan yang ditemui dalam prosesnya, yaitu dosen tidak memiliki insiatif sendiri untuk melakukan pengajuan kenaikan, karena banyak dosen tidak mengetahui berapa angka kredit yang sudah didapatkannya dan tidak mengetahui bagaimana cara menghitung angka kredit. Dalam proyek akhir ini memberikan solusi untuk menghitung angka kredit secara otomatis yang diinputkan oleh dosen. Hasil dari pengujian dalam mengatasi masalah perhitungan angka kredit menghasilkan sistem yang dapat bekerja dengan baik dan benar sesuai dengan Pedoman Operasional Penilaian Angka Kredit Kenaikan Jabatan Akademik/Pangkat Dosen. Dan sistem dapat memberikan pesan ketika angka kredit sudah memenuhi syara untuk naik jabatan.',[39m
[31m              images: [[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/16.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/17.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/18.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/19.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/20.png'[39m
[31m              ],[39m
[31m              video: 'https://youtu.be/sW2mZ9TSWqw',[39m
[31m              documents: [[39m
[31m                {[39m
[31m                  name: 'Buku_PA_2103191057_Bagus Adlan Fadhilah - B57 - Bagus Adlan.pdf',[39m
[31m                  url: 'https://drive.google.com/file/d/1kiRGK6c_sOzsyygk6EKtS5hneg-tAq69/view?usp=sharing'[39m
[31m                }[39m
[31m              ],[39m
[31m              tech: [[39m
[31m                'PHP',[39m
[31m                'Oracle db'[39m
[31m              ],[39m
[31m              isActive: true,[39m
[31m              lecturers: {[39m
[31m                connectOrCreate: [[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Rosiyah Faradisa, S.Si., M.Si.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Rosiyah Faradisa, S.Si., M.Si.',[39m
[31m                      nip: '198607032009122004',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'rosyidah',[39m
[31m                          email: 'rosyidah@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  },[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Ferry Astika Saputra, S.T., M.Sc.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Ferry Astika Saputra, S.T., M.Sc.',[39m
[31m                      nip: '197708232001121002',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'ferry',[39m
[31m                          email: 'ferry@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  }[39m
[31m                ][39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    {[39m
[31m      email: 'rizkyputraramadan@it.student.pens.ac.id',[39m
[31m      username: 'rizkyputraramadan',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'Rizky Putra Ramadan',[39m
[31m          nrp: '2103191001',[39m
[31m          isActive: true,[39m
[31m          project: {[39m
[31m            create: {[39m
[31m              title: 'SISTEM INFORMASI PENGAJUAN DANA ORGANISASI MAHASISWA PENS BERBASIS WEBSITE',[39m
[31m              description: 'Dalam pembuatan proposal pengajuan dana kegiatan, mahasiswa membutuhkan waktu yang lama dalam pembuatan proposal. Selain itu, mahasiswa yang mengajukan proposal kegiatan sering mengajukan terlambat.',[39m
[31m              abstract: 'Organisasi mahasiswa atau biasa disebut dengan ormawa merupakan organisasi yang menjadi wahana dan sarana pengembangan diri mahasiswa ke arah perluasan wawasan, peningkatan kecendekiawanan serta integritas pribadi dalam menyikapi permasalahan kampus, masyarakat, dan bangsa. Dalam pembuatan proposal pengajuan dana kegiatan, mahasiswa membutuhkan waktu yang lama dalam pembuatan proposal. Selain itu, mahasiswa yang mengajukan proposal kegiatan sering mengajukan terlambat. Padahal, proposal yang diajukan seharusnya diserahkan 1 minggu sebelum kegiatan tersebut dilaksanakan. Terdapat ormawa yang tidak tepat waktu dalam kepergantian kepengurusan. Yang mana seharusnya berada di awal atau akhir tahun namun ada ormawa yang melakukan pergantian kepengurusan pada pertengahan tahun. Sehingga apabila ormawa tersebut bertanya ke kemahasiswaan mengenai sisa anggaran dana untuk ormawa tersebut, dari kemahasiswaan sulit untuk menghitung sisa dana untuk ormawa tersebut. Metode Penelitian yang digunakan pada penelitian kali ini menggunakan metode survey. yang mana paneliti memberi gform kepada stackholder untuk mengetahui website yang akan dibangun seperti apa Dengan adanya permasalahan yang ada pada sistem pengajuan proposal dana kegiatan politeknik elektronika negeri Surabaya saat ini, penulis menawarkan penelitian untuk mengimplementasikan Pembangunan website Pengajuan dana Kegiatan mahasiswa dan monitoring dana pengajuan Mahasiswa. Diharapkan dengan pembangunan website ini dapat membantu mahasiswa dalam pengajuan kegiatan dan menyelesaikan permasalahan pengajuan dana proposal organisasi mahasiswa pada sistem saat ini bagi pihak kemahasiswaan pens diharapkan lebih memberikan informasi secara jelas agar mahasiswa tidak bingung untuk ngeajukan dana kegiatan dan juga dari mahasiswa yang sudah memiliki pengalaman untuk mengajukan dana kegaiatan ormawa diharapkan untuk memberikan ilmunya kepada adik- adiknya.',[39m
[31m              images: [[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/21.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/22.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/23.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/24.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/25.png'[39m
[31m              ],[39m
[31m              video: 'https://youtu.be/sW2mZ9TSWqw',[39m
[31m              documents: [[39m
[31m                {[39m
[31m                  name: 'BukuPA_2103191001_Rizky Putra Ramadan - A01 - Rizky.pdf',[39m
[31m                  url: 'https://drive.google.com/file/d/1xrR15FjFAgZlOvNWrgKf6s9Ll6ge9zYg/view?usp=sharing'[39m
[31m                }[39m
[31m              ],[39m
[31m              tech: [[39m
[31m                'PHP'[39m
[31m              ],[39m
[31m              isActive: true,[39m
[31m              lecturers: {[39m
[31m                connectOrCreate: [[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Yanuar Risah Prayogi, S.Kom., M.Kom.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Yanuar Risah Prayogi, S.Kom., M.Kom.',[39m
[31m                      nip: '198801062019031009',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'yanuar',[39m
[31m                          email: 'yanuar@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  },[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Muarifin, S.ST., M.T.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Muarifin, S.ST., M.T.',[39m
[31m                      nip: '198812032020121001',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'muarifin',[39m
[31m                          email: 'muarifin@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  }[39m
[31m                ][39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    {[39m
[31m      email: 'ditobektiwibowo@it.student.pens.ac.id',[39m
[31m      username: 'ditobektiwibowo',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'Dito Bekti Wibowo',[39m
[31m          nrp: '2103191009',[39m
[31m          isActive: true,[39m
[31m          project: {[39m
[31m            create: {[39m
[31m              title: 'SISTEM INFORMASI BENCANA BPBD JAWA TIMUR BERBASIS MOBILE',[39m
[31m              description: 'Belum adanya fasilitas bagi BPBD Jawa Timur untuk pengkoordinasian rencana penanganan bencana, pengiriman sumber daya bantuan, penyaluran donasi, penyebaran informasi, laporan rekapan data.',[39m
[31m              abstract: 'Badan Penanggulangan Bencana Daerah (BPBD) adalah lembaga pemerintah non-departemen yang melaksanakan tugas penanggulangan bencana di daerah baik Provinsi maupun Kabupaten/ Kota. Namun belum adanya fasilitas bagi BPBD Jawa Timur untuk pengkoordinasian rencana penanganan bencana, pengiriman sumber daya bantuan, penyaluran donasi, penyebaran informasi, laporan rekapan data. Tidak adanya wadah dan monitoring untuk penyaluran donasi oleh donatur. Sehingga semua kegiatan dilakukan secara menual. Kearena itu kegiatan laporan akhir ini menghasilkan suatu aplikasi Sitem Informasi Bencana Badan Penanggulangan Bencana Daerah Jawa Timur. Aplikasi ini menghubungkan BPBD Jawa Timur dengan instansi dan masyarakat sehinga proses penanganan bencana digititalisasi. Pembuatan Aplikasi Mobile Sistem Informasi Bencana BPBD Jawa Timur berhasil diselesaikan sesuai kebutuhan pengguna dan telah dilakukan pengujian. Pengujian dengan metode usability testing, didapatkan persentase kelayakan dari total 6 responden setiap aplikasi mobile sebesar 95 %. Sehingga diharapkan dengan aplikasi ini mempermudah tugas BPBD Jawa Timur, instansi, dan masyarakat jadi mudah.',[39m
[31m              images: [[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/26.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/27.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/28.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/29.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/30.png'[39m
[31m              ],[39m
[31m              video: 'https://youtu.be/sW2mZ9TSWqw',[39m
[31m              documents: [[39m
[31m                {[39m
[31m                  name: 'BukuPA_2103191009_Dito Bekti Wibowo - A09-Dito Bekti Wibowo.pdf',[39m
[31m                  url: 'https://drive.google.com/file/d/1PoCi0m2sgKcIvGObcXnnrJLI6gBAs1du/view?usp=sharing'[39m
[31m                }[39m
[31m              ],[39m
[31m              tech: [[39m
[31m                'Flutter',[39m
[31m                'Laravel',[39m
[31m                'Firebase'[39m
[31m              ],[39m
[31m              isActive: true,[39m
[31m              lecturers: {[39m
[31m                connectOrCreate: [[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Wiratmoko Yuwono, S.T., M.T'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Wiratmoko Yuwono, S.T., M.T',[39m
[31m                      nip: '1917911212005011003',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'moko',[39m
[31m                          email: 'moko@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  },[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Andhik Ampuh Yunanto, S.Kom., M.Kom.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Andhik Ampuh Yunanto, S.Kom., M.Kom.',[39m
[31m                      nip: '199208022019031013',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'andhik',[39m
[31m                          email: 'andhik@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  }[39m
[31m                ][39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    {[39m
[31m      email: 'febryprasetya@it.student.pens.ac.id',[39m
[31m      username: 'febryprasetya',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'Febry Prasetya',[39m
[31m          nrp: '2103191018',[39m
[31m          isActive: true,[39m
[31m          project: {[39m
[31m            create: {[39m
[31m              title: 'SISTEM INFORMASI CAPAIAN INDIKATOR KINERJA UTAMA PENS BERBASIS WEBSITE',[39m
[31m              description: 'Adapun Indikator Kinerja Utama Pada PTN adalah performansi PTN yang akan menentukan klasifikasi PTN serta dukungan sumberdaya dan anggaran yang akan difasilitasi oleh Direktorat Jenderal Pendidikan Tinggi.',[39m
[31m              abstract: 'Secara umum Indikator Kinerja Utama atau IKU adalah pengukuran atau indikator kinerja suatu instansi, utamanya dalam mencapai tujuan dan sasaran tertentu. Adapun Indikator Kinerja Utama Pada PTN adalah performansi PTN yang akan menentukan klasifikasi PTN serta dukungan sumberdaya dan anggaran yang akan difasilitasi oleh Direktorat Jenderal Pendidikan Tinggi. Indikator Kinerja Utama sangat mampu berkontribusi dalam pendanaan terhadap PTN dan semua PTN pasti memiliki Indikator Kinerja Utama salah satunya adalah Politeknik Elektronika Negeri Surabaya (PENS). IKU PENS disusun oleh Tim Perencanaan yang akan dikerjakan oleh Unit Kerja yang telah ditetapkan kemudian dipantau oleh jajaran direksi. IKU sendiri memiliki banyak jenis data seperti sasaran, indikator kinerja, uraian atau kriteria, formula, capaian, target, dan realisasi. Dengan banyaknya jenis data tersebut, sangat dibutuhkan pengolahan dan penyusunan data yang baik sehingga dapat terstruktur dengan semestinya. Namun saat ini pengolahan dan penyusunan IKU pada PENS masih menggunakan Microsoft Excel sehingga membutuhkan waktu yang cukup lama dan memungkinan muncul banyak kesalahan. Maka dari itu, kegiatan laporan akhir ini menghasilkan sebuah sistem informasi capaian indikator kinerja utama pens berbasis website. Sistem informasi ini akan terintegrasi dengan sistem database PENS sehingga memudahakan proses pengelolaan data IKU karena akan tersimpan langsung pada database. Adapun dilakukan juga pengujian website dan pengujian berupa blackbox testing untuk mengetahui apakah masukan dan keluaran sesuai yang diinginkan. Hasil pengujian didapatkan bahwa sistem informasi ini telah berjalan sesuai ekspektasi dan menunjukkan bahwa proses pengelolaan data IKU dapat menjadi lebih singkat dan proses penilaian IKU menjadi otomatis yang kemudian dapat mempermudah proses nilai capaian.',[39m
[31m              images: [[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/31.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/32.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/33.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/34.png',[39m
[31m                'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/35.png'[39m
[31m              ],[39m
[31m              video: 'https://youtu.be/sW2mZ9TSWqw',[39m
[31m              documents: [[39m
[31m                {[39m
[31m                  name: 'BukuPA_2103191018_Febry Prasetya - Febry Prasetya.pdf',[39m
[31m                  url: 'https://drive.google.com/file/d/1NACmJ6Zl6lc8EFDvYVGPX0Y1CDVEx75U/view?usp=sharing'[39m
[31m                }[39m
[31m              ],[39m
[31m              tech: [[39m
[31m                'PHP',[39m
[31m                'Oracle db'[39m
[31m              ],[39m
[31m              isActive: true,[39m
[31m              lecturers: {[39m
[31m                connectOrCreate: [[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Muarifin, S.ST., M.T.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Muarifin, S.ST., M.T.',[39m
[31m                      nip: '198812032020121001',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'muarifin',[39m
[31m                          email: 'muarifin@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  },[39m
[31m                  {[39m
[31m                    where: {[39m
[31m                      name: 'Dr. Idris Winarno, S.ST., M.Kom.'[39m
[31m                    },[39m
[31m                    create: {[39m
[31m                      name: 'Dr. Idris Winarno, S.ST., M.Kom.',[39m
[31m                      nip: '198203082008121001',[39m
[31m                      user: {[39m
[31m                        create: {[39m
[31m                          username: 'idris',[39m
[31m                          email: 'idris@pens.ac.id'[39m
[31m                        }[39m
[31m                      }[39m
[31m                    }[39m
[31m                  }[39m
[31m                ][39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  ],[39m
[31m  skipDuplicates: true[39m
[31m}[39m

[31mUnknown arg `studentAccount` in data.0.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m
[31mUnknown arg `studentAccount` in data.1.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m
[31mUnknown arg `studentAccount` in data.2.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m
[31mUnknown arg `studentAccount` in data.3.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m
[31mUnknown arg `studentAccount` in data.4.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m
[31mUnknown arg `studentAccount` in data.5.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m
[31mUnknown arg `studentAccount` in data.6.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m

[31m[39m
2022-10-04 23:05:38:538 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.createMany()` invocation:[39m

[31m{[39m
[31m  data: [[39m
[31m    {[39m
[31m      email: 'faizseptianifirdaus@it.student.pens.ac.id',[39m
[31m      username: 'faizseptiani',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'Faiz Septiani Firdaus',[39m
[31m          nrp: '2103191033',[39m
[31m          isActive: true[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    {[39m
[31m      email: 'iputugedeverdhanggamahandya',[39m
[31m      username: 'iputugedeverdhanggamahandya',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'I Putu Gede Verdhangga Mahandya',[39m
[31m          nrp: '2110181017',[39m
[31m          isActive: true[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    {[39m
[31m      email: 'chandrakirana@it.student.pens.ac.id',[39m
[31m      username: 'chandrakirana',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'Chandra Kirana Jatu Indraswari',[39m
[31m          nrp: '2110181033',[39m
[31m          isActive: true[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    {[39m
[31m      email: 'bagusadlanfadhilah@it.student.pens.ac.id',[39m
[31m      username: 'bagusadlanfadhilah',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'Bagus Adlan Fadhilah',[39m
[31m          nrp: '2103191057',[39m
[31m          isActive: true[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    {[39m
[31m      email: 'rizkyputraramadan@it.student.pens.ac.id',[39m
[31m      username: 'rizkyputraramadan',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'Rizky Putra Ramadan',[39m
[31m          nrp: '2103191001',[39m
[31m          isActive: true[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    {[39m
[31m      email: 'ditobektiwibowo@it.student.pens.ac.id',[39m
[31m      username: 'ditobektiwibowo',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'Dito Bekti Wibowo',[39m
[31m          nrp: '2103191009',[39m
[31m          isActive: true[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    {[39m
[31m      email: 'febryprasetya@it.student.pens.ac.id',[39m
[31m      username: 'febryprasetya',[39m
[31m      role: 'Student',[39m
[31m      studentAccount: {[39m
[31m      ~~~~~~~~~~~~~~[39m
[31m        create: {[39m
[31m          name: 'Febry Prasetya',[39m
[31m          nrp: '2103191018',[39m
[31m          isActive: true[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  ],[39m
[31m  skipDuplicates: true[39m
[31m}[39m

[31mUnknown arg `studentAccount` in data.0.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m
[31mUnknown arg `studentAccount` in data.1.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m
[31mUnknown arg `studentAccount` in data.2.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m
[31mUnknown arg `studentAccount` in data.3.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m
[31mUnknown arg `studentAccount` in data.4.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m
[31mUnknown arg `studentAccount` in data.5.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m
[31mUnknown arg `studentAccount` in data.6.studentAccount for type UserCreateManyInput. Available args:[39m

[31mtype UserCreateManyInput {[39m
[31m  id?: Int[39m
[31m  email: String[39m
[31m  username: String[39m
[31m  image?: String | Null[39m
[31m  role?: Role[39m
[31m}[39m

[31m[39m
2022-10-04 23:13:30:1330 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.createMany()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    '0': {[39m
[31m      name: 'Faiz Septiani Firdaus',[39m
[31m      nrp: '2103191033',[39m
[31m      isActive: true,[39m
[31m      user: {[39m
[31m      ~~~~[39m
[31m        connect: {[39m
[31m          email: 'faizseptianifirdaus@it.student.pens.ac.id'[39m
[31m        }[39m
[31m      },[39m
[31m+     userId: Int,[39m
[31m?     id?: Int,[39m
[31m?     bio?: String | null[39m
[31m    },[39m
[31m    '1': {[39m
[31m      name: 'I Putu Gede Verdhangga Mahandya',[39m
[31m      nrp: '2110181017',[39m
[31m      isActive: true,[39m
[31m      user: {[39m
[31m      ~~~~[39m
[31m        connect: {[39m
[31m          email: 'iputugedeverdhanggamahandya@it.student.pens.ac.id'[39m
[31m        }[39m
[31m      },[39m
[31m+     userId: Int,[39m
[31m?     id?: Int,[39m
[31m?     bio?: String | null[39m
[31m    },[39m
[31m    '2': {[39m
[31m      name: 'Chandra Kirana Jatu Indraswari',[39m
[31m      nrp: '2110181033',[39m
[31m      isActive: true,[39m
[31m      user: {[39m
[31m      ~~~~[39m
[31m        connect: {[39m
[31m          email: 'chandrakirana@it.student.pens.ac.id'[39m
[31m        }[39m
[31m      },[39m
[31m+     userId: Int,[39m
[31m?     id?: Int,[39m
[31m?     bio?: String | null[39m
[31m    },[39m
[31m    '3': {[39m
[31m      name: 'Bagus Adlan Fadhilah',[39m
[31m      nrp: '2103191057',[39m
[31m      isActive: true,[39m
[31m      user: {[39m
[31m      ~~~~[39m
[31m        connect: {[39m
[31m          email: 'bagusadlanfadhilah@it.student.pens.ac.id'[39m
[31m        }[39m
[31m      },[39m
[31m+     userId: Int,[39m
[31m?     id?: Int,[39m
[31m?     bio?: String | null[39m
[31m    },[39m
[31m    '4': {[39m
[31m      name: 'Rizky Putra Ramadan',[39m
[31m      nrp: '2103191001',[39m
[31m      isActive: true,[39m
[31m      user: {[39m
[31m      ~~~~[39m
[31m        connect: {[39m
[31m          email: 'rizkyputraramadan@it.student.pens.ac.id'[39m
[31m        }[39m
[31m      },[39m
[31m+     userId: Int,[39m
[31m?     id?: Int,[39m
[31m?     bio?: String | null[39m
[31m    },[39m
[31m    '5': {[39m
[31m      name: 'Dito Bekti Wibowo',[39m
[31m      nrp: '2103191009',[39m
[31m      isActive: true,[39m
[31m      user: {[39m
[31m      ~~~~[39m
[31m        connect: {[39m
[31m          email: 'ditobektiwibowo@it.student.pens.ac.id'[39m
[31m        }[39m
[31m      },[39m
[31m+     userId: Int,[39m
[31m?     id?: Int,[39m
[31m?     bio?: String | null[39m
[31m    },[39m
[31m    '6': {[39m
[31m      name: 'Febry Prasetya',[39m
[31m      nrp: '2103191018',[39m
[31m      isActive: true,[39m
[31m      user: {[39m
[31m      ~~~~[39m
[31m        connect: {[39m
[31m          email: 'febryprasetya@it.student.pens.ac.id'[39m
[31m        }[39m
[31m      },[39m
[31m+     userId: Int,[39m
[31m?     id?: Int,[39m
[31m?     bio?: String | null[39m
[31m    }[39m
[31m  },[39m
[31m  skipDuplicates: true[39m
[31m}[39m

[31mUnknown arg `user` in data.0.user for type StudentCreateManyInput. Did you mean `userId`?[39m
[31mArgument userId for data.0.userId is missing.[39m
[31mUnknown arg `user` in data.1.user for type StudentCreateManyInput. Did you mean `userId`?[39m
[31mArgument userId for data.1.userId is missing.[39m
[31mUnknown arg `user` in data.2.user for type StudentCreateManyInput. Did you mean `userId`?[39m
[31mArgument userId for data.2.userId is missing.[39m
[31mUnknown arg `user` in data.3.user for type StudentCreateManyInput. Did you mean `userId`?[39m
[31mArgument userId for data.3.userId is missing.[39m
[31mUnknown arg `user` in data.4.user for type StudentCreateManyInput. Did you mean `userId`?[39m
[31mArgument userId for data.4.userId is missing.[39m
[31mUnknown arg `user` in data.5.user for type StudentCreateManyInput. Did you mean `userId`?[39m
[31mArgument userId for data.5.userId is missing.[39m
[31mUnknown arg `user` in data.6.user for type StudentCreateManyInput. Did you mean `userId`?[39m
[31mArgument userId for data.6.userId is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-04 23:18:18:1818 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'SISTEM INFORMASI PENGELOLAAN DATA OBAT PADA POLIKLINIK POLITEKNIK ELEKTRONIKA NEGERI SURABAYA',[39m
[31m    description: 'Sistem yang digunakan pada saat ini di Klinik dalam menyediakan obat untuk segi proses peng-inputan data dan pembuatan laporan masih dilakukan secara manual. Maka perlu adanya sistem informasi yang akurat dalam memberikan akses pelayanan yang cepat bagi Klinik ini.',[39m
[31m    abstract: 'Klinik PENS (Politeknik Elektronika Negeri Surabaya) merupakan klinik kesehatan yang bertujuan memberikan layanan kesehatan khususnya kepada mahasiswa, dosen dan pegawai yang berada di lingkungan kampus. Sistem yang digunakan pada saat ini di Klinik dalam menyediakan obat untuk segi proses peng-inputan data dan pembuatan laporan masih dilakukan secara manual. Maka perlu adanya sistem informasi yang akurat dalam memberikan akses pelayanan yang cepat bagi Klinik ini. Dengan memanfaatkan sistem informasi pengelolaan data obat berbasis website ini, memudahkan proses peng-inputan rekap obat, pencarian data obat, serta membuat rekap laporan obat. Sehingga menjadikan pekerjaan lebih efektif dan akurat. Dengan adanya sistem informasi pengelolaan data obat ini, maka proses peng-inputan pada setiap data dan cetakan laporan akan jadi lebih efektif dan efisien. Dalam sistem ini terdapat dua orang pengguna yang terdiri atas dokter dan bagian umum. Fasilitas dari masing-masing pengguna berbeda-beda, sesuai dengan tugasnya masing-masing. Fasilitas untuk dokter adalah memasukkan data keluhan dari pasien, memasukkan data resep obat, memasukkan data obat. Sedangkan untuk bagian umum PENS yaitu melihat laporan dan menerima permintaan restock obat. Berdasarkan rancangan sistem tersebut, dalam proyek akhir ini bagian sistem untuk pengelolaan data obat yang ditanganin oleh dokter klinik dibangun dengan menggunakan Bahasa pemrograman PHP (Hypertext Preprocessor) untuk penulisan script web.',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/1.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/2.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/3.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/4.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/5.png'[39m
[31m    ],[39m
[31m    video: 'https://youtu.be/sW2mZ9TSWqw',[39m
[31m    documents: [[39m
[31m      {[39m
[31m        name: 'Buku PA - 2103191033 - Faiz Septiani Firdaus - faiz septiani.pdf',[39m
[31m        url: 'https://drive.google.com/file/d/1rK7fo8LegWWqJG51BPGI4MokdCwYtsOS/view?usp=sharing'[39m
[31m      }[39m
[31m    ],[39m
[31m    tech: [[39m
[31m      'Laravel',[39m
[31m      'MySQL'[39m
[31m    ],[39m
[31m    isActive: true,[39m
[31m    student: {[39m
[31m      connectOrCreate: {[39m
[31m        name: 'Faiz Septiani Firdaus',[39m
[31m        ~~~~[39m
[31m        nrp: '2103191033',[39m
[31m        ~~~[39m
[31m        isActive: true,[39m
[31m        ~~~~~~~~[39m
[31m        user: {[39m
[31m        ~~~~[39m
[31m          connect: {[39m
[31m            email: 'faizseptianifirdaus@it.student.pens.ac.id'[39m
[31m          }[39m
[31m        },[39m
[31m+       where: {[39m
[31m+         id?: Int,[39m
[31m+         name?: String,[39m
[31m+         nrp?: String,[39m
[31m+         userId?: Int[39m
[31m+       },[39m
[31m+       create: StudentCreateWithoutProjectInput | StudentUncheckedCreateWithoutProjectInput[39m
[31m      }[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connectOrCreate: [[39m
[31m        {[39m
[31m          where: {[39m
[31m            name: 'Dr. Arna Fariza, S.Kom., M.Kom.'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Dr. Arna Fariza, S.Kom., M.Kom.',[39m
[31m            nip: '197107081999032001',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'arnafariza',[39m
[31m                email: 'arna@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m        {[39m
[31m          where: {[39m
[31m            name: 'Rengga Asmara, S.Kom., M.T.'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Rengga Asmara, S.Kom., M.T.',[39m
[31m            nip: '198105082005011002',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'rengga',[39m
[31m                email: 'rengga@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      ][39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `name` in data.student.connectOrCreate.name for type StudentCreateOrConnectWithoutProjectInput. Did you mean `where`?[39m
[31mUnknown arg `nrp` in data.student.connectOrCreate.nrp for type StudentCreateOrConnectWithoutProjectInput.[39m
[31mUnknown arg `isActive` in data.student.connectOrCreate.isActive for type StudentCreateOrConnectWithoutProjectInput. Did you mean `create`?[39m
[31mUnknown arg `user` in data.student.connectOrCreate.user for type StudentCreateOrConnectWithoutProjectInput. Did you mean `where`?[39m
[31mArgument where for data.student.connectOrCreate.where is missing.[39m
[31mArgument create for data.student.connectOrCreate.create is missing.[39m

[31mNote: Lines with + are required[39m
[31m[39m
2022-10-04 23:24:13:2413 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'RANCANG BANGUN LEARNING ANALYTICS DASHBOARD PADA APLIKASI ETHOL KAMPUS PENS UNTUK MENGUKUR INTERAKSI PEMBELAJARAN',[39m
[31m    description: 'Pandemi COVID-19 menyebabkan banyak sekolah ditiap jenjang, harus dipaksa melakukan pembelajaran berbasis online (Work From Home) secara mendadak dimana salah satunya adalah Politeknik Elektronika Negeri Surabaya. Hal ini menyebabkan dosen dan mahasiswa harus terbiasa beradaptasi terhadap sistem belajar yang baru.',[39m
[31m    abstract: 'Pandemi COVID-19 menyebabkan banyak sekolah ditiap jenjang, harus dipaksa melakukan pembelajaran berbasis online (Work From Home) secara mendadak dimana salah satunya adalah Politeknik Elektronika Negeri Surabaya. Hal ini menyebabkan dosen dan mahasiswa harus terbiasa beradaptasi terhadap sistem belajar yang baru. Salah satu hal yang menjadi permasalahan penting dalam proses pembelajaran online adalah pengawasan dan juga penilaian keaktifan siswa dalam kelas online. Learning Analytics Dashboard merupakan salah satu solusi yang dapat dipakai untuk menyelesaikan permasalahan tersebut. Teknik ini menggunakan data aktifitas mahasiswa pada pembelajaran online yang nantinya diolah untuk menampilkan data berupa statistik yang berhubungan dengan aktifitas mahasiswa. Hasil akhir dari penelitian ini berupa hasil ukur interaksi pembelajaran dalam bentuk dashboard pada aplikasi ETHOL kampus PENS',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/6.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/7.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/8.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/9.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/10.png'[39m
[31m    ],[39m
[31m    video: 'https://youtu.be/sW2mZ9TSWqw',[39m
[31m    documents: [[39m
[31m      {[39m
[31m        name: 'Buku PA_2110181017_I Putu Gede Verdhangga Mahandya - Tude Verdhangga.pdf',[39m
[31m        url: 'https://drive.google.com/file/d/1Q5jM1t7lhuQb5QJHIURl52LPx9_PmmXK/view?usp=sharing'[39m
[31m      }[39m
[31m    ],[39m
[31m    tech: [[39m
[31m      'Nuxt js',[39m
[31m      'Oracle db',[39m
[31m      'Chart js',[39m
[31m      'Express js'[39m
[31m    ],[39m
[31m    isActive: true,[39m
[31m    student: {[39m
[31m      connectOrCreate: {[39m
[31m        where: {[39m
[31m          name: 'I Putu Gede Verdhangga Mahandya'[39m
[31m        },[39m
[31m        crerate: {[39m
[31m        ~~~~~~~[39m
[31m          name: 'I Putu Gede Verdhangga Mahandya',[39m
[31m          nrp: '2110181017',[39m
[31m          isActive: true,[39m
[31m          user: {[39m
[31m            connect: {[39m
[31m              email: 'iputugedeverdhanggamahandya@it.student.pens.ac.id'[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m+       create: StudentCreateWithoutProjectInput | StudentUncheckedCreateWithoutProjectInput[39m
[31m      }[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connectOrCreate: [[39m
[31m        {[39m
[31m          where: {[39m
[31m            name: 'M. Udin Harun Al Rasyid, S.Kom., Ph.D.'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'M. Udin Harun Al Rasyid, S.Kom., Ph.D.',[39m
[31m            nip: '198108082005011001',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'udinharun',[39m
[31m                email: 'udinharun@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m        {[39m
[31m          where: {[39m
[31m            name: 'Dwi Susanto, S.ST., MT.'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Dwi Susanto, S.ST., MT.',[39m
[31m            nip: '198308032014041001',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'dwisusanto',[39m
[31m                email: 'dwisusanto@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      ][39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `crerate` in data.student.connectOrCreate.crerate for type StudentCreateOrConnectWithoutProjectInput. Did you mean `create`?[39m
[31mArgument create for data.student.connectOrCreate.create is missing.[39m

[31mNote: Lines with + are required[39m
[31m[39m
2022-10-04 23:24:48:2448 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'RANCANG BANGUN LEARNING ANALYTICS DASHBOARD PADA APLIKASI ETHOL KAMPUS PENS UNTUK MENGUKUR INTERAKSI PEMBELAJARAN',[39m
[31m    description: 'Pandemi COVID-19 menyebabkan banyak sekolah ditiap jenjang, harus dipaksa melakukan pembelajaran berbasis online (Work From Home) secara mendadak dimana salah satunya adalah Politeknik Elektronika Negeri Surabaya. Hal ini menyebabkan dosen dan mahasiswa harus terbiasa beradaptasi terhadap sistem belajar yang baru.',[39m
[31m    abstract: 'Pandemi COVID-19 menyebabkan banyak sekolah ditiap jenjang, harus dipaksa melakukan pembelajaran berbasis online (Work From Home) secara mendadak dimana salah satunya adalah Politeknik Elektronika Negeri Surabaya. Hal ini menyebabkan dosen dan mahasiswa harus terbiasa beradaptasi terhadap sistem belajar yang baru. Salah satu hal yang menjadi permasalahan penting dalam proses pembelajaran online adalah pengawasan dan juga penilaian keaktifan siswa dalam kelas online. Learning Analytics Dashboard merupakan salah satu solusi yang dapat dipakai untuk menyelesaikan permasalahan tersebut. Teknik ini menggunakan data aktifitas mahasiswa pada pembelajaran online yang nantinya diolah untuk menampilkan data berupa statistik yang berhubungan dengan aktifitas mahasiswa. Hasil akhir dari penelitian ini berupa hasil ukur interaksi pembelajaran dalam bentuk dashboard pada aplikasi ETHOL kampus PENS',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/6.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/7.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/8.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/9.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/10.png'[39m
[31m    ],[39m
[31m    video: 'https://youtu.be/sW2mZ9TSWqw',[39m
[31m    documents: [[39m
[31m      {[39m
[31m        name: 'Buku PA_2110181017_I Putu Gede Verdhangga Mahandya - Tude Verdhangga.pdf',[39m
[31m        url: 'https://drive.google.com/file/d/1Q5jM1t7lhuQb5QJHIURl52LPx9_PmmXK/view?usp=sharing'[39m
[31m      }[39m
[31m    ],[39m
[31m    tech: [[39m
[31m      'Nuxt js',[39m
[31m      'Oracle db',[39m
[31m      'Chart js',[39m
[31m      'Express js'[39m
[31m    ],[39m
[31m    isActive: true,[39m
[31m    student: {[39m
[31m      connectOrCreate: {[39m
[31m        where: {[39m
[31m          name: 'I Putu Gede Verdhangga Mahandya'[39m
[31m        },[39m
[31m        crerate: {[39m
[31m        ~~~~~~~[39m
[31m          name: 'I Putu Gede Verdhangga Mahandya',[39m
[31m          nrp: '2110181017',[39m
[31m          isActive: true,[39m
[31m          user: {[39m
[31m            connect: {[39m
[31m              email: 'iputugedeverdhanggamahandya@it.student.pens.ac.id'[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m+       create: StudentCreateWithoutProjectInput | StudentUncheckedCreateWithoutProjectInput[39m
[31m      }[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connectOrCreate: [[39m
[31m        {[39m
[31m          where: {[39m
[31m            name: 'M. Udin Harun Al Rasyid, S.Kom., Ph.D.'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'M. Udin Harun Al Rasyid, S.Kom., Ph.D.',[39m
[31m            nip: '198108082005011001',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'udinharun',[39m
[31m                email: 'udinharun@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m        {[39m
[31m          where: {[39m
[31m            name: 'Dwi Susanto, S.ST., MT.'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Dwi Susanto, S.ST., MT.',[39m
[31m            nip: '198308032014041001',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'dwisusanto',[39m
[31m                email: 'dwisusanto@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      ][39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `crerate` in data.student.connectOrCreate.crerate for type StudentCreateOrConnectWithoutProjectInput. Did you mean `create`?[39m
[31mArgument create for data.student.connectOrCreate.create is missing.[39m

[31mNote: Lines with + are required[39m
[31m[39m
2022-10-04 23:28:16:2816 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.update()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-10-04 23:29:37:2937 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m  ~~~~~[39m
[31m    id: 3[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT',[39m
[31m    description: 'UX Design yang baik mampu meningkatkan presentase pengunjung website atau conversion rate sebesar 400%, sedangkan aplikasi dengan user interface yang baik hanya mampu meningkatkan conversion rate sekitar 200%.',[39m
[31m    abstract: 'UX Design menjadi pertimbangan penting dalam mengembangkan produk. UX Design yang baik mampu meningkatkan presentase pengunjung website atau conversion rate sebesar 400%, sedangkan aplikasi dengan user interface yang baik hanya mampu meningkatkan conversion rate sekitar 200%. Pada umumnya, pendokumentasian proses UX Design dilakukan dengan cara manual yaitu melalui kertas atau workbook yang menyebabkan rendahnya shareability antar anggota tim. Proyek akhir ini bertujuan untuk mengembangkan aplikasi baru terkait proses pembuatan dokumen UX Design. Proyek akhir menggunakan metode the five planes yang terdiri dari 5 lapisan, yaitu strategy plane, scope plane, structure plane, skeleton plane, dan surface plane. Fitur yang disediakan adalah (1) SWOT, (2) comparison matrix, (3) lean canvas, (4) project statement, (5) user persona, (6) empathy map, dan (7) user story. Selain itu ada fitur tambahan seperti invite member untuk kolaborasi dan fitur add link documentation antara lain adalah add link mobile version, web version, figma, github, dan spreedsheet. Uji coba dilakukan kepada Mahasiswa IT PENS angkatan 2020 sebanyak 20 orang. Nilai usability yang diukur mencakup efektivitas, efisiensi, dan kepuasan pengguna. Hasil uji coba menunjukkan bahwa nilai efektivitas aplikasi adalah 94%, efisiensi 91%, dan rata-rata kepuasaan adalah 45%. Aplikasi telah lebih mudah digunakan pengguna dibuktikan dengan nilai kepuasan di atas 0 serta nilai efektifitas dan efisiensi yang masuk kategori good.',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/11.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/12.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/13.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/14.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/15.png'[39m
[31m    ],[39m
[31m    video: 'https://youtu.be/sW2mZ9TSWqw',[39m
[31m    documents: [[39m
[31m      {[39m
[31m        name: 'Buku PA_2110181033_Chandra Kirana Jatu Indraswari - Chandra Kirana Jatu Indraswari.pdf',[39m
[31m        url: 'https://drive.google.com/file/d/1ISjcqDfCK1MhXDg_JDFSc-EWWrGLOcgh/view?usp=sharing'[39m
[31m      }[39m
[31m    ],[39m
[31m    tech: [[39m
[31m      'Laravel',[39m
[31m      'MySQL'[39m
[31m    ],[39m
[31m    isActive: true,[39m
[31m    student: {[39m
[31m      connectOrCreate: {[39m
[31m        where: {[39m
[31m          name: 'Chandra Kirana Jatu Indraswari'[39m
[31m        },[39m
[31m        create: {[39m
[31m          name: 'Chandra Kirana Jatu Indraswari',[39m
[31m          nrp: '2110181033',[39m
[31m          isActive: true,[39m
[31m          user: {[39m
[31m            connect: {[39m
[31m              email: 'chandrakirana@it.student.pens.ac.id'[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connectOrCreate: [[39m
[31m        {[39m
[31m          where: {[39m
[31m            name: 'Desy Intan Permatasari, S.Kom., M.Kom.'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Desy Intan Permatasari, S.Kom., M.Kom.',[39m
[31m            nip: '198603232015042004',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'desy',[39m
[31m                email: 'desy@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m        {[39m
[31m          where: {[39m
[31m            name: 'Fadilah Fahrul Hardiansyah, S.ST., M.Kom.'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Fadilah Fahrul Hardiansyah, S.ST., M.Kom.',[39m
[31m            nip: '198901292019031013',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'fahrul',[39m
[31m                email: 'fahrul@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m        {[39m
[31m          where: {[39m
[31m            name: 'Maulidan Bagus Afridian Rasyid, S.Kom'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Fadilah Fahrul Hardiansyah, S.ST., M.Kom.',[39m
[31m            nip: '012018111001',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'maulidanbagus',[39m
[31m                email: 'maulidanbagus@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      ][39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `where` in where for type Project. Did you mean `data`? Available args:[39m
[31mtype createOneProject {[39m
[31m  data: ProjectCreateInput | ProjectUncheckedCreateInput[39m
[31m}[39m

[31m[39m
2022-10-04 23:30:07:307 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`name`)[39m
2022-10-04 23:31:08:318 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`name`)[39m
2022-10-04 23:31:45:3145 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`name`)[39m
2022-10-04 23:36:10:3610 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-10-04 23:39:51:3951 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`name`)[39m
2022-10-04 23:40:50:4050 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT',[39m
[31m    description: 'UX Design yang baik mampu meningkatkan presentase pengunjung website atau conversion rate sebesar 400%, sedangkan aplikasi dengan user interface yang baik hanya mampu meningkatkan conversion rate sekitar 200%.',[39m
[31m    abstract: 'UX Design menjadi pertimbangan penting dalam mengembangkan produk. UX Design yang baik mampu meningkatkan presentase pengunjung website atau conversion rate sebesar 400%, sedangkan aplikasi dengan user interface yang baik hanya mampu meningkatkan conversion rate sekitar 200%. Pada umumnya, pendokumentasian proses UX Design dilakukan dengan cara manual yaitu melalui kertas atau workbook yang menyebabkan rendahnya shareability antar anggota tim. Proyek akhir ini bertujuan untuk mengembangkan aplikasi baru terkait proses pembuatan dokumen UX Design. Proyek akhir menggunakan metode the five planes yang terdiri dari 5 lapisan, yaitu strategy plane, scope plane, structure plane, skeleton plane, dan surface plane. Fitur yang disediakan adalah (1) SWOT, (2) comparison matrix, (3) lean canvas, (4) project statement, (5) user persona, (6) empathy map, dan (7) user story. Selain itu ada fitur tambahan seperti invite member untuk kolaborasi dan fitur add link documentation antara lain adalah add link mobile version, web version, figma, github, dan spreedsheet. Uji coba dilakukan kepada Mahasiswa IT PENS angkatan 2020 sebanyak 20 orang. Nilai usability yang diukur mencakup efektivitas, efisiensi, dan kepuasan pengguna. Hasil uji coba menunjukkan bahwa nilai efektivitas aplikasi adalah 94%, efisiensi 91%, dan rata-rata kepuasaan adalah 45%. Aplikasi telah lebih mudah digunakan pengguna dibuktikan dengan nilai kepuasan di atas 0 serta nilai efektifitas dan efisiensi yang masuk kategori good.',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/11.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/12.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/13.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/14.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/15.png'[39m
[31m    ],[39m
[31m    video: 'https://youtu.be/sW2mZ9TSWqw',[39m
[31m    documents: [[39m
[31m      {[39m
[31m        name: 'Buku PA_2110181033_Chandra Kirana Jatu Indraswari - Chandra Kirana Jatu Indraswari.pdf',[39m
[31m        url: 'https://drive.google.com/file/d/1ISjcqDfCK1MhXDg_JDFSc-EWWrGLOcgh/view?usp=sharing'[39m
[31m      }[39m
[31m    ],[39m
[31m    tech: [[39m
[31m      'Laravel',[39m
[31m      'MySQL'[39m
[31m    ],[39m
[31m    isActive: true,[39m
[31m    lecturers: {[39m
[31m      connectOrCreate: [[39m
[31m        {[39m
[31m          where: {[39m
[31m            name: 'Desy Intan Permatasari, S.Kom., M.Kom.'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Desy Intan Permatasari, S.Kom., M.Kom.',[39m
[31m            nip: '198603232015042004',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'desy',[39m
[31m                email: 'desy@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m        {[39m
[31m          where: {[39m
[31m            name: 'Fadilah Fahrul Hardiansyah, S.ST., M.Kom.'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Fadilah Fahrul Hardiansyah, S.ST., M.Kom.',[39m
[31m            nip: '198901292019031013',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'fahrul',[39m
[31m                email: 'fahrul@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m        {[39m
[31m          where: {[39m
[31m            name: 'Maulidan Bagus Afridian Rasyid, S.Kom'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Fadilah Fahrul Hardiansyah, S.ST., M.Kom.',[39m
[31m            nip: '012018111001',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'maulidanbagus',[39m
[31m                email: 'maulidanbagus@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m+   student: {[39m
[31m+     create?: StudentCreateWithoutProjectInput | StudentUncheckedCreateWithoutProjectInput,[39m
[31m+     connectOrCreate?: StudentCreateOrConnectWithoutProjectInput,[39m
[31m+     connect?: StudentWhereUniqueInput[39m
[31m+   },[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   backend?: {[39m
[31m?     create?: BackendCreateWithoutProjectInput | BackendUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: BackendCreateOrConnectWithoutProjectInput,[39m
[31m?     connect?: BackendWhereUniqueInput[39m
[31m?   },[39m
[31m?   Database?: {[39m
[31m?     create?: DatabaseCreateWithoutProjectInput | DatabaseUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: DatabaseCreateOrConnectWithoutProjectInput,[39m
[31m?     connect?: DatabaseWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument student for data.student is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-04 23:41:13:4113 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'StudentToUser' between the `Student` and `User` models.[39m
2022-10-04 23:41:47:4147 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`name`)[39m
2022-10-04 23:42:01:421 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`name`)[39m
2022-10-04 23:43:27:4327 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.update()` invocation:[39m


[31mUnique constraint failed on the fields: (`name`)[39m
2022-10-04 23:43:58:4358 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.update()` invocation:[39m


[31mUnique constraint failed on the fields: (`name`)[39m
2022-10-04 23:44:24:4424 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 15[39m
[31m  },[39m
[31m  data: {[39m
[31m    lecturers: {[39m
[31m      create: {[39m
[31m        '0': {[39m
[31m          create: {[39m
[31m          ~~~~~~[39m
[31m            name: 'Desy Intan Permatasari, S.Kom., M.Kom.',[39m
[31m            nip: '198603232015042004',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'desy',[39m
[31m                email: 'desy@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          },[39m
[31m+         name: String,[39m
[31m+         nip: String,[39m
[31m+         user: {[39m
[31m+           create?: UserCreateWithoutLecturerAccountInput | UserUncheckedCreateWithoutLecturerAccountInput,[39m
[31m+           connectOrCreate?: UserCreateOrConnectWithoutLecturerAccountInput,[39m
[31m+           connect?: UserWhereUniqueInput[39m
[31m+         },[39m
[31m?         isActive?: Boolean[39m
[31m        },[39m
[31m        '1': {[39m
[31m          create: {[39m
[31m          ~~~~~~[39m
[31m            name: 'Fadilah Fahrul Hardiansyah, S.ST., M.Kom.',[39m
[31m            nip: '198901292019031013',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'fahrul',[39m
[31m                email: 'fahrul@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          },[39m
[31m+         name: String,[39m
[31m+         nip: String,[39m
[31m+         user: {[39m
[31m+           create?: UserCreateWithoutLecturerAccountInput | UserUncheckedCreateWithoutLecturerAccountInput,[39m
[31m+           connectOrCreate?: UserCreateOrConnectWithoutLecturerAccountInput,[39m
[31m+           connect?: UserWhereUniqueInput[39m
[31m+         },[39m
[31m?         isActive?: Boolean[39m
[31m        },[39m
[31m        '2': {[39m
[31m          create: {[39m
[31m          ~~~~~~[39m
[31m            name: 'Fadilah Fahrul Hardiansyah, S.ST., M.Kom.',[39m
[31m            nip: '012018111001',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'maulidanbagus',[39m
[31m                email: 'maulidanbagus@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          },[39m
[31m+         name: String,[39m
[31m+         nip: String,[39m
[31m+         user: {[39m
[31m+           create?: UserCreateWithoutLecturerAccountInput | UserUncheckedCreateWithoutLecturerAccountInput,[39m
[31m+           connectOrCreate?: UserCreateOrConnectWithoutLecturerAccountInput,[39m
[31m+           connect?: UserWhereUniqueInput[39m
[31m+         },[39m
[31m?         isActive?: Boolean[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `create` in data.lecturer.create.0.create for type LecturerCreateWithoutProjectInput. Did you mean `name`?[39m
[31mArgument name for data.lecturer.create.0.name is missing.[39m
[31mArgument nip for data.lecturer.create.0.nip is missing.[39m
[31mArgument user for data.lecturer.create.0.user is missing.[39m
[31mUnknown arg `create` in data.lecturer.create.1.create for type LecturerCreateWithoutProjectInput. Did you mean `name`?[39m
[31mArgument name for data.lecturer.create.1.name is missing.[39m
[31mArgument nip for data.lecturer.create.1.nip is missing.[39m
[31mArgument user for data.lecturer.create.1.user is missing.[39m
[31mUnknown arg `create` in data.lecturer.create.2.create for type LecturerCreateWithoutProjectInput. Did you mean `name`?[39m
[31mArgument name for data.lecturer.create.2.name is missing.[39m
[31mArgument nip for data.lecturer.create.2.nip is missing.[39m
[31mArgument user for data.lecturer.create.2.user is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-04 23:45:59:4559 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.update()` invocation:[39m


[31mUnique constraint failed on the fields: (`name`)[39m
2022-10-05 00:08:30:830 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"SISTEM INFORMASI\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-05 00:14:22:1422 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-05 00:14:24:1424 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter,[39m
[31m?   backend?: BackendRelationFilter | BackendWhereInput | null,[39m
[31m?   Database?: DatabaseRelationFilter | DatabaseWhereInput | null[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-05 00:17:06:176 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      search: 'nuxt'[39m
[31m      ~~~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `search` in where.tech.search for type StringNullableListFilter. Did you mean `select`? Available args:[39m
[31mtype StringNullableListFilter {[39m
[31m  equals?: List<String> | Null[39m
[31m  has?: String | Null[39m
[31m  hasEvery?: List<String>[39m
[31m  hasSome?: List<String>[39m
[31m  isEmpty?: Boolean[39m
[31m}[39m

[31m[39m
2022-10-05 00:32:12:3212 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-05 00:32:13:3213 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-05 00:32:14:3214 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-05 00:32:14:3214 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-05 00:32:14:3214 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: result is not defined[39m
2022-10-05 00:36:00:360 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: '1'[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value '1' on prisma.findFirstStudent. Provided String, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-05 00:36:02:362 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: '1'[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value '1' on prisma.findFirstStudent. Provided String, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-05 00:36:02:362 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: '1'[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value '1' on prisma.findFirstStudent. Provided String, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-05 00:36:03:363 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: '1'[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value '1' on prisma.findFirstStudent. Provided String, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-05 00:36:04:364 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: '1'[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value '1' on prisma.findFirstStudent. Provided String, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-05 14:16:44:1644 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: '1',[39m
[31m        ~~~[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument take: Got invalid value '1' on prisma.findManyProject. Provided String, expected Int.[39m

[31m[39m
2022-10-05 20:57:23:5723 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 20:57:25:5725 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 20:57:27:5727 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 20:58:10:5810 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 20:59:01:591 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 30,[39m
[31m  where: {[39m
[31m    isActive: null,[39m
[31m              ~~~~[39m
[31m    name: {[39m
[31m      search: undefined[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument isActive for where.isActive must not be null. Please use undefined instead.[39m

[31m[39m
2022-10-05 20:59:19:5919 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 21:00:09:09 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 21:00:20:020 [31merror[39m: [31m[GET] /admin/list-user >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 21:05:21:521 [31merror[39m: [31m[GET] /admin/list-lecturer >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 21:06:46:646 [31merror[39m: [31m[GET] /admin/list-lecturer >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 21:07:25:725 [31merror[39m: [31m[GET] /admin/list-lecturer >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 21:07:38:738 [31merror[39m: [31m[GET] /admin/list-lecturer >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 21:07:49:749 [31merror[39m: [31m[GET] /admin/list-lecturer >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 21:07:56:756 [31merror[39m: [31m[GET] /admin/list-lecturer >> StatusCode:: 500, Message:: isActive is not defined[39m
2022-10-05 21:11:14:1114 [31merror[39m: [31m[GET] /admin/list-student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: '100',[39m
[31m        ~~~~~[39m
[31m  where: {[39m
[31m    isActive: undefined,[39m
[31m    name: {[39m
[31m      search: undefined[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument take: Got invalid value '100' on prisma.findManyStudent. Provided String, expected Int.[39m

[31m[39m
2022-10-05 21:45:17:4517 [31merror[39m: [31m[PATCH] /admin/activate-student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  data: {[39m
[31m    isActive: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.updateOneStudent. Provided Float, expected Int.[39m

[31m[39m
2022-10-05 21:45:56:4556 [31merror[39m: [31m[PATCH] /admin/activate-student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  data: {[39m
[31m    isActive: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.updateOneStudent. Provided Float, expected Int.[39m

[31m[39m
2022-10-05 21:46:24:4624 [31merror[39m: [31m[PATCH] /admin/activate-student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  data: {[39m
[31m    isActive: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.updateOneStudent. Provided Float, expected Int.[39m

[31m[39m
2022-10-05 21:49:09:499 [31merror[39m: [31m[PATCH] /admin/activate-lecturer >> StatusCode:: 500, Message:: students is not defined[39m
2022-10-05 21:50:24:5024 [31merror[39m: [31m[PATCH] /admin/activate-lecturer >> StatusCode:: 500, Message:: students is not defined[39m
2022-10-06 14:37:17:3717 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -24")[39m
2022-10-06 14:37:18:3718 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -36")[39m
2022-10-06 14:37:18:3718 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -48")[39m
2022-10-06 14:37:18:3718 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -60")[39m
2022-10-06 14:37:18:3718 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -72")[39m
2022-10-06 14:37:19:3719 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -84")[39m
2022-10-06 14:37:19:3719 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -96")[39m
2022-10-06 14:37:19:3719 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -108")[39m
2022-10-06 14:37:19:3719 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -120")[39m
2022-10-06 14:37:19:3719 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -132")[39m
2022-10-06 14:37:20:3720 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -120")[39m
2022-10-06 14:37:20:3720 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -108")[39m
2022-10-06 14:37:20:3720 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -96")[39m
2022-10-06 14:37:21:3721 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -84")[39m
2022-10-06 14:37:21:3721 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -72")[39m
2022-10-06 14:37:21:3721 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -60")[39m
2022-10-06 14:37:21:3721 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -48")[39m
2022-10-06 14:37:21:3721 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -36")[39m
2022-10-06 14:37:22:3722 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError in query graph construction: AssertionError("Invalid value for skip argument: Value can only be positive, found: -24")[39m
2022-10-06 21:31:40:3140 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findFirstStudent. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-06 21:32:27:3227 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findFirstStudent. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-07 19:42:16:4216 [31merror[39m: [31m[GET] /get-student-profile >> StatusCode:: 500, Message:: No Student found[39m
2022-10-07 20:14:51:1451 [31merror[39m: [31m[GET] /get-lecturer-profile >> StatusCode:: 500, Message:: lecturerName is not defined[39m
2022-10-07 20:15:20:1520 [31merror[39m: [31m[GET] /get-lecturer-profile >> StatusCode:: 500, Message:: lecturerName is not defined[39m
2022-10-07 21:00:30:030 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: No User found[39m
2022-10-07 21:00:40:040 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: No User found[39m
2022-10-07 21:00:48:048 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: No User found[39m
2022-10-07 21:01:04:14 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: No User found[39m
2022-10-07 21:02:44:244 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: No User found[39m
2022-10-07 23:06:15:615 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findFirstStudent. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-07 23:25:44:2544 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findFirstStudent. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-07 23:30:09:309 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findFirstStudent. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-07 23:30:26:3026 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findFirstStudent. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-07 23:31:07:317 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findFirstStudent. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-07 23:31:54:3154 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findFirstStudent. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-07 23:32:02:322 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    backend: true,[39m
[31m    database: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findFirstStudent. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-08 13:43:09:439 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'Sistem Informasi Tugas Akhir Mahasiswa dengan Arsitektur Microservice, Container, dan API Gateway',[39m
[31m    ~~~~~[39m
[31m    description: 'Mahasiswa PENS ditntut untuk menciptakan teknologi baru yangmana teknologi tersebut kebanyakan hilang begitusaja dan tidak dapat diakses ole yang lainnya. Maka dari itu perlu ada sistem informasi untuk menampung hasil TA mahasiswa lalin',[39m
[31m    ~~~~~~~~~~~[39m
[31m    abstract: 'Mahasiswa PENS ditntut untuk menciptakan teknologi baru yangmana teknologi tersebut kebanyakan hilang begitusaja dan tidak dapat diakses ole yang lainnya. Maka dari itu perlu ada sistem informasi untuk menampung hasil TA mahasiswa lain agar hasil tersebut dapat diakses oleh mahasiswa setelahnya bahkan oleh masyarakat umum',[39m
[31m    ~~~~~~~~[39m
[31m    video: 'https://www.youtube.com/watch?v=x2eF3YLiNhY',[39m
[31m    ~~~~~[39m
[31m    tech: [[39m
[31m    ~~~~[39m
[31m      'VUE JS',[39m
[31m      'EXPRESS JS',[39m
[31m      'MICROSERVICE',[39m
[31m      'API GATEWAY',[39m
[31m      'CONTAINER'[39m
[31m    ],[39m
[31m    studentId: 1,[39m
[31m    ~~~~~~~~~[39m
[31m+   name: String,[39m
[31m+   nrp: String,[39m
[31m+   user: {[39m
[31m+     create?: UserCreateWithoutStudentAccountInput | UserUncheckedCreateWithoutStudentAccountInput,[39m
[31m+     connectOrCreate?: UserCreateOrConnectWithoutStudentAccountInput,[39m
[31m+     connect?: UserWhereUniqueInput[39m
[31m+   },[39m
[31m?   image?: String | null,[39m
[31m?   bio?: String | null,[39m
[31m?   backend?: {[39m
[31m?     create?: BackendCreateWithoutStudentInput | BackendUncheckedCreateWithoutStudentInput,[39m
[31m?     connectOrCreate?: BackendCreateOrConnectWithoutStudentInput,[39m
[31m?     connect?: BackendWhereUniqueInput[39m
[31m?   },[39m
[31m?   database?: {[39m
[31m?     create?: DatabaseCreateWithoutStudentInput | DatabaseUncheckedCreateWithoutStudentInput,[39m
[31m?     connectOrCreate?: DatabaseCreateOrConnectWithoutStudentInput,[39m
[31m?     connect?: DatabaseWhereUniqueInput[39m
[31m?   },[39m
[31m?   project?: {[39m
[31m?     create?: ProjectCreateWithoutStudentInput | ProjectUncheckedCreateWithoutStudentInput,[39m
[31m?     connectOrCreate?: ProjectCreateOrConnectWithoutStudentInput,[39m
[31m?     connect?: ProjectWhereUniqueInput[39m
[31m?   },[39m
[31m?   isActive?: Boolean[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `title` in data.title for type StudentCreateInput. Did you mean `name`?[39m
[31mUnknown arg `description` in data.description for type StudentCreateInput. Did you mean `isActive`?[39m
[31mUnknown arg `abstract` in data.abstract for type StudentCreateInput. Did you mean `select`?[39m
[31mUnknown arg `video` in data.video for type StudentCreateInput. Did you mean `bio`?[39m
[31mUnknown arg `tech` in data.tech for type StudentCreateInput. Did you mean `name`?[39m
[31mUnknown arg `studentId` in data.studentId for type StudentCreateInput. Did you mean `backend`?[39m
[31mArgument name for data.name is missing.[39m
[31mArgument nrp for data.nrp is missing.[39m
[31mArgument user for data.user is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-08 13:46:29:4629 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'Sistem Informasi Tugas Akhir Mahasiswa dengan Arsitektur Microservice, Container, dan API Gateway',[39m
[31m    ~~~~~[39m
[31m    description: 'Mahasiswa PENS ditntut untuk menciptakan teknologi baru yangmana teknologi tersebut kebanyakan hilang begitusaja dan tidak dapat diakses ole yang lainnya. Maka dari itu perlu ada sistem informasi untuk menampung hasil TA mahasiswa lalin',[39m
[31m    ~~~~~~~~~~~[39m
[31m    abstract: 'Mahasiswa PENS ditntut untuk menciptakan teknologi baru yangmana teknologi tersebut kebanyakan hilang begitusaja dan tidak dapat diakses ole yang lainnya. Maka dari itu perlu ada sistem informasi untuk menampung hasil TA mahasiswa lain agar hasil tersebut dapat diakses oleh mahasiswa setelahnya bahkan oleh masyarakat umum',[39m
[31m    ~~~~~~~~[39m
[31m    video: 'https://www.youtube.com/watch?v=x2eF3YLiNhY',[39m
[31m    ~~~~~[39m
[31m    tech: [[39m
[31m    ~~~~[39m
[31m      'VUE JS',[39m
[31m      'EXPRESS JS',[39m
[31m      'MICROSERVICE',[39m
[31m      'API GATEWAY',[39m
[31m      'CONTAINER'[39m
[31m    ],[39m
[31m    studentId: 1,[39m
[31m    ~~~~~~~~~[39m
[31m+   name: String,[39m
[31m+   nrp: String,[39m
[31m+   user: {[39m
[31m+     create?: UserCreateWithoutStudentAccountInput | UserUncheckedCreateWithoutStudentAccountInput,[39m
[31m+     connectOrCreate?: UserCreateOrConnectWithoutStudentAccountInput,[39m
[31m+     connect?: UserWhereUniqueInput[39m
[31m+   },[39m
[31m?   image?: String | null,[39m
[31m?   bio?: String | null,[39m
[31m?   backend?: {[39m
[31m?     create?: BackendCreateWithoutStudentInput | BackendUncheckedCreateWithoutStudentInput,[39m
[31m?     connectOrCreate?: BackendCreateOrConnectWithoutStudentInput,[39m
[31m?     connect?: BackendWhereUniqueInput[39m
[31m?   },[39m
[31m?   database?: {[39m
[31m?     create?: DatabaseCreateWithoutStudentInput | DatabaseUncheckedCreateWithoutStudentInput,[39m
[31m?     connectOrCreate?: DatabaseCreateOrConnectWithoutStudentInput,[39m
[31m?     connect?: DatabaseWhereUniqueInput[39m
[31m?   },[39m
[31m?   project?: {[39m
[31m?     create?: ProjectCreateWithoutStudentInput | ProjectUncheckedCreateWithoutStudentInput,[39m
[31m?     connectOrCreate?: ProjectCreateOrConnectWithoutStudentInput,[39m
[31m?     connect?: ProjectWhereUniqueInput[39m
[31m?   },[39m
[31m?   isActive?: Boolean[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `title` in data.title for type StudentCreateInput. Did you mean `name`?[39m
[31mUnknown arg `description` in data.description for type StudentCreateInput. Did you mean `isActive`?[39m
[31mUnknown arg `abstract` in data.abstract for type StudentCreateInput. Did you mean `select`?[39m
[31mUnknown arg `video` in data.video for type StudentCreateInput. Did you mean `bio`?[39m
[31mUnknown arg `tech` in data.tech for type StudentCreateInput. Did you mean `name`?[39m
[31mUnknown arg `studentId` in data.studentId for type StudentCreateInput. Did you mean `backend`?[39m
[31mArgument name for data.name is missing.[39m
[31mArgument nrp for data.nrp is missing.[39m
[31mArgument user for data.user is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-08 15:56:21:5621 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.student.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 18[39m
[31m  },[39m
[31m  data: {[39m
[31m    id: 18,[39m
[31m    ~~[39m
[31m    title: 'Sistem Informasi Tugas Akhir Mahasiswa dengan Arsitektur Microservice, Container, dan API Gateway',[39m
[31m    ~~~~~[39m
[31m    description: 'Mahasiswa PENS ditntut untuk menciptakan teknologi baru yangmana teknologi tersebut kebanyakan hilang begitusaja dan tidak dapat diakses lagi',[39m
[31m    ~~~~~~~~~~~[39m
[31m    abstract: 'Mahasiswa PENS ditntut untuk menciptakan teknologi baru yangmana teknologi tersebut kebanyakan hilang begitusaja dan tidak dapat diakses oleh yang lainnya. Maka dari itu perlu ada sistem informasi untuk menampung hasil TA mahasiswa lain agar hasil tersebut dapat diakses oleh mahasiswa setelahnya bahkan oleh masyarakat umum.',[39m
[31m    ~~~~~~~~[39m
[31m    documents: [[39m
[31m    ~~~~~~~~~[39m
[31m      {[39m
[31m        name: 'PA 1 Fathoni Ali Mukti (vue).pdf',[39m
[31m        url: 'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/documents/PA+1+Fathoni+Ali+Mukti+(vue).pdf'[39m
[31m      }[39m
[31m    ],[39m
[31m    images: [[39m
[31m    ~~~~~~[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/Screenshot+from+2022-10-08+13-38-17.png'[39m
[31m    ],[39m
[31m    video: 'https://www.youtube.com/watch?v=flbz_5aMikw',[39m
[31m    ~~~~~[39m
[31m    sourceCode: null,[39m
[31m    ~~~~~~~~~~[39m
[31m    tech: [[39m
[31m    ~~~~[39m
[31m      'vue js',[39m
[31m      'express js',[39m
[31m      'microservice',[39m
[31m      'api gateway',[39m
[31m      'container'[39m
[31m    ],[39m
[31m    url: null,[39m
[31m    ~~~[39m
[31m    studentId: 1[39m
[31m    ~~~~~~~~~[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `id` in data.id for type StudentUpdateInput. Did you mean `bio`? Available args:[39m
[31mtype StudentUpdateInput {[39m
[31m  name?: String | StringFieldUpdateOperationsInput[39m
[31m  nrp?: String | StringFieldUpdateOperationsInput[39m
[31m  image?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  bio?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  backend?: BackendUpdateOneWithoutStudentNestedInput[39m
[31m  database?: DatabaseUpdateOneWithoutStudentNestedInput[39m
[31m  project?: ProjectUpdateOneWithoutStudentNestedInput[39m
[31m  user?: UserUpdateOneRequiredWithoutStudentAccountNestedInput[39m
[31m  isActive?: Boolean | BoolFieldUpdateOperationsInput[39m
[31m}[39m
[31mUnknown arg `title` in data.title for type StudentUpdateInput. Did you mean `name`? Available args:[39m
[31mtype StudentUpdateInput {[39m
[31m  name?: String | StringFieldUpdateOperationsInput[39m
[31m  nrp?: String | StringFieldUpdateOperationsInput[39m
[31m  image?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  bio?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  backend?: BackendUpdateOneWithoutStudentNestedInput[39m
[31m  database?: DatabaseUpdateOneWithoutStudentNestedInput[39m
[31m  project?: ProjectUpdateOneWithoutStudentNestedInput[39m
[31m  user?: UserUpdateOneRequiredWithoutStudentAccountNestedInput[39m
[31m  isActive?: Boolean | BoolFieldUpdateOperationsInput[39m
[31m}[39m
[31mUnknown arg `description` in data.description for type StudentUpdateInput. Did you mean `isActive`? Available args:[39m
[31mtype StudentUpdateInput {[39m
[31m  name?: String | StringFieldUpdateOperationsInput[39m
[31m  nrp?: String | StringFieldUpdateOperationsInput[39m
[31m  image?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  bio?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  backend?: BackendUpdateOneWithoutStudentNestedInput[39m
[31m  database?: DatabaseUpdateOneWithoutStudentNestedInput[39m
[31m  project?: ProjectUpdateOneWithoutStudentNestedInput[39m
[31m  user?: UserUpdateOneRequiredWithoutStudentAccountNestedInput[39m
[31m  isActive?: Boolean | BoolFieldUpdateOperationsInput[39m
[31m}[39m
[31mUnknown arg `abstract` in data.abstract for type StudentUpdateInput. Did you mean `select`? Available args:[39m
[31mtype StudentUpdateInput {[39m
[31m  name?: String | StringFieldUpdateOperationsInput[39m
[31m  nrp?: String | StringFieldUpdateOperationsInput[39m
[31m  image?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  bio?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  backend?: BackendUpdateOneWithoutStudentNestedInput[39m
[31m  database?: DatabaseUpdateOneWithoutStudentNestedInput[39m
[31m  project?: ProjectUpdateOneWithoutStudentNestedInput[39m
[31m  user?: UserUpdateOneRequiredWithoutStudentAccountNestedInput[39m
[31m  isActive?: Boolean | BoolFieldUpdateOperationsInput[39m
[31m}[39m
[31mUnknown arg `documents` in data.documents for type StudentUpdateInput. Did you mean `backend`? Available args:[39m
[31mtype StudentUpdateInput {[39m
[31m  name?: String | StringFieldUpdateOperationsInput[39m
[31m  nrp?: String | StringFieldUpdateOperationsInput[39m
[31m  image?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  bio?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  backend?: BackendUpdateOneWithoutStudentNestedInput[39m
[31m  database?: DatabaseUpdateOneWithoutStudentNestedInput[39m
[31m  project?: ProjectUpdateOneWithoutStudentNestedInput[39m
[31m  user?: UserUpdateOneRequiredWithoutStudentAccountNestedInput[39m
[31m  isActive?: Boolean | BoolFieldUpdateOperationsInput[39m
[31m}[39m
[31mUnknown arg `images` in data.images for type StudentUpdateInput. Did you mean `image`? Available args:[39m
[31mtype StudentUpdateInput {[39m
[31m  name?: String | StringFieldUpdateOperationsInput[39m
[31m  nrp?: String | StringFieldUpdateOperationsInput[39m
[31m  image?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  bio?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  backend?: BackendUpdateOneWithoutStudentNestedInput[39m
[31m  database?: DatabaseUpdateOneWithoutStudentNestedInput[39m
[31m  project?: ProjectUpdateOneWithoutStudentNestedInput[39m
[31m  user?: UserUpdateOneRequiredWithoutStudentAccountNestedInput[39m
[31m  isActive?: Boolean | BoolFieldUpdateOperationsInput[39m
[31m}[39m
[31mUnknown arg `video` in data.video for type StudentUpdateInput. Did you mean `bio`? Available args:[39m
[31mtype StudentUpdateInput {[39m
[31m  name?: String | StringFieldUpdateOperationsInput[39m
[31m  nrp?: String | StringFieldUpdateOperationsInput[39m
[31m  image?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  bio?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  backend?: BackendUpdateOneWithoutStudentNestedInput[39m
[31m  database?: DatabaseUpdateOneWithoutStudentNestedInput[39m
[31m  project?: ProjectUpdateOneWithoutStudentNestedInput[39m
[31m  user?: UserUpdateOneRequiredWithoutStudentAccountNestedInput[39m
[31m  isActive?: Boolean | BoolFieldUpdateOperationsInput[39m
[31m}[39m
[31mUnknown arg `sourceCode` in data.sourceCode for type StudentUpdateInput. Did you mean `backend`? Available args:[39m
[31mtype StudentUpdateInput {[39m
[31m  name?: String | StringFieldUpdateOperationsInput[39m
[31m  nrp?: String | StringFieldUpdateOperationsInput[39m
[31m  image?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  bio?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  backend?: BackendUpdateOneWithoutStudentNestedInput[39m
[31m  database?: DatabaseUpdateOneWithoutStudentNestedInput[39m
[31m  project?: ProjectUpdateOneWithoutStudentNestedInput[39m
[31m  user?: UserUpdateOneRequiredWithoutStudentAccountNestedInput[39m
[31m  isActive?: Boolean | BoolFieldUpdateOperationsInput[39m
[31m}[39m
[31mUnknown arg `tech` in data.tech for type StudentUpdateInput. Did you mean `name`? Available args:[39m
[31mtype StudentUpdateInput {[39m
[31m  name?: String | StringFieldUpdateOperationsInput[39m
[31m  nrp?: String | StringFieldUpdateOperationsInput[39m
[31m  image?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  bio?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  backend?: BackendUpdateOneWithoutStudentNestedInput[39m
[31m  database?: DatabaseUpdateOneWithoutStudentNestedInput[39m
[31m  project?: ProjectUpdateOneWithoutStudentNestedInput[39m
[31m  user?: UserUpdateOneRequiredWithoutStudentAccountNestedInput[39m
[31m  isActive?: Boolean | BoolFieldUpdateOperationsInput[39m
[31m}[39m
[31mUnknown arg `url` in data.url for type StudentUpdateInput. Did you mean `nrp`? Available args:[39m
[31mtype StudentUpdateInput {[39m
[31m  name?: String | StringFieldUpdateOperationsInput[39m
[31m  nrp?: String | StringFieldUpdateOperationsInput[39m
[31m  image?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  bio?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  backend?: BackendUpdateOneWithoutStudentNestedInput[39m
[31m  database?: DatabaseUpdateOneWithoutStudentNestedInput[39m
[31m  project?: ProjectUpdateOneWithoutStudentNestedInput[39m
[31m  user?: UserUpdateOneRequiredWithoutStudentAccountNestedInput[39m
[31m  isActive?: Boolean | BoolFieldUpdateOperationsInput[39m
[31m}[39m
[31mUnknown arg `studentId` in data.studentId for type StudentUpdateInput. Did you mean `backend`? Available args:[39m
[31mtype StudentUpdateInput {[39m
[31m  name?: String | StringFieldUpdateOperationsInput[39m
[31m  nrp?: String | StringFieldUpdateOperationsInput[39m
[31m  image?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  bio?: String | NullableStringFieldUpdateOperationsInput | Null[39m
[31m  backend?: BackendUpdateOneWithoutStudentNestedInput[39m
[31m  database?: DatabaseUpdateOneWithoutStudentNestedInput[39m
[31m  project?: ProjectUpdateOneWithoutStudentNestedInput[39m
[31m  user?: UserUpdateOneRequiredWithoutStudentAccountNestedInput[39m
[31m  isActive?: Boolean | BoolFieldUpdateOperationsInput[39m
[31m}[39m

[31m[39m
2022-10-08 18:12:32:1232 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: no username[39m
2022-10-10 15:22:16:2216 [31merror[39m: [31m[GET] /admin/list-project >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: 'Inactive',[39m
[31m              ~~~~~~~~~~[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument isActive: Got invalid value 'Inactive' on prisma.findManyProject. Provided String, expected BoolFilter or Boolean:[39m
[31mtype BoolFilter {[39m
[31m  equals?: Boolean[39m
[31m  not?: Boolean | NestedBoolFilter[39m
[31m}[39m
[31mtype BoolFilter {[39m
[31m  equals?: Boolean[39m
[31m  not?: Boolean | NestedBoolFilter[39m
[31m}[39m

[31m[39m
2022-10-10 15:22:24:2224 [31merror[39m: [31m[GET] /admin/list-project >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 50,[39m
[31m  where: {[39m
[31m    isActive: 'Inactive',[39m
[31m              ~~~~~~~~~~[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument isActive: Got invalid value 'Inactive' on prisma.findManyProject. Provided String, expected BoolFilter or Boolean:[39m
[31mtype BoolFilter {[39m
[31m  equals?: Boolean[39m
[31m  not?: Boolean | NestedBoolFilter[39m
[31m}[39m
[31mtype BoolFilter {[39m
[31m  equals?: Boolean[39m
[31m  not?: Boolean | NestedBoolFilter[39m
[31m}[39m

[31m[39m
2022-10-10 15:22:29:2229 [31merror[39m: [31m[GET] /admin/list-project >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: 'Inactive',[39m
[31m              ~~~~~~~~~~[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: true[39m
[31m  }[39m
[31m}[39m

[31mArgument isActive: Got invalid value 'Inactive' on prisma.findManyProject. Provided String, expected BoolFilter or Boolean:[39m
[31mtype BoolFilter {[39m
[31m  equals?: Boolean[39m
[31m  not?: Boolean | NestedBoolFilter[39m
[31m}[39m
[31mtype BoolFilter {[39m
[31m  equals?: Boolean[39m
[31m  not?: Boolean | NestedBoolFilter[39m
[31m}[39m

[31m[39m
2022-10-10 15:44:47:4447 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: No User found[39m
2022-10-10 16:04:23:423 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: prisma is not defined[39m
2022-10-10 16:04:23:423 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: prisma is not defined[39m
2022-10-10 16:04:23:423 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: prisma is not defined[39m
2022-10-10 16:04:23:423 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: prisma is not defined[39m
2022-10-10 16:04:23:423 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: prisma is not defined[39m
2022-10-10 16:04:23:423 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: prisma is not defined[39m
2022-10-10 16:04:23:423 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: prisma is not defined[39m
2022-10-10 16:04:23:423 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: prisma is not defined[39m
2022-10-10 16:04:46:446 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:04:46:446 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:04:46:446 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:04:46:446 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:04:46:446 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:04:46:446 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:04:46:446 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:04:46:446 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:06:02:62 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer | Guest,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:06:02:62 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer | Guest,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:06:02:62 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer | Guest,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:06:02:62 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer | Guest,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:06:02:62 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer | Guest,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:06:02:62 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer | Guest,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:06:02:62 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer | Guest,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:06:02:62 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer | Guest,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:07:45:745 [31merror[39m: [31m[GET] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   username?: String,[39m
[31m?   id?: Int[39m
[31m  },[39m
[31m  create: {[39m
[31m+   username: String,[39m
[31m+   email: String,[39m
[31m?   role?: Admin | Student | Lecturer | Guest,[39m
[31m?   studentAccount?: {[39m
[31m?     create?: StudentCreateWithoutUserInput | StudentUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: StudentCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: StudentWhereUniqueInput[39m
[31m?   },[39m
[31m?   lecturerAccount?: {[39m
[31m?     create?: LecturerCreateWithoutUserInput | LecturerUncheckedCreateWithoutUserInput,[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutUserInput,[39m
[31m?     connect?: LecturerWhereUniqueInput[39m
[31m?   }[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument where of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument username for create.username is missing.[39m
[31mArgument email for create.email is missing.[39m
[31mArgument update is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 16:08:28:828 [31merror[39m: [31m[POST] /get-user >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    username: 'fathonidev'[39m
[31m  },[39m
[31m  create: {[39m
[31m    username: 'fathonidev',[39m
[31m    email: 'masthoni@protonmail.com'[39m
[31m  },[39m
[31m+ update: UserUpdateInput | UserUncheckedUpdateInput[39m
[31m}[39m

[31mArgument update is missing.[39m

[31mNote: Lines with + are required[39m
[31m[39m
2022-10-10 19:15:24:1524 [31merror[39m: [31m[POST] /lecturer/create >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.lecturer.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    name: 'Fathoni Ali Mukti',[39m
[31m    nrp: '2103181018',[39m
[31m    ~~~[39m
[31m    bio: 'Developer',[39m
[31m    image: 'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonidev/profile.png',[39m
[31m    user: {[39m
[31m      connect: {[39m
[31m        id: 54[39m
[31m      }[39m
[31m    },[39m
[31m    rple: 'Lecturer',[39m
[31m    ~~~~[39m
[31m+   nip: String,[39m
[31m?   project?: {[39m
[31m?     create?: ProjectCreateWithoutLecturerInput | ProjectCreateWithoutLecturerInput | ProjectUncheckedCreateWithoutLecturerInput | ProjectUncheckedCreateWithoutLecturerInput,[39m
[31m?     connectOrCreate?: ProjectCreateOrConnectWithoutLecturerInput | ProjectCreateOrConnectWithoutLecturerInput,[39m
[31m?     connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[39m
[31m?   },[39m
[31m?   isActive?: Boolean[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `nrp` in data.nrp for type LecturerCreateInput. Did you mean `nip`?[39m
[31mUnknown arg `rple` in data.rple for type LecturerCreateInput. Did you mean `name`?[39m
[31mArgument nip for data.nip is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 19:22:53:2253 [31merror[39m: [31m[POST] /lecturer/create >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.lecturer.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    name: 'Fathoni Ali Mukti',[39m
[31m    nrp: '2103181018',[39m
[31m    ~~~[39m
[31m    bio: 'Developer',[39m
[31m    image: 'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonidev/profile.png',[39m
[31m    user: {[39m
[31m      connect: {[39m
[31m        id: 54[39m
[31m      }[39m
[31m    },[39m
[31m+   nip: String,[39m
[31m?   project?: {[39m
[31m?     create?: ProjectCreateWithoutLecturerInput | ProjectCreateWithoutLecturerInput | ProjectUncheckedCreateWithoutLecturerInput | ProjectUncheckedCreateWithoutLecturerInput,[39m
[31m?     connectOrCreate?: ProjectCreateOrConnectWithoutLecturerInput | ProjectCreateOrConnectWithoutLecturerInput,[39m
[31m?     connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[39m
[31m?   },[39m
[31m?   isActive?: Boolean[39m
[31m  },[39m
[31m  include: {[39m
[31m    user: true[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `nrp` in data.nrp for type LecturerCreateInput. Did you mean `nip`?[39m
[31mArgument nip for data.nip is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-10 19:23:49:2349 [31merror[39m: [31m[POST] /lecturer/create >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.lecturer.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`nip`)[39m
2022-10-10 19:24:32:2432 [31merror[39m: [31m[POST] /lecturer/create >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.lecturer.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`nip`)[39m
2022-10-10 19:25:25:2525 [31merror[39m: [31m[POST] /lecturer/create >> StatusCode:: 500, Message:: [39m
[31mInvalid `prisma.lecturer.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`nip`)[39m
2022-10-10 19:29:42:2942 [31merror[39m: [31m[POST] /lecturer/create >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`nip`)[39m
2022-10-11 01:35:41:3541 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'afasdfas',[39m
[31m    description: 'dfasdfa',[39m
[31m    abstract: 'sdfasdfasdf',[39m
[31m    video: 'adsdfasdf',[39m
[31m    sourceCode: 'asdfasdfsad',[39m
[31m    type: 'Generals',[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          nip: '23141234'[39m
[31m        },[39m
[31m        {[39m
[31m          nip: '1234123412'[39m
[31m        },[39m
[31m        {[39m
[31m          nip: '341234123'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m+   student: {[39m
[31m+     create?: StudentCreateWithoutProjectInput | StudentUncheckedCreateWithoutProjectInput,[39m
[31m+     connectOrCreate?: StudentCreateOrConnectWithoutProjectInput,[39m
[31m+     connect?: StudentWhereUniqueInput[39m
[31m+   },[39m
[31m?   documents?: NullableJsonNullValueInput | Json,[39m
[31m?   app?: ProjectCreateappInput | String[],[39m
[31m?   images?: ProjectCreateimagesInput | String[],[39m
[31m?   tech?: ProjectCreatetechInput | String[],[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   backend?: {[39m
[31m?     create?: BackendCreateWithoutProjectInput | BackendUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: BackendCreateOrConnectWithoutProjectInput,[39m
[31m?     connect?: BackendWhereUniqueInput[39m
[31m?   },[39m
[31m?   Database?: {[39m
[31m?     create?: DatabaseCreateWithoutProjectInput | DatabaseUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: DatabaseCreateOrConnectWithoutProjectInput,[39m
[31m?     connect?: DatabaseWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument student for data.student is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-11 13:33:04:334 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'deksripsi',[39m
[31m    description: 'asdfasdf',[39m
[31m    abstract: 'asdfasdfa',[39m
[31m    video: 'sdfasdfas',[39m
[31m    sourceCode: 'dfasdfa',[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        '197811032005011002',[39m
[31m        '198812032020121001'[39m
[31m      ][39m
[31m      ~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    },[39m
[31m    type: 'StaticWeb',[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs exactly one argument, but you provided 0 and 1 and 2 and 3 and 4 and 5 and 6 and 7 and 8 and 9 and 10 and 11 and 12 and 13 and 14 and 15 and 16 and 17. Please choose one. Available args: [39m
[31mtype LecturerWhereUniqueInput {[39m
[31m  id?: Int[39m
[31m  name?: String[39m
[31m  nip?: String[39m
[31m  userId?: Int[39m
[31m}[39m

[31m[39m
2022-10-11 14:02:40:240 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'sadfasd',[39m
[31m    description: 'asdfasdf',[39m
[31m    abstract: 'fasdfasdf',[39m
[31m    video: 'asdfasdfas',[39m
[31m    sourceCode: 'dfasfdafsdf',[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          nip: '197811032005011002'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    type: 'Generals',[39m
[31m    images: [[39m
[31m      {[39m
[31m        name: 'Screenshot from 2022-09-01 23-57-10.png',[39m
[31m        file: {}[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'Screenshot from 2022-08-26 20-54-50.png',[39m
[31m        file: {}[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'Screenshot from 2022-08-18 11-27-58.png',[39m
[31m        file: {}[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    documents: [[39m
[31m      {[39m
[31m        name: 'CV Fathoni Ali Mukti.pdf',[39m
[31m        file: {}[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'Transfer Nilai.pdf',[39m
[31m        file: {}[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'New Doc 2021-09-24 21:44:06.pdf',[39m
[31m        file: {}[39m
[31m      }[39m
[31m    ],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument images: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Screenshot from 2022-09-01 23-57-10.png',[39m
[31m    file: {}[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'Screenshot from 2022-08-26 20-54-50.png',[39m
[31m    file: {}[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'Screenshot from 2022-08-18 11-27-58.png',[39m
[31m    file: {}[39m
[31m  }[39m
[31m][39m
[31mon prisma.createOneProject. Provided List<Json>, expected ProjectCreateimagesInput or String:[39m
[31mtype ProjectCreateimagesInput {[39m
[31m  set: List<String>[39m
[31m}[39m
[31mtype ProjectCreateimagesInput {[39m
[31m  set: List<String>[39m
[31m}[39m

[31m[39m
2022-10-11 15:31:37:3137 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    tech: [[39m
[31m      'dsfasdfasdf',[39m
[31m      'fdsf4trh'[39m
[31m    ],[39m
[31m    lecturers: {[39m
[31m      connect: {[39m
[31m        '0': {[39m
[31m?         id?: Int,[39m
[31m?         name?: String,[39m
[31m?         nip?: String,[39m
[31m?         userId?: Int[39m
[31m        }[39m
[31m      },[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m    type: 'Generals',[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   documents?: NullableJsonNullValueInput | Json,[39m
[31m?   images?: ProjectCreateimagesInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   backend?: {[39m
[31m?     create?: BackendCreateWithoutProjectInput | BackendUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: BackendCreateOrConnectWithoutProjectInput,[39m
[31m?     connect?: BackendWhereUniqueInput[39m
[31m?   },[39m
[31m?   Database?: {[39m
[31m?     create?: DatabaseCreateWithoutProjectInput | DatabaseUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: DatabaseCreateOrConnectWithoutProjectInput,[39m
[31m?     connect?: DatabaseWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-11 16:11:41:1141 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-10-11 16:33:53:3353 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-10-11 16:43:28:4328 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'adffafsdfd',[39m
[31m    description: 'asfjnasdkfn',[39m
[31m    abstract: 'kfjnasadkfjsandklfjn',[39m
[31m    video: 'https://music.youtube.com/watch?v=O48gok_FLCg&list=RDAMVMIwQGnXpskoY',[39m
[31m    sourceCode: 'https://music.youtube.com/watch?v=O48gok_FLCg&list=RDAMVMIwQGnXpskoY',[39m
[31m    tech: [[39m
[31m      'jnaskldjffanlsk',[39m
[31m      'iasfiajsdfnal',[39m
[31m      'asdjifnaksldjfla'[39m
[31m    ],[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          nip: '197811032005011002'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    type: 'StaticWeb',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/24.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/23.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/22.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/21.png'[39m
[31m    ],[39m
[31m    documents: [[39m
[31m      {[39m
[31m        name: 'BukuPA_2103191001_Rizky Putra Ramadan - A01 - Rizky.pdf',[39m
[31m        url: 'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/documents/BukuPA_2103191001_Rizky+Putra+Ramadan+-+A01+-+Rizky.pdf'[39m
[31m      }[39m
[31m    ],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-10-12 19:37:51:3751 [31merror[39m: [31m[GET] /get-lecturer-profile >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    name: 'Muarifin, S.ST., M.T.'[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      student: true[39m
[31m      ~~~~~~~[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `student` in include.project.student for type Project.[39m
[31m→ Did you forget to wrap it with `select`? e.g. { select: { student: true } }[39m

[31m[39m
2022-10-12 19:37:59:3759 [31merror[39m: [31m[GET] /get-lecturer-profile >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    name: 'Muarifin, S.ST., M.T.'[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      student: true[39m
[31m      ~~~~~~~[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `student` in include.project.student for type Project.[39m
[31m→ Did you forget to wrap it with `select`? e.g. { select: { student: true } }[39m

[31m[39m
2022-10-13 00:46:16:4616 [31merror[39m: [31m[GET] /lecturer >> StatusCode:: 500, Message:: TypeError: lecturerService.fullProfile is not a function[39m
2022-10-13 00:47:24:4724 [31merror[39m: [31m[GET] /lecturer >> StatusCode:: 500, Message:: TypeError: lecturerService.fullProfile is not a function[39m
2022-10-13 00:47:37:4737 [31merror[39m: [31m[GET] /lecturer >> StatusCode:: 500, Message:: NotFoundError: No Lecturer found[39m
2022-10-13 00:48:24:4824 [31merror[39m: [31m[GET] /lecturer >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: '1'[39m
[31m        ~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        student: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value '1' on prisma.findFirstLecturer. Provided String, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-10-13 00:51:45:5145 [31merror[39m: [31m[GET] /lecturer >> StatusCode:: 500, Message:: NotFoundError: No Lecturer found[39m
2022-10-13 00:51:49:5149 [31merror[39m: [31m[GET] /lecturer >> StatusCode:: 500, Message:: NotFoundError: No Lecturer found[39m
2022-10-13 13:28:44:2844 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"sistem infofrmasi\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-13 13:28:54:2854 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"sistem informasi\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-13 13:30:52:3052 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"sistem informasi\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-13 13:30:54:3054 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"sistem informasi\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-13 13:30:54:3054 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"sistem informasi\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-15 14:24:00:240 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 1[39m
[31m  },[39m
[31m  include: {[39m
[31m?   project?: true,[39m
[31m    backend: true,[39m
[31m    ~~~~~~~[39m
[31m    database: true,[39m
[31m    ~~~~~~~~[39m
[31m?   user?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `backend` for include statement on model Student. Available options are listed in green. Did you mean `project`?[39m
[31mUnknown field `database` for include statement on model Student. Available options are listed in green. Did you mean `user`?[39m
[31m[39m
2022-10-15 14:24:02:242 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 1[39m
[31m  },[39m
[31m  include: {[39m
[31m?   project?: true,[39m
[31m    backend: true,[39m
[31m    ~~~~~~~[39m
[31m    database: true,[39m
[31m    ~~~~~~~~[39m
[31m?   user?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `backend` for include statement on model Student. Available options are listed in green. Did you mean `project`?[39m
[31mUnknown field `database` for include statement on model Student. Available options are listed in green. Did you mean `user`?[39m
[31m[39m
2022-10-15 14:24:20:2420 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 1[39m
[31m  },[39m
[31m  include: {[39m
[31m?   project?: true,[39m
[31m    backend: true,[39m
[31m    ~~~~~~~[39m
[31m    database: true,[39m
[31m    ~~~~~~~~[39m
[31m?   user?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `backend` for include statement on model Student. Available options are listed in green. Did you mean `project`?[39m
[31mUnknown field `database` for include statement on model Student. Available options are listed in green. Did you mean `user`?[39m
[31m[39m
2022-10-15 14:24:22:2422 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 1[39m
[31m  },[39m
[31m  include: {[39m
[31m?   project?: true,[39m
[31m    backend: true,[39m
[31m    ~~~~~~~[39m
[31m    database: true,[39m
[31m    ~~~~~~~~[39m
[31m?   user?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `backend` for include statement on model Student. Available options are listed in green. Did you mean `project`?[39m
[31mUnknown field `database` for include statement on model Student. Available options are listed in green. Did you mean `user`?[39m
[31m[39m
2022-10-15 14:24:33:2433 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 1[39m
[31m  },[39m
[31m  include: {[39m
[31m?   project?: true,[39m
[31m    backend: true,[39m
[31m    ~~~~~~~[39m
[31m    database: true,[39m
[31m    ~~~~~~~~[39m
[31m?   user?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `backend` for include statement on model Student. Available options are listed in green. Did you mean `project`?[39m
[31mUnknown field `database` for include statement on model Student. Available options are listed in green. Did you mean `user`?[39m
[31m[39m
2022-10-15 14:24:40:2440 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 1[39m
[31m  },[39m
[31m  include: {[39m
[31m?   project?: true,[39m
[31m    backend: true,[39m
[31m    ~~~~~~~[39m
[31m    database: true,[39m
[31m    ~~~~~~~~[39m
[31m?   user?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `backend` for include statement on model Student. Available options are listed in green. Did you mean `project`?[39m
[31mUnknown field `database` for include statement on model Student. Available options are listed in green. Did you mean `user`?[39m
[31m[39m
2022-10-15 14:24:44:2444 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 1[39m
[31m  },[39m
[31m  include: {[39m
[31m?   project?: true,[39m
[31m    backend: true,[39m
[31m    ~~~~~~~[39m
[31m    database: true,[39m
[31m    ~~~~~~~~[39m
[31m?   user?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `backend` for include statement on model Student. Available options are listed in green. Did you mean `project`?[39m
[31mUnknown field `database` for include statement on model Student. Available options are listed in green. Did you mean `user`?[39m
[31m[39m
2022-10-15 14:24:52:2452 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 1[39m
[31m  },[39m
[31m  include: {[39m
[31m?   project?: true,[39m
[31m    backend: true,[39m
[31m    ~~~~~~~[39m
[31m    database: true,[39m
[31m    ~~~~~~~~[39m
[31m?   user?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `backend` for include statement on model Student. Available options are listed in green. Did you mean `project`?[39m
[31mUnknown field `database` for include statement on model Student. Available options are listed in green. Did you mean `user`?[39m
[31m[39m
2022-10-15 14:25:03:253 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 1[39m
[31m  },[39m
[31m  include: {[39m
[31m?   project?: true,[39m
[31m    backend: true,[39m
[31m    ~~~~~~~[39m
[31m    database: true,[39m
[31m    ~~~~~~~~[39m
[31m?   user?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `backend` for include statement on model Student. Available options are listed in green. Did you mean `project`?[39m
[31mUnknown field `database` for include statement on model Student. Available options are listed in green. Did you mean `user`?[39m
[31m[39m
2022-10-15 14:25:07:257 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 1[39m
[31m  },[39m
[31m  include: {[39m
[31m?   project?: true,[39m
[31m    backend: true,[39m
[31m    ~~~~~~~[39m
[31m    database: true,[39m
[31m    ~~~~~~~~[39m
[31m?   user?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `backend` for include statement on model Student. Available options are listed in green. Did you mean `project`?[39m
[31mUnknown field `database` for include statement on model Student. Available options are listed in green. Did you mean `user`?[39m
[31m[39m
2022-10-15 14:25:12:2512 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 1[39m
[31m  },[39m
[31m  include: {[39m
[31m?   project?: true,[39m
[31m    backend: true,[39m
[31m    ~~~~~~~[39m
[31m    database: true,[39m
[31m    ~~~~~~~~[39m
[31m?   user?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `backend` for include statement on model Student. Available options are listed in green. Did you mean `project`?[39m
[31mUnknown field `database` for include statement on model Student. Available options are listed in green. Did you mean `user`?[39m
[31m[39m
2022-10-15 20:19:46:1946 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-15 20:19:47:1947 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-15 20:19:47:1947 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-15 20:19:49:1949 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-15 20:19:50:1950 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-15 20:19:50:1950 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-15 20:19:50:1950 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-15 20:20:10:2010 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-15 20:20:11:2011 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-15 20:20:11:2011 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"PENGEMBANGAN WEB APLIKASI PENDOKUMENTASIAN UX DESIGN BERBASIS UX DESIGN ELEMENT\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-25 16:45:47:4547 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"105 OR 1=1\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-25 16:46:32:4632 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"105; DROP TABLE Suppliers\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-25 16:46:59:4659 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"105; LIST TABLE\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-25 16:50:17:5017 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"105; SELECT usename FROM pg_user\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-25 16:52:14:5214 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"‘ or 1=1;–.\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-25 16:52:58:5258 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"“ or 1=1;–.\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-25 16:53:59:5359 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"“ or 1=1;–\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-25 16:54:09:549 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"\" or 1=1;–\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-10-27 20:11:05:115 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'SISTEM INFORMASI MONITORING PERALATAN LABORATORIUM',[39m
[31m    description: 'Kondisi sebuah laboratorium yang ideal adalah memiliki tata ruang yang baik, dilengkapi SOP, memiliki infrastruktur yang mendukung kegiatan, inventarisasi dan keamanan.',[39m
[31m    abstract: 'ratorium adalah unit penunjang akademik pada lembaga pendidikan yang ditunjang dengan berbagai sarana dan prasarana. Kondisi sebuah laboratorium yang ideal adalah memiliki tata ruang yang baik, dilengkapi SOP, memiliki infrastruktur yang mendukung kegiatan, inventarisasi dan keamanan. Di dalam laboratorium tersebut, juga terdapat banyak alat laboratorium yang digunakan sebagai penunjang sebuah penelitian dan juga sebagai alat praktik. Dengan banyaknya alat-alat laboratorium tersebut, diperlukan adanya kegiatan monitoring peralatan laboratorium. Namun pada Politeknik Elektronika Negeri Surabaya (PENS), kegiatan monitoring peralatan laboratorium masih dilakukan secara manual dimana proses tersebut kurang efisien dan efektif. Padahal dengan adanya perkembangan teknologi membuat segalanya menjadi lebih mudah, dan pengolahan data dapat menjadi lebih mudah dan cepat. Untuk mengatasi permasalahan tersebut penulis memberikan solusi untuk membuat sistem informasi berbasis website. Dengan adanya website ini pengolahan data dan monitoring peralatan laboratorium di kampus Politeknik Elektronika Negeri Surabaya (PENS) dapat menjadi lebih cepat, mudah dan mengurangi kemungkinan adanya kesalahan data. Dari hasil pengujian website, website ini dapat berjalan sesuai dengan perencanaan di awal, dan dari penilaian user yang terdiri dari Dosen, Teknisi Lab, Kepala Lab, dan Kepala Prodi menyatakan bahwa website ini memiliki fungsionalitas, tampilan antar muka dan tingkat kemudahan yang baik dan mendapatkan nilai rata-rata 86 dari range nilai 0-100. Dapat disimpulkan bahwa website ini dapat mengatasi permasalahan dari kegiatan monitoring peralatan laboratorium di kampus PENS.',[39m
[31m    type: 'Generals',[39m
[31m    documents: 'https://drive.google.com/file/d/185DlTrA-g4B2QQiq-HtHVY-mMRydFqxW/view?usp=sharing',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/42.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/43.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/44.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/45.png'[39m
[31m    ],[39m
[31m    tech: [],[39m
[31m    student: {[39m
[31m      create: {[39m
[31m        name: 'Wahyu Puji Ramadhan',[39m
[31m        nrp: '2103191021',[39m
[31m        image: '',[39m
[31m+       user: {[39m
[31m+         create?: UserCreateWithoutStudentAccountInput | UserUncheckedCreateWithoutStudentAccountInput,[39m
[31m+         connectOrCreate?: UserCreateOrConnectWithoutStudentAccountInput,[39m
[31m+         connect?: UserWhereUniqueInput[39m
[31m+       },[39m
[31m?       bio?: String | null,[39m
[31m?       isActive?: Boolean[39m
[31m      }[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connectOrCreate: [[39m
[31m        {[39m
[31m          where: {[39m
[31m            id: '198603232015042004'[39m
[31m                ~~~~~~~~~~~~~~~~~~~~[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Desy Intan Permatasari, S.Kom., M.Kom',[39m
[31m            nip: '198603232015042004',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'desy',[39m
[31m                email: 'desy@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m        {[39m
[31m          where: {[39m
[31m            id: '197910142002122002'[39m
[31m                ~~~~~~~~~~~~~~~~~~~~[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Dr. Tita Karlita S.Kom., M.Kom',[39m
[31m            nip: '197910142002122002',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'desy',[39m
[31m                email: 'desy@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      ][39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument user for data.student.create.user is missing.[39m
[31mArgument id: Got invalid value '198603232015042004' on prisma.createOneProject. Provided String, expected Int.[39m
[31mArgument id: Got invalid value '197910142002122002' on prisma.createOneProject. Provided String, expected Int.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-27 20:11:31:1131 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'SISTEM INFORMASI MONITORING PERALATAN LABORATORIUM',[39m
[31m    description: 'Kondisi sebuah laboratorium yang ideal adalah memiliki tata ruang yang baik, dilengkapi SOP, memiliki infrastruktur yang mendukung kegiatan, inventarisasi dan keamanan.',[39m
[31m    abstract: 'ratorium adalah unit penunjang akademik pada lembaga pendidikan yang ditunjang dengan berbagai sarana dan prasarana. Kondisi sebuah laboratorium yang ideal adalah memiliki tata ruang yang baik, dilengkapi SOP, memiliki infrastruktur yang mendukung kegiatan, inventarisasi dan keamanan. Di dalam laboratorium tersebut, juga terdapat banyak alat laboratorium yang digunakan sebagai penunjang sebuah penelitian dan juga sebagai alat praktik. Dengan banyaknya alat-alat laboratorium tersebut, diperlukan adanya kegiatan monitoring peralatan laboratorium. Namun pada Politeknik Elektronika Negeri Surabaya (PENS), kegiatan monitoring peralatan laboratorium masih dilakukan secara manual dimana proses tersebut kurang efisien dan efektif. Padahal dengan adanya perkembangan teknologi membuat segalanya menjadi lebih mudah, dan pengolahan data dapat menjadi lebih mudah dan cepat. Untuk mengatasi permasalahan tersebut penulis memberikan solusi untuk membuat sistem informasi berbasis website. Dengan adanya website ini pengolahan data dan monitoring peralatan laboratorium di kampus Politeknik Elektronika Negeri Surabaya (PENS) dapat menjadi lebih cepat, mudah dan mengurangi kemungkinan adanya kesalahan data. Dari hasil pengujian website, website ini dapat berjalan sesuai dengan perencanaan di awal, dan dari penilaian user yang terdiri dari Dosen, Teknisi Lab, Kepala Lab, dan Kepala Prodi menyatakan bahwa website ini memiliki fungsionalitas, tampilan antar muka dan tingkat kemudahan yang baik dan mendapatkan nilai rata-rata 86 dari range nilai 0-100. Dapat disimpulkan bahwa website ini dapat mengatasi permasalahan dari kegiatan monitoring peralatan laboratorium di kampus PENS.',[39m
[31m    type: 'Generals',[39m
[31m    documents: 'https://drive.google.com/file/d/185DlTrA-g4B2QQiq-HtHVY-mMRydFqxW/view?usp=sharing',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/42.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/43.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/44.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/45.png'[39m
[31m    ],[39m
[31m    tech: [],[39m
[31m    student: {[39m
[31m      create: {[39m
[31m        name: 'Wahyu Puji Ramadhan',[39m
[31m        nrp: '2103191021',[39m
[31m        image: '',[39m
[31m+       user: {[39m
[31m+         create?: UserCreateWithoutStudentAccountInput | UserUncheckedCreateWithoutStudentAccountInput,[39m
[31m+         connectOrCreate?: UserCreateOrConnectWithoutStudentAccountInput,[39m
[31m+         connect?: UserWhereUniqueInput[39m
[31m+       },[39m
[31m?       bio?: String | null,[39m
[31m?       isActive?: Boolean[39m
[31m      }[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connectOrCreate: [[39m
[31m        {[39m
[31m          where: {[39m
[31m            id: '198603232015042004'[39m
[31m                ~~~~~~~~~~~~~~~~~~~~[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Desy Intan Permatasari, S.Kom., M.Kom',[39m
[31m            nip: '198603232015042004',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'desy',[39m
[31m                email: 'desy@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m        {[39m
[31m          where: {[39m
[31m            id: '197910142002122002'[39m
[31m                ~~~~~~~~~~~~~~~~~~~~[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Dr. Tita Karlita S.Kom., M.Kom',[39m
[31m            nip: '197910142002122002',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'desy',[39m
[31m                email: 'desy@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      ][39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument user for data.student.create.user is missing.[39m
[31mArgument id: Got invalid value '198603232015042004' on prisma.createOneProject. Provided String, expected Int.[39m
[31mArgument id: Got invalid value '197910142002122002' on prisma.createOneProject. Provided String, expected Int.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-27 20:12:15:1215 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'SISTEM INFORMASI MONITORING PERALATAN LABORATORIUM',[39m
[31m    description: 'Kondisi sebuah laboratorium yang ideal adalah memiliki tata ruang yang baik, dilengkapi SOP, memiliki infrastruktur yang mendukung kegiatan, inventarisasi dan keamanan.',[39m
[31m    abstract: 'ratorium adalah unit penunjang akademik pada lembaga pendidikan yang ditunjang dengan berbagai sarana dan prasarana. Kondisi sebuah laboratorium yang ideal adalah memiliki tata ruang yang baik, dilengkapi SOP, memiliki infrastruktur yang mendukung kegiatan, inventarisasi dan keamanan. Di dalam laboratorium tersebut, juga terdapat banyak alat laboratorium yang digunakan sebagai penunjang sebuah penelitian dan juga sebagai alat praktik. Dengan banyaknya alat-alat laboratorium tersebut, diperlukan adanya kegiatan monitoring peralatan laboratorium. Namun pada Politeknik Elektronika Negeri Surabaya (PENS), kegiatan monitoring peralatan laboratorium masih dilakukan secara manual dimana proses tersebut kurang efisien dan efektif. Padahal dengan adanya perkembangan teknologi membuat segalanya menjadi lebih mudah, dan pengolahan data dapat menjadi lebih mudah dan cepat. Untuk mengatasi permasalahan tersebut penulis memberikan solusi untuk membuat sistem informasi berbasis website. Dengan adanya website ini pengolahan data dan monitoring peralatan laboratorium di kampus Politeknik Elektronika Negeri Surabaya (PENS) dapat menjadi lebih cepat, mudah dan mengurangi kemungkinan adanya kesalahan data. Dari hasil pengujian website, website ini dapat berjalan sesuai dengan perencanaan di awal, dan dari penilaian user yang terdiri dari Dosen, Teknisi Lab, Kepala Lab, dan Kepala Prodi menyatakan bahwa website ini memiliki fungsionalitas, tampilan antar muka dan tingkat kemudahan yang baik dan mendapatkan nilai rata-rata 86 dari range nilai 0-100. Dapat disimpulkan bahwa website ini dapat mengatasi permasalahan dari kegiatan monitoring peralatan laboratorium di kampus PENS.',[39m
[31m    type: 'Generals',[39m
[31m    documents: 'https://drive.google.com/file/d/185DlTrA-g4B2QQiq-HtHVY-mMRydFqxW/view?usp=sharing',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/42.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/43.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/44.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/45.png'[39m
[31m    ],[39m
[31m    tech: [],[39m
[31m    student: {[39m
[31m      create: {[39m
[31m        name: 'Wahyu Puji Ramadhan',[39m
[31m        nrp: '2103191021',[39m
[31m        image: '',[39m
[31m+       user: {[39m
[31m+         create?: UserCreateWithoutStudentAccountInput | UserUncheckedCreateWithoutStudentAccountInput,[39m
[31m+         connectOrCreate?: UserCreateOrConnectWithoutStudentAccountInput,[39m
[31m+         connect?: UserWhereUniqueInput[39m
[31m+       },[39m
[31m?       bio?: String | null,[39m
[31m?       isActive?: Boolean[39m
[31m      }[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connectOrCreate: [[39m
[31m        {[39m
[31m          where: {[39m
[31m            id: 198603232015042020[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Desy Intan Permatasari, S.Kom., M.Kom',[39m
[31m            nip: 198603232015042020,[39m
[31m                 ~~~~~~~~~~~~~~~~~~[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'desy',[39m
[31m                email: 'desy@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m        {[39m
[31m          where: {[39m
[31m            id: 197910142002122020[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Dr. Tita Karlita S.Kom., M.Kom',[39m
[31m            nip: 197910142002122020,[39m
[31m                 ~~~~~~~~~~~~~~~~~~[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'desy',[39m
[31m                email: 'desy@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      ][39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument user for data.student.create.user is missing.[39m
[31mArgument nip: Got invalid value 198603232015042020 on prisma.createOneProject. Provided Int, expected String.[39m
[31mArgument nip: Got invalid value 197910142002122020 on prisma.createOneProject. Provided Int, expected String.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-27 20:13:04:134 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'SISTEM INFORMASI MONITORING PERALATAN LABORATORIUM',[39m
[31m    description: 'Kondisi sebuah laboratorium yang ideal adalah memiliki tata ruang yang baik, dilengkapi SOP, memiliki infrastruktur yang mendukung kegiatan, inventarisasi dan keamanan.',[39m
[31m    abstract: 'ratorium adalah unit penunjang akademik pada lembaga pendidikan yang ditunjang dengan berbagai sarana dan prasarana. Kondisi sebuah laboratorium yang ideal adalah memiliki tata ruang yang baik, dilengkapi SOP, memiliki infrastruktur yang mendukung kegiatan, inventarisasi dan keamanan. Di dalam laboratorium tersebut, juga terdapat banyak alat laboratorium yang digunakan sebagai penunjang sebuah penelitian dan juga sebagai alat praktik. Dengan banyaknya alat-alat laboratorium tersebut, diperlukan adanya kegiatan monitoring peralatan laboratorium. Namun pada Politeknik Elektronika Negeri Surabaya (PENS), kegiatan monitoring peralatan laboratorium masih dilakukan secara manual dimana proses tersebut kurang efisien dan efektif. Padahal dengan adanya perkembangan teknologi membuat segalanya menjadi lebih mudah, dan pengolahan data dapat menjadi lebih mudah dan cepat. Untuk mengatasi permasalahan tersebut penulis memberikan solusi untuk membuat sistem informasi berbasis website. Dengan adanya website ini pengolahan data dan monitoring peralatan laboratorium di kampus Politeknik Elektronika Negeri Surabaya (PENS) dapat menjadi lebih cepat, mudah dan mengurangi kemungkinan adanya kesalahan data. Dari hasil pengujian website, website ini dapat berjalan sesuai dengan perencanaan di awal, dan dari penilaian user yang terdiri dari Dosen, Teknisi Lab, Kepala Lab, dan Kepala Prodi menyatakan bahwa website ini memiliki fungsionalitas, tampilan antar muka dan tingkat kemudahan yang baik dan mendapatkan nilai rata-rata 86 dari range nilai 0-100. Dapat disimpulkan bahwa website ini dapat mengatasi permasalahan dari kegiatan monitoring peralatan laboratorium di kampus PENS.',[39m
[31m    type: 'Generals',[39m
[31m    documents: 'https://drive.google.com/file/d/185DlTrA-g4B2QQiq-HtHVY-mMRydFqxW/view?usp=sharing',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/42.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/43.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/44.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/dummy/45.png'[39m
[31m    ],[39m
[31m    tech: [],[39m
[31m    student: {[39m
[31m      create: {[39m
[31m        name: 'Wahyu Puji Ramadhan',[39m
[31m        nrp: '2103191021',[39m
[31m        image: '',[39m
[31m+       user: {[39m
[31m+         create?: UserCreateWithoutStudentAccountInput | UserUncheckedCreateWithoutStudentAccountInput,[39m
[31m+         connectOrCreate?: UserCreateOrConnectWithoutStudentAccountInput,[39m
[31m+         connect?: UserWhereUniqueInput[39m
[31m+       },[39m
[31m?       bio?: String | null,[39m
[31m?       isActive?: Boolean[39m
[31m      }[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connectOrCreate: [[39m
[31m        {[39m
[31m          where: {[39m
[31m            nip: '198603232015042004'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Desy Intan Permatasari, S.Kom., M.Kom',[39m
[31m            nip: '198603232015042004',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'desy',[39m
[31m                email: 'desy@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        },[39m
[31m        {[39m
[31m          where: {[39m
[31m            nip: '197910142002122002'[39m
[31m          },[39m
[31m          create: {[39m
[31m            name: 'Dr. Tita Karlita S.Kom., M.Kom',[39m
[31m            nip: '197910142002122002',[39m
[31m            user: {[39m
[31m              create: {[39m
[31m                username: 'desy',[39m
[31m                email: 'desy@pens.ac.id'[39m
[31m              }[39m
[31m            }[39m
[31m          }[39m
[31m        }[39m
[31m      ][39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument user for data.student.create.user is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-10-27 20:14:29:1429 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`username`)[39m
2022-10-27 20:15:20:1520 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`username`)[39m
2022-11-02 19:15:50:1550 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-03 03:01:47:147 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m    },[39m
[31m    categories: 'pendidikan',[39m
[31m    methods: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   type?: EnumProjectTypeFilter | ProjectType,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument where.methods of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 03:03:00:30 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m    },[39m
[31m    categories: 'pendidikan',[39m
[31m    methods: {[39m
[31m?     has?: String | null,[39m
[31m?     equals?: String[] | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   abstract?: StringFilter | String,[39m
[31m?   type?: EnumProjectTypeFilter | ProjectType,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturer?: LecturerListRelationFilter[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument where.methods of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 13:18:23:1823 [31merror[39m: [31m[GET] /find-lecturer >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"Muarifin, S.ST., M.T.\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-03 13:18:25:1825 [31merror[39m: [31m[GET] /find-lecturer >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"Muarifin, S.ST., M.T\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-03 13:18:26:1826 [31merror[39m: [31m[GET] /find-lecturer >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"Muarifin, S.ST., M.\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-03 13:18:27:1827 [31merror[39m: [31m[GET] /find-lecturer >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"Muarifin, S.ST., M\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-03 13:18:27:1827 [31merror[39m: [31m[GET] /find-lecturer >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"Muarifin, S.ST., \"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-03 13:18:27:1827 [31merror[39m: [31m[GET] /find-lecturer >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"Muarifin, S.ST.,\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-03 13:18:28:1828 [31merror[39m: [31m[GET] /find-lecturer >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"Muarifin, S.ST.\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-03 13:18:28:1828 [31merror[39m: [31m[GET] /find-lecturer >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"Muarifin, S.ST\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-03 13:18:28:1828 [31merror[39m: [31m[GET] /find-lecturer >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"Muarifin, S.S\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-03 13:18:29:1829 [31merror[39m: [31m[GET] /find-lecturer >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"Muarifin, S.\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-03 13:18:29:1829 [31merror[39m: [31m[GET] /find-lecturer >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.lecturer.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"Muarifin, S\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-03 13:23:27:2327 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'Testing',[39m
[31m    description: 'test',[39m
[31m    abstract: 'test',[39m
[31m    video: 'http://youtube.com',[39m
[31m    sourceCode: 'http://youtube.com',[39m
[31m    type: 'StaticWeb',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [[39m
[31m      'javascript',[39m
[31m      'vue js'[39m
[31m    ],[39m
[31m    categories: 'karya cipta',[39m
[31m    method: [[39m
[31m    ~~~~~~[39m
[31m      'microservice',[39m
[31m      'api gateway'[39m
[31m    ],[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Muarifin, S.ST., M.T.'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Hero Yudo Martono, ST, MT.'[39m
[31m        }[39m
[31m      ][39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `method` in data.method for type ProjectCreateInput. Did you mean `methods`? Available args:[39m
[31mtype ProjectCreateInput {[39m
[31m  title: String[39m
[31m  description: String[39m
[31m  abstract: String[39m
[31m  type?: ProjectType[39m
[31m  categories?: String | Null[39m
[31m  methods?: ProjectCreatemethodsInput | List<String>[39m
[31m  documents?: NullableJsonNullValueInput | Json[39m
[31m  images?: ProjectCreateimagesInput | List<String>[39m
[31m  video?: String | Null[39m
[31m  sourceCode?: String | Null[39m
[31m  tech?: ProjectCreatetechInput | List<String>[39m
[31m  url?: String | Null[39m
[31m  isActive?: Boolean[39m
[31m  student: StudentCreateNestedOneWithoutProjectInput[39m
[31m  lecturer?: LecturerCreateNestedManyWithoutProjectInput[39m
[31m  comments?: CommentCreateNestedManyWithoutProjectInput[39m
[31m}[39m

[31m[39m
2022-11-03 13:23:33:2333 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'Testing',[39m
[31m    description: 'test',[39m
[31m    abstract: 'test',[39m
[31m    video: 'http://youtube.com',[39m
[31m    sourceCode: 'http://youtube.com',[39m
[31m    type: 'StaticWeb',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/5.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/1.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/4.png'[39m
[31m    ],[39m
[31m    documents: [[39m
[31m      {[39m
[31m        name: 'Buku PA_2110181033_Chandra Kirana Jatu Indraswari - Chandra Kirana Jatu Indraswari.pdf',[39m
[31m        url: 'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/documents/Buku+PA_2110181033_Chandra+Kirana+Jatu+Indraswari+-+Chandra+Kirana+Jatu+Indraswari.pdf'[39m
[31m      }[39m
[31m    ],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [[39m
[31m      'javascript',[39m
[31m      'vue js'[39m
[31m    ],[39m
[31m    categories: 'karya cipta',[39m
[31m    method: [[39m
[31m    ~~~~~~[39m
[31m      'microservice',[39m
[31m      'api gateway'[39m
[31m    ],[39m
[31m    lecturers: [[39m
[31m      {[39m
[31m        name: 'Muarifin, S.ST., M.T.'[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'Hero Yudo Martono, ST, MT.'[39m
[31m      }[39m
[31m    ][39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mUnknown arg `method` in data.method for type ProjectUpdateInput. Did you mean `methods`?[39m
[31mArgument lecturers: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Muarifin, S.ST., M.T.'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'Hero Yudo Martono, ST, MT.'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected LecturerUpdateManyWithoutProjectNestedInput:[39m
[31mtype LecturerUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: LecturerCreateWithoutProjectInput | List<LecturerCreateWithoutProjectInput> | LecturerUncheckedCreateWithoutProjectInput | List<LecturerUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | List<LecturerCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: LecturerUpsertWithWhereUniqueWithoutProjectInput | List<LecturerUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  disconnect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  delete?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  connect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  update?: LecturerUpdateWithWhereUniqueWithoutProjectInput | List<LecturerUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: LecturerUpdateManyWithWhereWithoutProjectInput | List<LecturerUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: LecturerScalarWhereInput | List<LecturerScalarWhereInput>[39m
[31m}[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:00:25:025 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-11-03 14:26:27:2627 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:27:2627 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:28:2628 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:28:2628 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:30:2630 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:30:2630 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:31:2631 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:31:2631 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:31:2631 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:31:2631 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:32:2632 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:32:2632 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:33:2633 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:33:2633 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:33:2633 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:33:2633 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:33:2633 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:33:2633 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:33:2633 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:33:2633 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:33:2633 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:34:2634 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:34:2634 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:34:2634 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:34:2634 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:34:2634 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:34:2634 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:34:2634 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:35:2635 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:35:2635 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:35:2635 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:35:2635 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:35:2635 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:35:2635 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:35:2635 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:26:35:2635 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:30:03:303 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:30:03:303 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:30:05:305 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:30:05:305 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:30:05:305 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:30:05:305 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:30:06:306 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:30:06:306 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:30:06:306 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m?   categories?: String | null,[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.lecturer.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:30:06:306 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [],[39m
[31m    categories: null,[39m
[31m    lecturers: null[39m
[31m              ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturer for data.lecturer must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-03 14:31:07:317 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'StaticWeb',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [[39m
[31m      'php'[39m
[31m    ],[39m
[31m    categories: 'egov',[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Hero Yudo Martono, ST, MT.'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   methods?: ProjectCreatemethodsInput | String[],[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-03 14:31:12:3112 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    type: 'StaticWeb',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/43.png'[39m
[31m    ],[39m
[31m    documents: [[39m
[31m      {[39m
[31m        name: 'BUKU PA_2103191221_Fina - Fina.pdf',[39m
[31m        url: 'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/documents/BUKU+PA_2103191221_Fina+-+Fina.pdf'[39m
[31m      }[39m
[31m    ],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [[39m
[31m      'php'[39m
[31m    ],[39m
[31m    categories: 'egov',[39m
[31m    lecturers: [[39m
[31m      {[39m
[31m        name: 'Hero Yudo Martono, ST, MT.'[39m
[31m      }[39m
[31m    ][39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument lecturers: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Hero Yudo Martono, ST, MT.'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected LecturerUpdateManyWithoutProjectNestedInput:[39m
[31mtype LecturerUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: LecturerCreateWithoutProjectInput | List<LecturerCreateWithoutProjectInput> | LecturerUncheckedCreateWithoutProjectInput | List<LecturerUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | List<LecturerCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: LecturerUpsertWithWhereUniqueWithoutProjectInput | List<LecturerUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  disconnect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  delete?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  connect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  update?: LecturerUpdateWithWhereUniqueWithoutProjectInput | List<LecturerUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: LecturerUpdateManyWithWhereWithoutProjectInput | List<LecturerUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: LecturerScalarWhereInput | List<LecturerScalarWhereInput>[39m
[31m}[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-10 21:17:42:1742 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:22:2122 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:31:2131 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:31:2131 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:31:2131 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:32:2132 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:32:2132 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 12,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:33:2133 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:33:2133 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:33:2133 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 12,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:34:2134 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 24,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:34:2134 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 36,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:34:2134 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 24,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:34:2134 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 12,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:35:2135 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:21:35:2135 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:23:21:2321 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:23:32:2332 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:23:55:2355 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: [][39m
[31m      ~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument every: Got invalid value [] on prisma.findManyProject. Provided List<>, expected TechListWhereInput:[39m
[31mtype TechListWhereInput {[39m
[31m  AND?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  OR?: List<TechListWhereInput>[39m
[31m  NOT?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  name?: StringFilter | String[39m
[31m  Project?: ProjectListRelationFilter[39m
[31m}[39m

[31m[39m
2022-11-10 21:23:56:2356 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 12,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: [][39m
[31m      ~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument every: Got invalid value [] on prisma.findManyProject. Provided List<>, expected TechListWhereInput:[39m
[31mtype TechListWhereInput {[39m
[31m  AND?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  OR?: List<TechListWhereInput>[39m
[31m  NOT?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  name?: StringFilter | String[39m
[31m  Project?: ProjectListRelationFilter[39m
[31m}[39m

[31m[39m
2022-11-10 21:23:56:2356 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: [][39m
[31m      ~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument every: Got invalid value [] on prisma.findManyProject. Provided List<>, expected TechListWhereInput:[39m
[31mtype TechListWhereInput {[39m
[31m  AND?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  OR?: List<TechListWhereInput>[39m
[31m  NOT?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  name?: StringFilter | String[39m
[31m  Project?: ProjectListRelationFilter[39m
[31m}[39m

[31m[39m
2022-11-10 21:23:58:2358 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: [][39m
[31m      ~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument every: Got invalid value [] on prisma.findManyProject. Provided List<>, expected TechListWhereInput:[39m
[31mtype TechListWhereInput {[39m
[31m  AND?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  OR?: List<TechListWhereInput>[39m
[31m  NOT?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  name?: StringFilter | String[39m
[31m  Project?: ProjectListRelationFilter[39m
[31m}[39m

[31m[39m
2022-11-10 21:24:29:2429 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: [][39m
[31m      ~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument every: Got invalid value [] on prisma.findManyProject. Provided List<>, expected TechListWhereInput:[39m
[31mtype TechListWhereInput {[39m
[31m  AND?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  OR?: List<TechListWhereInput>[39m
[31m  NOT?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  name?: StringFilter | String[39m
[31m  Project?: ProjectListRelationFilter[39m
[31m}[39m

[31m[39m
2022-11-10 21:25:52:2552 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [][39m
[31m      ~~~~~~~~[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:32:57:3257 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: [[39m
[31m      ~~~~~~~~[39m
[31m        'php'[39m
[31m      ][39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 21:48:01:481 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: undefined[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      name: true[39m
[31m      ~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `name` in include.tech.name for type TechList.[39m
[31m→ Did you forget to wrap it with `select`? e.g. { select: { name: true } }[39m

[31m[39m
2022-11-10 21:48:04:484 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: undefined[39m
[31m    },[39m
[31m    categories: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      name: true[39m
[31m      ~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `name` in include.tech.name for type TechList.[39m
[31m→ Did you forget to wrap it with `select`? e.g. { select: { name: true } }[39m

[31m[39m
2022-11-10 22:12:42:1242 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: 'php'[39m
[31m      ~~~~~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-10 22:13:09:139 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: 'php'[39m
[31m             ~~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument every: Got invalid value 'php' on prisma.findManyProject. Provided String, expected TechListWhereInput:[39m
[31mtype TechListWhereInput {[39m
[31m  AND?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  OR?: List<TechListWhereInput>[39m
[31m  NOT?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  name?: StringFilter | String[39m
[31m  Project?: ProjectListRelationFilter[39m
[31m}[39m

[31m[39m
2022-11-10 22:15:31:1531 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: 'php'[39m
[31m             ~~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument every: Got invalid value 'php' on prisma.findManyProject. Provided String, expected TechListWhereInput:[39m
[31mtype TechListWhereInput {[39m
[31m  AND?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  OR?: List<TechListWhereInput>[39m
[31m  NOT?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  name?: StringFilter | String[39m
[31m  Project?: ProjectListRelationFilter[39m
[31m}[39m

[31m[39m
2022-11-10 22:15:54:1554 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: [[39m
[31m        'Laravel',[39m
[31m        'MySQL'[39m
[31m      ][39m
[31m      ~~~~~~~~~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument every: Got invalid value [39m
[31m[[39m
[31m  'Laravel',[39m
[31m  'MySQL'[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<String>, expected TechListWhereInput:[39m
[31mtype TechListWhereInput {[39m
[31m  AND?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  OR?: List<TechListWhereInput>[39m
[31m  NOT?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  name?: StringFilter | String[39m
[31m  Project?: ProjectListRelationFilter[39m
[31m}[39m

[31m[39m
2022-11-10 22:18:36:1836 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.count()` invocation:[39m

[31m{[39m
[31m  select: {[39m
[31m    _count: {[39m
[31m      select: {[39m
[31m        _all: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: [[39m
[31m        {[39m
[31m          name: 'Laravel'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'MySQL'[39m
[31m        }[39m
[31m      ][39m
[31m      ~~~~~~~~~~~~~~~~~~~[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument every: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Laravel'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'MySQL'[39m
[31m  }[39m
[31m][39m
[31mon prisma.aggregateProject. Provided List<Json>, expected TechListWhereInput:[39m
[31mtype TechListWhereInput {[39m
[31m  AND?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  OR?: List<TechListWhereInput>[39m
[31m  NOT?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  name?: StringFilter | String[39m
[31m  Project?: ProjectListRelationFilter[39m
[31m}[39m

[31m[39m
2022-11-10 22:19:57:1957 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.count()` invocation:[39m

[31m{[39m
[31m  select: {[39m
[31m    _count: {[39m
[31m      select: {[39m
[31m        _all: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: {[39m
[31m        name: [[39m
[31m          'Laravel',[39m
[31m          'MySQL'[39m
[31m        ][39m
[31m        ~~~~~~~~~~~~[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument name: Got invalid value [39m
[31m[[39m
[31m  'Laravel',[39m
[31m  'MySQL'[39m
[31m][39m
[31mon prisma.aggregateProject. Provided List<String>, expected StringFilter or String:[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m

[31m[39m
2022-11-10 22:22:29:2229 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: 'Nuxt js'[39m
[31m             ~~~~~~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument every: Got invalid value 'Nuxt js' on prisma.findManyProject. Provided String, expected TechListWhereInput:[39m
[31mtype TechListWhereInput {[39m
[31m  AND?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  OR?: List<TechListWhereInput>[39m
[31m  NOT?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  name?: StringFilter | String[39m
[31m  Project?: ProjectListRelationFilter[39m
[31m}[39m

[31m[39m
2022-11-10 22:28:11:2811 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: {[39m
[31m        id: {[39m
[31m          in: [[39m
[31m            '2',[39m
[31m            '13'[39m
[31m          ][39m
[31m          ~~~~~~[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument in: Got invalid value [39m
[31m[[39m
[31m  '2',[39m
[31m  '13'[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<String>, expected List<Int>.[39m

[31m[39m
2022-11-10 22:29:36:2936 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: {[39m
[31m        id: {[39m
[31m          in: [[39m
[31m            '2',[39m
[31m            '13'[39m
[31m          ][39m
[31m          ~~~~~~[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument in: Got invalid value [39m
[31m[[39m
[31m  '2',[39m
[31m  '13'[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<String>, expected List<Int>.[39m

[31m[39m
2022-11-10 22:29:54:2954 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: {[39m
[31m        id: {[39m
[31m          in: [[39m
[31m            '2',[39m
[31m            '13'[39m
[31m          ][39m
[31m          ~~~~~~[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument in: Got invalid value [39m
[31m[[39m
[31m  '2',[39m
[31m  '13'[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<String>, expected List<Int>.[39m

[31m[39m
2022-11-10 22:30:31:3031 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: {[39m
[31m        name: [[39m
[31m          '2',[39m
[31m          '13'[39m
[31m        ][39m
[31m        ~~~~~~[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument name: Got invalid value [39m
[31m[[39m
[31m  '2',[39m
[31m  '13'[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<String>, expected StringFilter or String:[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m

[31m[39m
2022-11-10 22:30:55:3055 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: ReferenceError: totalPage is not defined[39m
2022-11-10 22:51:05:515 [31merror[39m: [31m[GET] /find-lecturer >> StatusCode:: 500, Message:: TypeError: lecturerService.findLecturer is not a function[39m
2022-11-10 22:54:20:5420 [31merror[39m: [31m[GET] /find-research-method >> StatusCode:: 500, Message:: ReferenceError: researchMethod is not defined[39m
2022-11-10 22:54:49:5449 [31merror[39m: [31m[GET] /find-research-method >> StatusCode:: 500, Message:: TypeError: researchMethodService.find is not a function[39m
2022-11-10 22:54:50:5450 [31merror[39m: [31m[GET] /find-research-method >> StatusCode:: 500, Message:: TypeError: researchMethodService.find is not a function[39m
2022-11-10 22:55:17:5517 [31merror[39m: [31m[GET] /find-tech >> StatusCode:: 500, Message:: TypeError: techListService.find is not a function[39m
2022-11-10 22:58:01:581 [31merror[39m: [31m[GET] /find-research-field >> StatusCode:: 500, Message:: TypeError: researchFieldService.find is not a function[39m
2022-11-10 23:54:35:5435 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: [[39m
[31m            {[39m
[31m              name: 'PHP'[39m
[31m            }[39m
[31m          ][39m
[31m          ~~~~~~~~~~~~~~~[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument in: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'PHP'[39m
[31m  }[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<Json>, expected List<String>.[39m

[31m[39m
2022-11-10 23:55:47:5547 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: [[39m
[31m        {[39m
[31m          name: 'PHP'[39m
[31m        }[39m
[31m      ][39m
[31m      ~~~~~~~~~~~~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument some: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'PHP'[39m
[31m  }[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<Json>, expected TechListWhereInput:[39m
[31mtype TechListWhereInput {[39m
[31m  AND?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  OR?: List<TechListWhereInput>[39m
[31m  NOT?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  name?: StringFilter | String[39m
[31m  Project?: ProjectListRelationFilter[39m
[31m}[39m

[31m[39m
2022-11-10 23:56:25:5625 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: [[39m
[31m      {[39m
[31m        name: 'PHP'[39m
[31m      }[39m
[31m    ][39m
[31m    ~~~~~~~~~~~~~~~[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument tech: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'PHP'[39m
[31m  }[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<Json>, expected TechListListRelationFilter:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-11 00:10:35:1035 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: ReferenceError: methods is not defined[39m
2022-11-11 00:10:39:1039 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: ReferenceError: methods is not defined[39m
2022-11-11 00:19:04:194 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      name: {[39m
[31m      ~~~~[39m
[31m        in: [[39m
[31m          'Laravel'[39m
[31m        ][39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `name` in where.tech.name for type TechListListRelationFilter. Did you mean `some`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-11 00:20:04:204 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      has: {[39m
[31m      ~~~[39m
[31m        name: {[39m
[31m          in: [[39m
[31m            'Laravel'[39m
[31m          ][39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      include: {[39m
[31m        user: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `has` in where.tech.has for type TechListListRelationFilter. Available args:[39m

[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-11 01:13:27:1327 [31merror[39m: [31m[GET] /get-project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    title: 'SISTEM INFORMASI PENJADWALAN RAPAT BERBASIS WEBSITE'[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    lecturers: true,[39m
[31m    ~~~~~~~~[39m
[31m?   comments?: true,[39m
[31m?   tech?: true,[39m
[31m?   researchFields?: true,[39m
[31m?   methods?: true,[39m
[31m?   lecturers?: true,[39m
[31m?   Backend?: true,[39m
[31m?   Database?: true,[39m
[31m?   _count?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `lecturer` for include statement on model Project. Available options are listed in green. Did you mean `lecturers`?[39m
[31m[39m
2022-11-11 01:13:31:1331 [31merror[39m: [31m[GET] /get-project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    title: 'SISTEM INFORMASI PENJADWALAN RAPAT BERBASIS WEBSITE'[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    lecturers: true,[39m
[31m    ~~~~~~~~[39m
[31m?   comments?: true,[39m
[31m?   tech?: true,[39m
[31m?   researchFields?: true,[39m
[31m?   methods?: true,[39m
[31m?   lecturers?: true,[39m
[31m?   Backend?: true,[39m
[31m?   Database?: true,[39m
[31m?   _count?: true[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `lecturer` for include statement on model Project. Available options are listed in green. Did you mean `lecturers`?[39m
[31m[39m
2022-11-11 01:39:29:3929 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"vue j\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-11 01:39:29:3929 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"vue js\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-11 01:39:30:3930 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"vue j\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-11 01:39:31:3931 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"vue j\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-11 01:39:31:3931 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"vue js\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-11 01:39:38:3938 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"vue jss\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-11 01:39:39:3939 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"vue js\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-11 01:39:39:3939 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"vue j\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-11 01:50:19:5019 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'test',[39m
[31m    description: 'test',[39m
[31m    abstract: 'test',[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Vue js'[39m
[31m          ~~~~[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Express js'[39m
[31m          ~~~~[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Pendidikan'[39m
[31m          ~~~~[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Microservices'[39m
[31m          ~~~~[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Hero Yudo Martono, ST, MT.'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Muarifin, S.ST., M.T.'[39m
[31m        }[39m
[31m      ][39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `name` in data.tech.connect.0.name for type TechListWhereUniqueInput. Did you mean `id`? Available args:[39m
[31mtype TechListWhereUniqueInput {[39m
[31m  id?: Int[39m
[31m}[39m
[31mUnknown arg `name` in data.tech.connect.1.name for type TechListWhereUniqueInput. Did you mean `id`? Available args:[39m
[31mtype TechListWhereUniqueInput {[39m
[31m  id?: Int[39m
[31m}[39m
[31mUnknown arg `name` in data.researchFields.connect.0.name for type ResearchFieldWhereUniqueInput. Did you mean `id`? Available args:[39m
[31mtype ResearchFieldWhereUniqueInput {[39m
[31m  id?: Int[39m
[31m}[39m
[31mUnknown arg `name` in data.methods.connect.0.name for type ResearchMethodWhereUniqueInput. Did you mean `id`? Available args:[39m
[31mtype ResearchMethodWhereUniqueInput {[39m
[31m  id?: Int[39m
[31m}[39m

[31m[39m
2022-11-11 01:50:19:5019 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'test',[39m
[31m    description: 'test',[39m
[31m    abstract: 'test',[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [[39m
[31m      {[39m
[31m        name: 'Vue js'[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'Express js'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    researchFields: [[39m
[31m      {[39m
[31m        name: 'Pendidikan'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    methods: [[39m
[31m      {[39m
[31m        name: 'Microservices'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    lecturers: [[39m
[31m      {[39m
[31m        name: 'Hero Yudo Martono, ST, MT.'[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'Muarifin, S.ST., M.T.'[39m
[31m      }[39m
[31m    ][39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument tech: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Vue js'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'Express js'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected TechListUpdateManyWithoutProjectNestedInput:[39m
[31mtype TechListUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: TechListCreateWithoutProjectInput | List<TechListCreateWithoutProjectInput> | TechListUncheckedCreateWithoutProjectInput | List<TechListUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: TechListCreateOrConnectWithoutProjectInput | List<TechListCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: TechListUpsertWithWhereUniqueWithoutProjectInput | List<TechListUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  disconnect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  delete?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  connect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  update?: TechListUpdateWithWhereUniqueWithoutProjectInput | List<TechListUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: TechListUpdateManyWithWhereWithoutProjectInput | List<TechListUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: TechListScalarWhereInput | List<TechListScalarWhereInput>[39m
[31m}[39m
[31mArgument researchFields: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Pendidikan'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchFieldUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchFieldUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchFieldCreateWithoutProjectInput | List<ResearchFieldCreateWithoutProjectInput> | ResearchFieldUncheckedCreateWithoutProjectInput | List<ResearchFieldUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchFieldCreateOrConnectWithoutProjectInput | List<ResearchFieldCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchFieldUpsertWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  disconnect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  delete?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  connect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  update?: ResearchFieldUpdateWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchFieldUpdateManyWithWhereWithoutProjectInput | List<ResearchFieldUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchFieldScalarWhereInput | List<ResearchFieldScalarWhereInput>[39m
[31m}[39m
[31mArgument methods: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Microservices'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchMethodUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchMethodUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchMethodCreateWithoutProjectInput | List<ResearchMethodCreateWithoutProjectInput> | ResearchMethodUncheckedCreateWithoutProjectInput | List<ResearchMethodUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchMethodCreateOrConnectWithoutProjectInput | List<ResearchMethodCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchMethodUpsertWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  disconnect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  delete?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  connect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  update?: ResearchMethodUpdateWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchMethodUpdateManyWithWhereWithoutProjectInput | List<ResearchMethodUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchMethodScalarWhereInput | List<ResearchMethodScalarWhereInput>[39m
[31m}[39m
[31mArgument lecturers: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Hero Yudo Martono, ST, MT.'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'Muarifin, S.ST., M.T.'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected LecturerUpdateManyWithoutProjectNestedInput:[39m
[31mtype LecturerUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: LecturerCreateWithoutProjectInput | List<LecturerCreateWithoutProjectInput> | LecturerUncheckedCreateWithoutProjectInput | List<LecturerUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | List<LecturerCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: LecturerUpsertWithWhereUniqueWithoutProjectInput | List<LecturerUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  disconnect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  delete?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  connect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  update?: LecturerUpdateWithWhereUniqueWithoutProjectInput | List<LecturerUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: LecturerUpdateManyWithWhereWithoutProjectInput | List<LecturerUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: LecturerScalarWhereInput | List<LecturerScalarWhereInput>[39m
[31m}[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-11 01:54:19:5419 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: 1[39m
[31m  },[39m
[31m  include: {[39m
[31m    project: {[39m
[31m      include: {[39m
[31m        lecturers: true[39m
[31m      }[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      include: {[39m
[31m?       tech?: true,[39m
[31m?       researchFields?: true,[39m
[31m?       methods?: true,[39m
[31m?       student?: true,[39m
[31m?       lecturers?: true,[39m
[31m?       comments?: true,[39m
[31m?       Backend?: true,[39m
[31m?       Database?: true,[39m
[31m?       _count?: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `lecturer` for include statement on model Project. Available options are listed in green. Did you mean `lecturers`?[39m
[31m[39m
2022-11-11 01:56:03:563 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-11-11 01:56:03:563 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'tets',[39m
[31m    description: 'test',[39m
[31m    abstract: 'test',[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [[39m
[31m      {[39m
[31m        name: 'Vue js'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~[39m
[31m    researchFields: [[39m
[31m      {[39m
[31m        name: 'Pendidikan'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    methods: [[39m
[31m      {[39m
[31m        name: 'Microservices'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    lecturers: [[39m
[31m      {[39m
[31m        name: 'Hero Yudo Martono, ST, MT.'[39m
[31m      }[39m
[31m    ][39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument tech: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Vue js'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected TechListUpdateManyWithoutProjectNestedInput:[39m
[31mtype TechListUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: TechListCreateWithoutProjectInput | List<TechListCreateWithoutProjectInput> | TechListUncheckedCreateWithoutProjectInput | List<TechListUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: TechListCreateOrConnectWithoutProjectInput | List<TechListCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: TechListUpsertWithWhereUniqueWithoutProjectInput | List<TechListUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  disconnect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  delete?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  connect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  update?: TechListUpdateWithWhereUniqueWithoutProjectInput | List<TechListUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: TechListUpdateManyWithWhereWithoutProjectInput | List<TechListUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: TechListScalarWhereInput | List<TechListScalarWhereInput>[39m
[31m}[39m
[31mArgument researchFields: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Pendidikan'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchFieldUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchFieldUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchFieldCreateWithoutProjectInput | List<ResearchFieldCreateWithoutProjectInput> | ResearchFieldUncheckedCreateWithoutProjectInput | List<ResearchFieldUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchFieldCreateOrConnectWithoutProjectInput | List<ResearchFieldCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchFieldUpsertWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  disconnect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  delete?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  connect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  update?: ResearchFieldUpdateWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchFieldUpdateManyWithWhereWithoutProjectInput | List<ResearchFieldUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchFieldScalarWhereInput | List<ResearchFieldScalarWhereInput>[39m
[31m}[39m
[31mArgument methods: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Microservices'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchMethodUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchMethodUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchMethodCreateWithoutProjectInput | List<ResearchMethodCreateWithoutProjectInput> | ResearchMethodUncheckedCreateWithoutProjectInput | List<ResearchMethodUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchMethodCreateOrConnectWithoutProjectInput | List<ResearchMethodCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchMethodUpsertWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  disconnect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  delete?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  connect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  update?: ResearchMethodUpdateWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchMethodUpdateManyWithWhereWithoutProjectInput | List<ResearchMethodUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchMethodScalarWhereInput | List<ResearchMethodScalarWhereInput>[39m
[31m}[39m
[31mArgument lecturers: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Hero Yudo Martono, ST, MT.'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected LecturerUpdateManyWithoutProjectNestedInput:[39m
[31mtype LecturerUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: LecturerCreateWithoutProjectInput | List<LecturerCreateWithoutProjectInput> | LecturerUncheckedCreateWithoutProjectInput | List<LecturerUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | List<LecturerCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: LecturerUpsertWithWhereUniqueWithoutProjectInput | List<LecturerUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  disconnect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  delete?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  connect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  update?: LecturerUpdateWithWhereUniqueWithoutProjectInput | List<LecturerUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: LecturerUpdateManyWithWhereWithoutProjectInput | List<LecturerUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: LecturerScalarWhereInput | List<LecturerScalarWhereInput>[39m
[31m}[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-11 01:57:53:5753 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-11-11 01:57:53:5753 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'tets',[39m
[31m    description: 'test',[39m
[31m    abstract: 'test',[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [[39m
[31m      {[39m
[31m        name: 'Vue js'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~[39m
[31m    researchFields: [[39m
[31m      {[39m
[31m        name: 'Pendidikan'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    methods: [[39m
[31m      {[39m
[31m        name: 'Microservices'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    lecturers: [[39m
[31m      {[39m
[31m        name: 'Hero Yudo Martono, ST, MT.'[39m
[31m      }[39m
[31m    ][39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument tech: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Vue js'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected TechListUpdateManyWithoutProjectNestedInput:[39m
[31mtype TechListUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: TechListCreateWithoutProjectInput | List<TechListCreateWithoutProjectInput> | TechListUncheckedCreateWithoutProjectInput | List<TechListUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: TechListCreateOrConnectWithoutProjectInput | List<TechListCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: TechListUpsertWithWhereUniqueWithoutProjectInput | List<TechListUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  disconnect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  delete?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  connect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  update?: TechListUpdateWithWhereUniqueWithoutProjectInput | List<TechListUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: TechListUpdateManyWithWhereWithoutProjectInput | List<TechListUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: TechListScalarWhereInput | List<TechListScalarWhereInput>[39m
[31m}[39m
[31mArgument researchFields: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Pendidikan'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchFieldUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchFieldUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchFieldCreateWithoutProjectInput | List<ResearchFieldCreateWithoutProjectInput> | ResearchFieldUncheckedCreateWithoutProjectInput | List<ResearchFieldUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchFieldCreateOrConnectWithoutProjectInput | List<ResearchFieldCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchFieldUpsertWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  disconnect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  delete?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  connect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  update?: ResearchFieldUpdateWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchFieldUpdateManyWithWhereWithoutProjectInput | List<ResearchFieldUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchFieldScalarWhereInput | List<ResearchFieldScalarWhereInput>[39m
[31m}[39m
[31mArgument methods: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Microservices'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchMethodUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchMethodUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchMethodCreateWithoutProjectInput | List<ResearchMethodCreateWithoutProjectInput> | ResearchMethodUncheckedCreateWithoutProjectInput | List<ResearchMethodUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchMethodCreateOrConnectWithoutProjectInput | List<ResearchMethodCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchMethodUpsertWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  disconnect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  delete?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  connect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  update?: ResearchMethodUpdateWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchMethodUpdateManyWithWhereWithoutProjectInput | List<ResearchMethodUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchMethodScalarWhereInput | List<ResearchMethodScalarWhereInput>[39m
[31m}[39m
[31mArgument lecturers: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Hero Yudo Martono, ST, MT.'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected LecturerUpdateManyWithoutProjectNestedInput:[39m
[31mtype LecturerUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: LecturerCreateWithoutProjectInput | List<LecturerCreateWithoutProjectInput> | LecturerUncheckedCreateWithoutProjectInput | List<LecturerUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | List<LecturerCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: LecturerUpsertWithWhereUniqueWithoutProjectInput | List<LecturerUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  disconnect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  delete?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  connect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  update?: LecturerUpdateWithWhereUniqueWithoutProjectInput | List<LecturerUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: LecturerUpdateManyWithWhereWithoutProjectInput | List<LecturerUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: LecturerScalarWhereInput | List<LecturerScalarWhereInput>[39m
[31m}[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-11 01:58:37:5837 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-11-11 01:58:37:5837 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'tets',[39m
[31m    description: 'test',[39m
[31m    abstract: 'test',[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [[39m
[31m      {[39m
[31m        name: 'Vue js'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~[39m
[31m    researchFields: [[39m
[31m      {[39m
[31m        name: 'Pendidikan'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    methods: [[39m
[31m      {[39m
[31m        name: 'Microservices'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    lecturers: [[39m
[31m      {[39m
[31m        name: 'Hero Yudo Martono, ST, MT.'[39m
[31m      }[39m
[31m    ][39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument tech: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Vue js'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected TechListUpdateManyWithoutProjectNestedInput:[39m
[31mtype TechListUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: TechListCreateWithoutProjectInput | List<TechListCreateWithoutProjectInput> | TechListUncheckedCreateWithoutProjectInput | List<TechListUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: TechListCreateOrConnectWithoutProjectInput | List<TechListCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: TechListUpsertWithWhereUniqueWithoutProjectInput | List<TechListUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  disconnect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  delete?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  connect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  update?: TechListUpdateWithWhereUniqueWithoutProjectInput | List<TechListUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: TechListUpdateManyWithWhereWithoutProjectInput | List<TechListUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: TechListScalarWhereInput | List<TechListScalarWhereInput>[39m
[31m}[39m
[31mArgument researchFields: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Pendidikan'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchFieldUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchFieldUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchFieldCreateWithoutProjectInput | List<ResearchFieldCreateWithoutProjectInput> | ResearchFieldUncheckedCreateWithoutProjectInput | List<ResearchFieldUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchFieldCreateOrConnectWithoutProjectInput | List<ResearchFieldCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchFieldUpsertWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  disconnect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  delete?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  connect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  update?: ResearchFieldUpdateWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchFieldUpdateManyWithWhereWithoutProjectInput | List<ResearchFieldUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchFieldScalarWhereInput | List<ResearchFieldScalarWhereInput>[39m
[31m}[39m
[31mArgument methods: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Microservices'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchMethodUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchMethodUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchMethodCreateWithoutProjectInput | List<ResearchMethodCreateWithoutProjectInput> | ResearchMethodUncheckedCreateWithoutProjectInput | List<ResearchMethodUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchMethodCreateOrConnectWithoutProjectInput | List<ResearchMethodCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchMethodUpsertWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  disconnect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  delete?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  connect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  update?: ResearchMethodUpdateWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchMethodUpdateManyWithWhereWithoutProjectInput | List<ResearchMethodUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchMethodScalarWhereInput | List<ResearchMethodScalarWhereInput>[39m
[31m}[39m
[31mArgument lecturers: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Hero Yudo Martono, ST, MT.'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected LecturerUpdateManyWithoutProjectNestedInput:[39m
[31mtype LecturerUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: LecturerCreateWithoutProjectInput | List<LecturerCreateWithoutProjectInput> | LecturerUncheckedCreateWithoutProjectInput | List<LecturerUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | List<LecturerCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: LecturerUpsertWithWhereUniqueWithoutProjectInput | List<LecturerUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  disconnect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  delete?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  connect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  update?: LecturerUpdateWithWhereUniqueWithoutProjectInput | List<LecturerUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: LecturerUpdateManyWithWhereWithoutProjectInput | List<LecturerUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: LecturerScalarWhereInput | List<LecturerScalarWhereInput>[39m
[31m}[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-11 02:01:39:139 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-11-11 02:01:39:139 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'tets',[39m
[31m    description: 'test',[39m
[31m    abstract: 'test',[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: [[39m
[31m      {[39m
[31m        name: 'Vue js'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~[39m
[31m    researchFields: [[39m
[31m      {[39m
[31m        name: 'Pendidikan'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    methods: [[39m
[31m      {[39m
[31m        name: 'Microservices'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    lecturers: [[39m
[31m      {[39m
[31m        name: 'Hero Yudo Martono, ST, MT.'[39m
[31m      }[39m
[31m    ][39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument tech: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Vue js'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected TechListUpdateManyWithoutProjectNestedInput:[39m
[31mtype TechListUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: TechListCreateWithoutProjectInput | List<TechListCreateWithoutProjectInput> | TechListUncheckedCreateWithoutProjectInput | List<TechListUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: TechListCreateOrConnectWithoutProjectInput | List<TechListCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: TechListUpsertWithWhereUniqueWithoutProjectInput | List<TechListUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  disconnect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  delete?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  connect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  update?: TechListUpdateWithWhereUniqueWithoutProjectInput | List<TechListUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: TechListUpdateManyWithWhereWithoutProjectInput | List<TechListUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: TechListScalarWhereInput | List<TechListScalarWhereInput>[39m
[31m}[39m
[31mArgument researchFields: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Pendidikan'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchFieldUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchFieldUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchFieldCreateWithoutProjectInput | List<ResearchFieldCreateWithoutProjectInput> | ResearchFieldUncheckedCreateWithoutProjectInput | List<ResearchFieldUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchFieldCreateOrConnectWithoutProjectInput | List<ResearchFieldCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchFieldUpsertWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  disconnect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  delete?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  connect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  update?: ResearchFieldUpdateWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchFieldUpdateManyWithWhereWithoutProjectInput | List<ResearchFieldUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchFieldScalarWhereInput | List<ResearchFieldScalarWhereInput>[39m
[31m}[39m
[31mArgument methods: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Microservices'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchMethodUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchMethodUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchMethodCreateWithoutProjectInput | List<ResearchMethodCreateWithoutProjectInput> | ResearchMethodUncheckedCreateWithoutProjectInput | List<ResearchMethodUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchMethodCreateOrConnectWithoutProjectInput | List<ResearchMethodCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchMethodUpsertWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  disconnect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  delete?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  connect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  update?: ResearchMethodUpdateWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchMethodUpdateManyWithWhereWithoutProjectInput | List<ResearchMethodUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchMethodScalarWhereInput | List<ResearchMethodScalarWhereInput>[39m
[31m}[39m
[31mArgument lecturers: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Hero Yudo Martono, ST, MT.'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected LecturerUpdateManyWithoutProjectNestedInput:[39m
[31mtype LecturerUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: LecturerCreateWithoutProjectInput | List<LecturerCreateWithoutProjectInput> | LecturerUncheckedCreateWithoutProjectInput | List<LecturerUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | List<LecturerCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: LecturerUpsertWithWhereUniqueWithoutProjectInput | List<LecturerUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  disconnect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  delete?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  connect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  update?: LecturerUpdateWithWhereUniqueWithoutProjectInput | List<LecturerUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: LecturerUpdateManyWithWhereWithoutProjectInput | List<LecturerUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: LecturerScalarWhereInput | List<LecturerScalarWhereInput>[39m
[31m}[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-11 02:03:04:34 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'test',[39m
[31m    description: 'test',[39m
[31m    abstract: 'test',[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     connect?: TechListWhereUniqueInput | TechListWhereUniqueInput[],[39m
[31m?     create?: TechListCreateWithoutProjectInput | TechListCreateWithoutProjectInput[] | TechListUncheckedCreateWithoutProjectInput | TechListUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: TechListCreateOrConnectWithoutProjectInput | TechListCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m    researchFields: {[39m
[31m?     connect?: ResearchFieldWhereUniqueInput | ResearchFieldWhereUniqueInput[],[39m
[31m?     create?: ResearchFieldCreateWithoutProjectInput | ResearchFieldCreateWithoutProjectInput[] | ResearchFieldUncheckedCreateWithoutProjectInput | ResearchFieldUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: ResearchFieldCreateOrConnectWithoutProjectInput | ResearchFieldCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m    methods: {[39m
[31m?     connect?: ResearchMethodWhereUniqueInput | ResearchMethodWhereUniqueInput[],[39m
[31m?     create?: ResearchMethodCreateWithoutProjectInput | ResearchMethodCreateWithoutProjectInput[] | ResearchMethodUncheckedCreateWithoutProjectInput | ResearchMethodUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: ResearchMethodCreateOrConnectWithoutProjectInput | ResearchMethodCreateOrConnectWithoutProjectInput[][39m
[31m    },[39m
[31m    lecturers: {[39m
[31m?     connect?: LecturerWhereUniqueInput | LecturerWhereUniqueInput[],[39m
[31m?     create?: LecturerCreateWithoutProjectInput | LecturerCreateWithoutProjectInput[] | LecturerUncheckedCreateWithoutProjectInput | LecturerUncheckedCreateWithoutProjectInput[],[39m
[31m?     connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | LecturerCreateOrConnectWithoutProjectInput[][39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument data.tech.connect of type TechListWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument data.researchFields.connect of type ResearchFieldWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument data.methods.connect of type ResearchMethodWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument data.lecturers.connect of type LecturerWhereUniqueInput needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-11 02:06:41:641 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-11-11 02:10:12:1012 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-11-11 02:12:27:1227 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'connect')[39m
2022-11-11 02:13:00:130 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'connect')[39m
2022-11-11 02:14:21:1421 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    tech: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m+   title: String,[39m
[31m+   description: String,[39m
[31m+   abstract: String,[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   },[39m
[31m?   Backend?: {[39m
[31m?     create?: BackendCreateWithoutProjectInput | BackendUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: BackendCreateOrConnectWithoutProjectInput,[39m
[31m?     connect?: BackendWhereUniqueInput[39m
[31m?   },[39m
[31m?   Database?: {[39m
[31m?     create?: DatabaseCreateWithoutProjectInput | DatabaseUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: DatabaseCreateOrConnectWithoutProjectInput,[39m
[31m?     connect?: DatabaseWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument title for data.title is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-11 02:14:50:1450 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-11-11 02:16:43:1643 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-11-11 02:17:40:1740 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-11-11 02:18:02:182 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-11-11 03:07:12:712 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"website“ or 1=1;–\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-15 20:52:55:5255 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: NotFoundError: No Student found[39m
2022-11-15 20:52:59:5259 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: NotFoundError: No Student found[39m
2022-11-15 21:19:02:192 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: NotFoundError: No Student found[39m
2022-11-15 21:31:56:3156 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: NotFoundError: No Student found[39m
2022-11-15 21:50:59:5059 [31merror[39m: [31m[POST] /student/create >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'StudentToUser' between the `Student` and `User` models.[39m
2022-11-15 22:23:20:2320 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.count()` invocation:[39m

[31m{[39m
[31m  select: {[39m
[31m    _count: {[39m
[31m      select: {[39m
[31m        _all: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  where: {[39m
[31m    isActive: undefined,[39m
[31m    title: {[39m
[31m    ~~~~~[39m
[31m      search: undefined[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `title` in where.title for type BackendWhereInput. Did you mean `id`? Available args:[39m
[31mtype BackendWhereInput {[39m
[31m  AND?: BackendWhereInput | List<BackendWhereInput>[39m
[31m  OR?: List<BackendWhereInput>[39m
[31m  NOT?: BackendWhereInput | List<BackendWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  isActive?: BoolFilter | Boolean[39m
[31m  sourceCode?: StringFilter | String[39m
[31m  url?: StringFilter | String[39m
[31m  port?: PortRelationFilter | PortWhereInput[39m
[31m  portId?: IntFilter | Int[39m
[31m  description?: StringFilter | String[39m
[31m  studentId?: IntFilter | Int[39m
[31m  student?: StudentRelationFilter | StudentWhereInput[39m
[31m}[39m

[31m[39m
2022-11-15 22:23:21:2321 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.count()` invocation:[39m

[31m{[39m
[31m  select: {[39m
[31m    _count: {[39m
[31m      select: {[39m
[31m        _all: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  where: {[39m
[31m    isActive: undefined,[39m
[31m    title: {[39m
[31m    ~~~~~[39m
[31m      search: undefined[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `title` in where.title for type BackendWhereInput. Did you mean `id`? Available args:[39m
[31mtype BackendWhereInput {[39m
[31m  AND?: BackendWhereInput | List<BackendWhereInput>[39m
[31m  OR?: List<BackendWhereInput>[39m
[31m  NOT?: BackendWhereInput | List<BackendWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  isActive?: BoolFilter | Boolean[39m
[31m  sourceCode?: StringFilter | String[39m
[31m  url?: StringFilter | String[39m
[31m  port?: PortRelationFilter | PortWhereInput[39m
[31m  portId?: IntFilter | Int[39m
[31m  description?: StringFilter | String[39m
[31m  studentId?: IntFilter | Int[39m
[31m  student?: StudentRelationFilter | StudentWhereInput[39m
[31m}[39m

[31m[39m
2022-11-15 22:23:43:2343 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.count()` invocation:[39m

[31m{[39m
[31m  select: {[39m
[31m    _count: {[39m
[31m      select: {[39m
[31m        _all: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  where: {[39m
[31m    isActive: undefined,[39m
[31m    title: {[39m
[31m    ~~~~~[39m
[31m      search: undefined[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `title` in where.title for type BackendWhereInput. Did you mean `id`? Available args:[39m
[31mtype BackendWhereInput {[39m
[31m  AND?: BackendWhereInput | List<BackendWhereInput>[39m
[31m  OR?: List<BackendWhereInput>[39m
[31m  NOT?: BackendWhereInput | List<BackendWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  isActive?: BoolFilter | Boolean[39m
[31m  sourceCode?: StringFilter | String[39m
[31m  url?: StringFilter | String[39m
[31m  port?: PortRelationFilter | PortWhereInput[39m
[31m  portId?: IntFilter | Int[39m
[31m  description?: StringFilter | String[39m
[31m  studentId?: IntFilter | Int[39m
[31m  student?: StudentRelationFilter | StudentWhereInput[39m
[31m}[39m

[31m[39m
2022-11-15 22:24:43:2443 [31merror[39m: [31m[GET] /admin/list-database >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: undefined,[39m
[31m    title: {[39m
[31m    ~~~~~[39m
[31m      search: undefined[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `title` in where.title for type DatabaseWhereInput. Did you mean `type`? Available args:[39m
[31mtype DatabaseWhereInput {[39m
[31m  AND?: DatabaseWhereInput | List<DatabaseWhereInput>[39m
[31m  OR?: List<DatabaseWhereInput>[39m
[31m  NOT?: DatabaseWhereInput | List<DatabaseWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  isActive?: BoolFilter | Boolean[39m
[31m  type?: EnumDBTypeFilter | DBType[39m
[31m  url?: StringFilter | String[39m
[31m  name?: StringFilter | String[39m
[31m  username?: StringFilter | String[39m
[31m  password?: StringFilter | String[39m
[31m  description?: StringFilter | String[39m
[31m  studentId?: IntFilter | Int[39m
[31m  student?: StudentRelationFilter | StudentWhereInput[39m
[31m}[39m

[31m[39m
2022-11-15 23:21:33:2133 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: ReferenceError: port is not defined[39m
2022-11-15 23:21:34:2134 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: ReferenceError: port is not defined[39m
2022-11-15 23:21:43:2143 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: ReferenceError: port is not defined[39m
2022-11-15 23:21:43:2143 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: ReferenceError: port is not defined[39m
2022-11-15 23:21:45:2145 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: ReferenceError: port is not defined[39m
2022-11-15 23:23:11:2311 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'length')[39m
2022-11-15 23:23:11:2311 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'length')[39m
2022-11-15 23:23:11:2311 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:24:54:2454 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:25:40:2540 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:27:13:2713 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:27:45:2745 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:28:32:2832 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:28:33:2833 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:28:36:2836 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:29:29:2929 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:30:26:3026 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:31:17:3117 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:31:17:3117 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:31:18:3118 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:31:18:3118 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:31:21:3121 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:31:35:3135 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:31:46:3146 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:32:51:3251 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:33:41:3341 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:33:54:3354 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:34:19:3419 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:34:27:3427 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:36:11:3611 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:37:43:3743 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:37:43:3743 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:37:44:3744 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:37:44:3744 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:37:49:3749 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:39:28:3928 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:41:15:4115 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:42:03:423 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:42:45:4245 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:42:46:4246 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:42:46:4246 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:42:46:4246 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:42:47:4247 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:42:47:4247 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:42:47:4247 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:42:47:4247 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:42:54:4254 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:55:4455 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:56:4456 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:56:4456 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:56:4456 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:57:4457 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:57:4457 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:57:4457 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:57:4457 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:58:4458 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:58:4458 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:58:4458 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:58:4458 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:59:4459 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:44:59:4459 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:45:00:450 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:45:02:452 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:45:07:457 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-15 23:53:22:5322 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-16 00:07:12:712 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-16 00:07:59:759 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-16 00:08:00:80 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-16 00:19:20:1920 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-16 00:20:06:206 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: ReferenceError: studentId is not defined[39m
2022-11-16 00:20:10:2010 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'Judul',[39m
[31m    description: 'Deskripsi',[39m
[31m    abstract: 'Abstract',[39m
[31m    video: 'https://www.youtube.com/watch?v=vjPRqUdaDlM',[39m
[31m    type: 'NodeJs',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/50.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/49.png',[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/48.png'[39m
[31m    ],[39m
[31m    documents: [[39m
[31m      {[39m
[31m        name: 'Buku_PA_2103191057_Bagus Adlan Fadhilah - B57 - Bagus Adlan.pdf',[39m
[31m        url: 'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/documents/Buku_PA_2103191057_Bagus+Adlan+Fadhilah+-+B57+-+Bagus+Adlan.pdf'[39m
[31m      }[39m
[31m    ],[39m
[31m    sourceCode: 'https://github.com/Gavrushuk/vue-3-todo.git',[39m
[31m    studentId: 1,[39m
[31m    tech: [[39m
[31m      {[39m
[31m        name: 'Vue Js'[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'Express js'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    researchFields: [[39m
[31m      {[39m
[31m        name: 'Pendidikan'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    methods: [[39m
[31m      {[39m
[31m        name: 'Microservices'[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'Api Gateway'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    lecturers: [[39m
[31m      {[39m
[31m        name: 'Hero Yudo Martono, ST, MT.'[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'Muarifin, S.ST., M.T'[39m
[31m      }[39m
[31m    ][39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument tech: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Vue Js'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'Express js'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected TechListUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype TechListUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: TechListCreateWithoutProjectInput | List<TechListCreateWithoutProjectInput> | TechListUncheckedCreateWithoutProjectInput | List<TechListUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: TechListCreateOrConnectWithoutProjectInput | List<TechListCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: TechListUpsertWithWhereUniqueWithoutProjectInput | List<TechListUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  disconnect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  delete?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  connect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  update?: TechListUpdateWithWhereUniqueWithoutProjectInput | List<TechListUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: TechListUpdateManyWithWhereWithoutProjectInput | List<TechListUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: TechListScalarWhereInput | List<TechListScalarWhereInput>[39m
[31m}[39m
[31mArgument researchFields: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Pendidikan'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchFieldUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchFieldUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchFieldCreateWithoutProjectInput | List<ResearchFieldCreateWithoutProjectInput> | ResearchFieldUncheckedCreateWithoutProjectInput | List<ResearchFieldUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchFieldCreateOrConnectWithoutProjectInput | List<ResearchFieldCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchFieldUpsertWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  disconnect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  delete?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  connect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  update?: ResearchFieldUpdateWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchFieldUpdateManyWithWhereWithoutProjectInput | List<ResearchFieldUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchFieldScalarWhereInput | List<ResearchFieldScalarWhereInput>[39m
[31m}[39m
[31mArgument methods: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Microservices'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'Api Gateway'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchMethodUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchMethodUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchMethodCreateWithoutProjectInput | List<ResearchMethodCreateWithoutProjectInput> | ResearchMethodUncheckedCreateWithoutProjectInput | List<ResearchMethodUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchMethodCreateOrConnectWithoutProjectInput | List<ResearchMethodCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchMethodUpsertWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  disconnect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  delete?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  connect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  update?: ResearchMethodUpdateWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchMethodUpdateManyWithWhereWithoutProjectInput | List<ResearchMethodUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchMethodScalarWhereInput | List<ResearchMethodScalarWhereInput>[39m
[31m}[39m
[31mArgument lecturers: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Hero Yudo Martono, ST, MT.'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'Muarifin, S.ST., M.T'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected LecturerUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype LecturerUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: LecturerCreateWithoutProjectInput | List<LecturerCreateWithoutProjectInput> | LecturerUncheckedCreateWithoutProjectInput | List<LecturerUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | List<LecturerCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: LecturerUpsertWithWhereUniqueWithoutProjectInput | List<LecturerUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  disconnect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  delete?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  connect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  update?: LecturerUpdateWithWhereUniqueWithoutProjectInput | List<LecturerUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: LecturerUpdateManyWithWhereWithoutProjectInput | List<LecturerUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: LecturerScalarWhereInput | List<LecturerScalarWhereInput>[39m
[31m}[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-16 00:23:04:234 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'Judul',[39m
[31m    description: 'Penelitian\n',[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    studentId: 1,[39m
[31m    ~~~~~~~~~[39m
[31m    tech: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m+   abstract: String,[39m
[31m?   video?: String | null,[39m
[31m?   sourceCode?: String | null,[39m
[31m?   url?: String | null,[39m
[31m?   isActive?: Boolean,[39m
[31m?   comments?: {[39m
[31m?     create?: CommentCreateWithoutProjectInput | CommentCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput | CommentUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: CommentCreateOrConnectWithoutProjectInput | CommentCreateOrConnectWithoutProjectInput,[39m
[31m?     createMany?: CommentCreateManyProjectInputEnvelope,[39m
[31m?     connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[39m
[31m?   },[39m
[31m?   port?: {[39m
[31m?     create?: PortCreateWithoutProjectInput | PortUncheckedCreateWithoutProjectInput,[39m
[31m?     connectOrCreate?: PortCreateOrConnectWithoutProjectInput,[39m
[31m?     connect?: PortWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `studentId` in data.studentId for type ProjectCreateInput. Did you mean `student`?[39m
[31mArgument abstract for data.abstract is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-16 00:23:04:234 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'Judul',[39m
[31m    description: 'Penelitian\n',[39m
[31m    type: 'Generals',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    studentId: 1,[39m
[31m    tech: null,[39m
[31m          ~~~~[39m
[31m    researchFields: null,[39m
[31m                    ~~~~[39m
[31m    methods: null,[39m
[31m             ~~~~[39m
[31m    lecturers: null[39m
[31m               ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument tech for data.tech must not be null. Please use undefined instead.[39m
[31mArgument researchFields for data.researchFields must not be null. Please use undefined instead.[39m
[31mArgument methods for data.methods must not be null. Please use undefined instead.[39m
[31mArgument lecturers for data.lecturers must not be null. Please use undefined instead.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-16 00:42:25:4225 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-16 00:43:06:436 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'judul',[39m
[31m    description: 'deskripsi',[39m
[31m    abstract: 'penjelasan',[39m
[31m    video: 'https://www.youtube.com/watch?v=o4GHoqGtRkg&list=RDo4GHoqGtRkg&start_radio=1',[39m
[31m    type: 'NodeJs',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    sourceCode: 'https://github.com/beary/vite-example.git',[39m
[31m    studentId: 1,[39m
[31m    ~~~~~~~~~[39m
[31m    tech: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Vue Js'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Pendidikan'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Microservices'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Hero Yudo Martono, ST, MT.'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `studentId` in data.studentId for type ProjectCreateInput. Did you mean `student`? Available args:[39m
[31mtype ProjectCreateInput {[39m
[31m  title: String[39m
[31m  description: String[39m
[31m  abstract: String[39m
[31m  documents?: NullableJsonNullValueInput | Json[39m
[31m  images?: ProjectCreateimagesInput | List<String>[39m
[31m  video?: String | Null[39m
[31m  sourceCode?: String | Null[39m
[31m  url?: String | Null[39m
[31m  isActive?: Boolean[39m
[31m  type?: ProjectType[39m
[31m  tech?: TechListCreateNestedManyWithoutProjectInput[39m
[31m  researchFields?: ResearchFieldCreateNestedManyWithoutProjectInput[39m
[31m  methods?: ResearchMethodCreateNestedManyWithoutProjectInput[39m
[31m  student: StudentCreateNestedOneWithoutProjectInput[39m
[31m  lecturers?: LecturerCreateNestedManyWithoutProjectInput[39m
[31m  comments?: CommentCreateNestedManyWithoutProjectInput[39m
[31m  port?: PortCreateNestedOneWithoutProjectInput[39m
[31m}[39m

[31m[39m
2022-11-16 00:43:09:439 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'judul',[39m
[31m    description: 'deskripsi',[39m
[31m    abstract: 'penjelasan',[39m
[31m    video: 'https://www.youtube.com/watch?v=o4GHoqGtRkg&list=RDo4GHoqGtRkg&start_radio=1',[39m
[31m    type: 'NodeJs',[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/49.png'[39m
[31m    ],[39m
[31m    documents: [[39m
[31m      {[39m
[31m        name: 'Buku_PA_2103191057_Bagus Adlan Fadhilah - B57 - Bagus Adlan.pdf',[39m
[31m        url: 'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/documents/Buku_PA_2103191057_Bagus+Adlan+Fadhilah+-+B57+-+Bagus+Adlan.pdf'[39m
[31m      }[39m
[31m    ],[39m
[31m    sourceCode: 'https://github.com/beary/vite-example.git',[39m
[31m    studentId: 1,[39m
[31m    tech: [[39m
[31m      {[39m
[31m        name: 'Vue Js'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~[39m
[31m    researchFields: [[39m
[31m      {[39m
[31m        name: 'Pendidikan'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    methods: [[39m
[31m      {[39m
[31m        name: 'Microservices'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    lecturers: [[39m
[31m      {[39m
[31m        name: 'Hero Yudo Martono, ST, MT.'[39m
[31m      }[39m
[31m    ][39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mArgument tech: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Vue Js'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected TechListUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype TechListUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: TechListCreateWithoutProjectInput | List<TechListCreateWithoutProjectInput> | TechListUncheckedCreateWithoutProjectInput | List<TechListUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: TechListCreateOrConnectWithoutProjectInput | List<TechListCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: TechListUpsertWithWhereUniqueWithoutProjectInput | List<TechListUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  disconnect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  delete?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  connect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  update?: TechListUpdateWithWhereUniqueWithoutProjectInput | List<TechListUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: TechListUpdateManyWithWhereWithoutProjectInput | List<TechListUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: TechListScalarWhereInput | List<TechListScalarWhereInput>[39m
[31m}[39m
[31mArgument researchFields: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Pendidikan'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchFieldUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchFieldUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchFieldCreateWithoutProjectInput | List<ResearchFieldCreateWithoutProjectInput> | ResearchFieldUncheckedCreateWithoutProjectInput | List<ResearchFieldUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchFieldCreateOrConnectWithoutProjectInput | List<ResearchFieldCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchFieldUpsertWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  disconnect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  delete?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  connect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  update?: ResearchFieldUpdateWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchFieldUpdateManyWithWhereWithoutProjectInput | List<ResearchFieldUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchFieldScalarWhereInput | List<ResearchFieldScalarWhereInput>[39m
[31m}[39m
[31mArgument methods: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Microservices'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchMethodUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchMethodUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchMethodCreateWithoutProjectInput | List<ResearchMethodCreateWithoutProjectInput> | ResearchMethodUncheckedCreateWithoutProjectInput | List<ResearchMethodUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchMethodCreateOrConnectWithoutProjectInput | List<ResearchMethodCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchMethodUpsertWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  disconnect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  delete?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  connect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  update?: ResearchMethodUpdateWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchMethodUpdateManyWithWhereWithoutProjectInput | List<ResearchMethodUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchMethodScalarWhereInput | List<ResearchMethodScalarWhereInput>[39m
[31m}[39m
[31mArgument lecturers: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Hero Yudo Martono, ST, MT.'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected LecturerUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype LecturerUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: LecturerCreateWithoutProjectInput | List<LecturerCreateWithoutProjectInput> | LecturerUncheckedCreateWithoutProjectInput | List<LecturerUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | List<LecturerCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: LecturerUpsertWithWhereUniqueWithoutProjectInput | List<LecturerUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  disconnect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  delete?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  connect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  update?: LecturerUpdateWithWhereUniqueWithoutProjectInput | List<LecturerUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: LecturerUpdateManyWithWhereWithoutProjectInput | List<LecturerUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: LecturerScalarWhereInput | List<LecturerScalarWhereInput>[39m
[31m}[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-16 00:55:48:5548 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-16 01:48:52:4852 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-16 01:49:29:4929 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'Judul',[39m
[31m    description: 'desc',[39m
[31m    abstract: 'abstrak',[39m
[31m    video: 'http://localhost:5173/#/student/create-project',[39m
[31m    type: 'NodeJs',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    sourceCode: 'https://github.com/beary/vite-example.git',[39m
[31m    tech: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Hero Yudho Martoni'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    port: {[39m
[31m      create: {[39m
[31m        number: {[39m
[31m          number: '1992'[39m
[31m        }[39m
[31m        ~~~~~~~~~~~~~~~~[39m
[31m      }[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument number: Got invalid value [39m
[31m{[39m
[31m  number: '1992'[39m
[31m}[39m
[31mon prisma.createOneProject. Provided Json, expected Int.[39m

[31m[39m
2022-11-16 01:50:03:503 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'Judul',[39m
[31m    description: 'desc',[39m
[31m    abstract: 'abstrak',[39m
[31m    video: 'http://localhost:5173/#/student/create-project',[39m
[31m    type: 'NodeJs',[39m
[31m    images: [],[39m
[31m    documents: [],[39m
[31m    sourceCode: 'https://github.com/beary/vite-example.git',[39m
[31m    tech: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: undefined[39m
[31m    },[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Hero Yudho Martoni'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    port: {[39m
[31m      create: {[39m
[31m        number: '1992'[39m
[31m                ~~~~~~[39m
[31m      }[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument number: Got invalid value '1992' on prisma.createOneProject. Provided String, expected Int.[39m

[31m[39m
2022-11-16 01:55:15:5515 [31merror[39m: [31m[GET] /admin/list-project >> StatusCode:: 500, Message:: ReferenceError: username is not defined[39m
2022-11-16 02:09:34:934 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {}[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-16 02:10:13:1013 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {}[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-16 02:10:45:1045 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {}[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-16 02:11:48:1148 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {}[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-16 02:12:02:122 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {}[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-17 09:45:51:4551 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`nip`)[39m
2022-11-17 09:46:11:4611 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`nip`)[39m
2022-11-17 09:47:01:471 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`nip`)[39m
2022-11-17 10:29:58:2958 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mAn operation failed because it depends on one or more records that were required but not found. Expected 2 records to be connected, found only 1.[39m
2022-11-17 10:30:32:3032 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mAn operation failed because it depends on one or more records that were required but not found. Expected 2 records to be connected, found only 1.[39m
2022-11-17 10:33:07:337 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mAn operation failed because it depends on one or more records that were required but not found. Expected 2 records to be connected, found only 1.[39m
2022-11-17 11:13:32:1332 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:13:35:1335 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:13:41:1341 [31merror[39m: [31m[POST] /student/backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    description: 'Desc',[39m
[31m    sourceCode: 'https://music.youtube.com/watch?v=DNTwy84nQLM&list=RDAMVM4-poKFhIKeo',[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: NaN[39m
[31m            ~~~[39m
[31m      }[39m
[31m    },[39m
[31m+   url: String,[39m
[31m+   port: {[39m
[31m+     create?: PortCreateWithoutBackendInput | PortUncheckedCreateWithoutBackendInput,[39m
[31m+     connectOrCreate?: PortCreateOrConnectWithoutBackendInput,[39m
[31m+     connect?: PortWhereUniqueInput[39m
[31m+   },[39m
[31m?   isActive?: Boolean[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.createOneBackend. Provided Float, expected Int.[39m
[31mArgument url for data.url is missing.[39m
[31mArgument port for data.port is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-17 11:15:29:1529 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:16:19:1619 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:16:57:1657 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:17:56:1756 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:18:16:1816 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:18:16:1816 [31merror[39m: [31m[POST] /student/backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    description: 'sd',[39m
[31m    sourceCode: 'http://localhost:5173/#/student/create-backend',[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m+   url: String,[39m
[31m+   port: {[39m
[31m+     create?: PortCreateWithoutBackendInput | PortUncheckedCreateWithoutBackendInput,[39m
[31m+     connectOrCreate?: PortCreateOrConnectWithoutBackendInput,[39m
[31m+     connect?: PortWhereUniqueInput[39m
[31m+   },[39m
[31m?   isActive?: Boolean[39m
[31m  }[39m
[31m}[39m

[31mArgument url for data.url is missing.[39m
[31mArgument port for data.port is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-17 11:20:56:2056 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:20:57:2057 [31merror[39m: [31m[POST] /student/backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    description: 'wkwk',[39m
[31m    sourceCode: 'http://localhost:5173/#/student/create-backend',[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m+   port: {[39m
[31m+     create?: PortCreateWithoutBackendInput | PortUncheckedCreateWithoutBackendInput,[39m
[31m+     connectOrCreate?: PortCreateOrConnectWithoutBackendInput,[39m
[31m+     connect?: PortWhereUniqueInput[39m
[31m+   },[39m
[31m?   isActive?: Boolean,[39m
[31m?   url?: String | null[39m
[31m  }[39m
[31m}[39m

[31mArgument port for data.port is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-17 11:22:24:2224 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:22:25:2225 [31merror[39m: [31m[POST] /student/backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    description: 'sdfasf',[39m
[31m    sourceCode: 'http://localhost:5173/#/student/create-backend',[39m
[31m    port: {[39m
[31m      create: {[39m
[31m        number: NaN[39m
[31m                ~~~[39m
[31m      }[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument number: Got invalid value NaN on prisma.createOneBackend. Provided Float, expected Int.[39m

[31m[39m
2022-11-17 11:23:30:2330 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:23:30:2330 [31merror[39m: [31m[POST] /student/backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    description: 'dfsf',[39m
[31m    sourceCode: 'http://localhost:5173/#/student/create-backend',[39m
[31m    port: {[39m
[31m      create: null[39m
[31m              ~~~~[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument create for data.port.create must not be null. Please use undefined instead.[39m

[31m[39m
2022-11-17 11:23:55:2355 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:23:59:2359 [31merror[39m: [31m[POST] /student/backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    description: 'tony',[39m
[31m    sourceCode: 'http://localhost:5173/#/student/create-backend',[39m
[31m    port: {[39m
[31m      create: {[39m
[31m        number: '234'[39m
[31m                ~~~~~[39m
[31m      }[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument number: Got invalid value '234' on prisma.createOneBackend. Provided String, expected Int.[39m

[31m[39m
2022-11-17 11:24:47:2447 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:24:48:2448 [31merror[39m: [31m[POST] /student/backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    description: 'wdw',[39m
[31m    sourceCode: 'http://localhost:5173/#/student/create-backend',[39m
[31m    port: {[39m
[31m      create: null[39m
[31m              ~~~~[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument create for data.port.create must not be null. Please use undefined instead.[39m

[31m[39m
2022-11-17 11:25:28:2528 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-17 11:29:10:2910 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'number')[39m
2022-11-17 11:30:43:3043 [31merror[39m: [31m[POST] /student/database >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'mysql',[39m
[31m    name: 'asd',[39m
[31m    username: 'fathonialimukti',[39m
[31m    password: 'Fathoni8A',[39m
[31m    password_confirm: 'Fathoni8A',[39m
[31m    ~~~~~~~~~~~~~~~~[39m
[31m    description: 'ad',[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m+   url: String,[39m
[31m?   isActive?: Boolean[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `password_confirm` in data.password_confirm for type DatabaseCreateInput. Did you mean `password`?[39m
[31mArgument url for data.url is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-17 11:31:21:3121 [31merror[39m: [31m[POST] /student/database >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'mysql',[39m
[31m    name: 'asdf',[39m
[31m    username: 'fathonistudent',[39m
[31m    password: 'Fathoni8A',[39m
[31m    password_confirm: 'Fathoni8A',[39m
[31m    ~~~~~~~~~~~~~~~~[39m
[31m    description: 'sdsfs',[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m+   url: String,[39m
[31m?   isActive?: Boolean[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `password_confirm` in data.password_confirm for type DatabaseCreateInput. Did you mean `password`?[39m
[31mArgument url for data.url is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-17 11:32:01:321 [31merror[39m: [31m[POST] /student/database >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'mysql',[39m
[31m    name: 'asd',[39m
[31m    username: 'fathonistudent',[39m
[31m    password: 'Fathoni8A',[39m
[31m    description: 'asda',[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m+   url: String,[39m
[31m?   isActive?: Boolean[39m
[31m  }[39m
[31m}[39m

[31mArgument url for data.url is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-17 11:33:28:3328 [31merror[39m: [31m[POST] /student/database >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'DatabaseToStudent' between the `Database` and `Student` models.[39m
2022-11-17 11:34:12:3412 [31merror[39m: [31m[POST] /student/database >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'DatabaseToStudent' between the `Database` and `Student` models.[39m
2022-11-17 11:49:16:4916 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    name: 'test',[39m
[31m    username: 'tony',[39m
[31m    password: 'WOWKEREN',[39m
[31m    studentId: 1,[39m
[31m    ~~~~~~~~~[39m
[31m+   type: mysql | postgres,[39m
[31m+   description: String,[39m
[31m+   student: {[39m
[31m+     create?: StudentCreateWithoutDatabaseInput | StudentUncheckedCreateWithoutDatabaseInput,[39m
[31m+     connectOrCreate?: StudentCreateOrConnectWithoutDatabaseInput,[39m
[31m+     connect?: StudentWhereUniqueInput[39m
[31m+   },[39m
[31m?   isActive?: Boolean,[39m
[31m?   url?: String | null[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `studentId` in data.studentId for type DatabaseCreateInput. Did you mean `student`?[39m
[31mArgument type for data.type is missing.[39m
[31mArgument description for data.description is missing.[39m
[31mArgument student for data.student is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-17 11:49:58:4958 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    name: 'test',[39m
[31m    username: 'tony',[39m
[31m    password: 'WOWKEREN',[39m
[31m    type: 'postgres',[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    },[39m
[31m+   description: String,[39m
[31m?   isActive?: Boolean,[39m
[31m?   url?: String | null[39m
[31m  }[39m
[31m}[39m

[31mArgument description for data.description is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-17 11:50:13:5013 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'DatabaseToStudent' between the `Database` and `Student` models.[39m
2022-11-17 11:51:20:5120 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    name: 'test',[39m
[31m    username: 'tony',[39m
[31m    password: 'WOWKEREN',[39m
[31m    type: 'postgres',[39m
[31m    description: 'desc',[39m
[31m+   student: {[39m
[31m+     create?: StudentCreateWithoutDatabaseInput | StudentUncheckedCreateWithoutDatabaseInput,[39m
[31m+     connectOrCreate?: StudentCreateOrConnectWithoutDatabaseInput,[39m
[31m+     connect?: StudentWhereUniqueInput[39m
[31m+   },[39m
[31m?   isActive?: Boolean,[39m
[31m?   url?: String | null[39m
[31m  }[39m
[31m}[39m

[31mArgument student for data.student is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-11-17 11:52:16:5216 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m


[31mAn operation failed because it depends on one or more records that were required but not found. No 'Student' record (needed to inline connect on create for 'Database' record) was found for a nested connect on one-to-one relation 'DatabaseToStudent'.[39m
2022-11-17 11:52:55:5255 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'DatabaseToStudent' between the `Database` and `Student` models.[39m
2022-11-17 12:06:00:60 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'DatabaseToStudent' between the `Database` and `Student` models.[39m
2022-11-17 12:07:43:743 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'DatabaseToStudent' between the `Database` and `Student` models.[39m
2022-11-17 12:07:53:753 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'DatabaseToStudent' between the `Database` and `Student` models.[39m
2022-11-17 12:08:21:821 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.update()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'DatabaseToStudent' between the `Database` and `Student` models.[39m
2022-11-17 13:18:40:1840 [31merror[39m: [31m[GET] /admin/list-database >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      name: true[39m
[31m      ~~~~[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `name` in include.student.name for type Student.[39m
[31m→ Did you forget to wrap it with `select`? e.g. { select: { name: true } }[39m

[31m[39m
2022-11-18 06:32:25:3225 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 06:32:26:3226 [31merror[39m: [31m[POST] /get-user >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 13:15:56:1556 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 13:15:56:1556 [31merror[39m: [31m[GET] /find-research-method >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchMethod.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 13:15:56:1556 [31merror[39m: [31m[GET] /find-research-field >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchField.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 13:15:56:1556 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 13:16:01:161 [31merror[39m: [31m[POST] /get-user >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 15:33:19:3319 [31merror[39m: [31m[GET] /admin/list-project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 15:33:20:3320 [31merror[39m: [31m[POST] /get-user >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 15:33:39:3339 [31merror[39m: [31m[GET] /admin/list-project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 15:33:39:3339 [31merror[39m: [31m[POST] /get-user >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.user.upsert()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 15:33:42:3342 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 15:33:43:3343 [31merror[39m: [31m[GET] /admin/list-project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 15:33:43:3343 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-18 15:33:44:3344 [31merror[39m: [31m[GET] /admin/list-database >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-21 00:28:19:2819 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m?   tech?: true,[39m
[31m    lecturer: {[39m
[31m    ~~~~~~~~[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m?   port?: true,[39m
[31m?   researchFields?: true,[39m
[31m?   methods?: true,[39m
[31m?   lecturers?: true,[39m
[31m?   comments?: true,[39m
[31m?   _count?: true[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `lecturer` for include statement on model Project. Available options are listed in green. Did you mean `lecturers`?[39m
[31m[39m
2022-11-21 00:28:45:2845 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m?   tech?: true,[39m
[31m    lecturer: {[39m
[31m    ~~~~~~~~[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m?   researchFields?: true,[39m
[31m?   methods?: true,[39m
[31m?   lecturers?: true,[39m
[31m?   comments?: true,[39m
[31m?   port?: true,[39m
[31m?   _count?: true[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `lecturer` for include statement on model Project. Available options are listed in green. Did you mean `lecturers`?[39m
[31m[39m
2022-11-26 00:04:16:416 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"[object InputEvent]\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-26 00:04:16:416 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"[object InputEvent]\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-26 00:04:16:416 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"[object InputEvent]\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-26 00:04:17:417 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"[object InputEvent]\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-26 00:05:28:528 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"[object InputEvent]\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-26 00:05:31:531 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"[object InputEvent]\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-26 00:05:32:532 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"[object InputEvent]\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-26 00:05:32:532 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"[object InputEvent]\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-26 00:06:06:66 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"[object Event]\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-26 00:06:50:650 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"[object Event]\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-26 00:07:27:727 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"[object Event]\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-26 00:31:41:3141 [31merror[39m: [31m[GET] /find-research-field >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchField.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"[object Event]\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-11-26 01:24:14:2414 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: ReferenceError: totalPage is not defined[39m
2022-11-26 01:26:01:261 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      name: {[39m
[31m      ~~~~[39m
[31m        in: undefined[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      name: {[39m
[31m      ~~~~[39m
[31m        in: undefined[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      name: {[39m
[31m      ~~~~[39m
[31m        in: undefined[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        user: {[39m
[31m          select: {[39m
[31m            username: true[39m
[31m          }[39m
[31m        },[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `name` in where.tech.name for type TechListListRelationFilter. Did you mean `some`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m
[31mUnknown arg `name` in where.researchFields.name for type ResearchFieldListRelationFilter. Did you mean `some`? Available args:[39m
[31mtype ResearchFieldListRelationFilter {[39m
[31m  every?: ResearchFieldWhereInput[39m
[31m  some?: ResearchFieldWhereInput[39m
[31m  none?: ResearchFieldWhereInput[39m
[31m}[39m
[31mUnknown arg `name` in where.methods.name for type ResearchMethodListRelationFilter. Did you mean `some`? Available args:[39m
[31mtype ResearchMethodListRelationFilter {[39m
[31m  every?: ResearchMethodWhereInput[39m
[31m  some?: ResearchMethodWhereInput[39m
[31m  none?: ResearchMethodWhereInput[39m
[31m}[39m

[31m[39m
2022-11-26 01:26:18:2618 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      search: undefined[39m
[31m    },[39m
[31m    tech: {[39m
[31m      name: {[39m
[31m      ~~~~[39m
[31m        in: undefined[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      name: {[39m
[31m      ~~~~[39m
[31m        in: undefined[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      name: {[39m
[31m      ~~~~[39m
[31m        in: undefined[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        user: {[39m
[31m          select: {[39m
[31m            username: true[39m
[31m          }[39m
[31m        },[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `name` in where.tech.name for type TechListListRelationFilter. Did you mean `some`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m
[31mUnknown arg `name` in where.researchFields.name for type ResearchFieldListRelationFilter. Did you mean `some`? Available args:[39m
[31mtype ResearchFieldListRelationFilter {[39m
[31m  every?: ResearchFieldWhereInput[39m
[31m  some?: ResearchFieldWhereInput[39m
[31m  none?: ResearchFieldWhereInput[39m
[31m}[39m
[31mUnknown arg `name` in where.methods.name for type ResearchMethodListRelationFilter. Did you mean `some`? Available args:[39m
[31mtype ResearchMethodListRelationFilter {[39m
[31m  every?: ResearchMethodWhereInput[39m
[31m  some?: ResearchMethodWhereInput[39m
[31m  none?: ResearchMethodWhereInput[39m
[31m}[39m

[31m[39m
2022-11-26 21:30:08:308 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-26 21:30:08:308 [31merror[39m: [31m[GET] /find-research-field >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchField.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-26 21:30:08:308 [31merror[39m: [31m[GET] /find-research-method >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchMethod.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-26 21:30:08:308 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-26 22:18:24:1824 [31merror[39m: [31m[POST] /student/database >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    type: 'PostgreSQL',[39m
[31m          ~~~~~~~~~~~~[39m
[31m    name: 'fathoniAliMukti',[39m
[31m    username: 'fathoni',[39m
[31m    password: 'Fathoni8A;',[39m
[31m    description: 'Desc',[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument type: Provided value 'PostgreSQL' of type String on prisma.createOneDatabase is not a DBType.[39m
[31m→ Possible values: DBType.mysql, DBType.postgres[39m

[31m[39m
2022-11-27 17:21:52:2152 [31merror[39m: [31m[POST] /student/backend >> StatusCode:: 500, Message:: TypeError: Cannot read properties of null (reading 'number')[39m
2022-11-27 17:53:49:5349 [31merror[39m: [31m[POST] /student/backend >> StatusCode:: 500, Message:: TypeError: Cannot read properties of null (reading 'number')[39m
2022-11-27 18:15:40:1540 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 18:15:42:1542 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 18:15:42:1542 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 18:15:43:1543 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 18:16:43:1643 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 18:16:43:1643 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 18:16:44:1644 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 18:17:45:1745 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 18:22:37:2237 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: ToSql(0), cause: Some(Error { kind: ConversionError("Unable to fit integer value '2345514122' into an INT4 (32-bit signed integer)."), original_code: None, original_message: None }) }) })[39m
2022-11-27 18:23:17:2317 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:18:28:1828 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.student.findFirstOrThrow()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-27 19:57:43:5743 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:43:5743 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:43:5743 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:43:5743 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:44:5744 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:44:5744 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:49:5749 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:50:5750 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:53:5753 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:53:5753 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:53:5753 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:54:5754 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:55:5755 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:55:5755 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:55:5755 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 19:57:56:5756 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:00:11:011 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:00:12:012 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:00:12:012 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:00:21:021 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:00:21:021 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:00:21:021 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:12:03:123 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:12:04:124 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:12:04:124 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:12:05:125 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:12:05:125 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:12:05:125 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:12:26:1226 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:12:31:1231 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-27 20:12:37:1237 [31merror[39m: [31m[GET] /find-available-port >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.port.findMany()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.findManyPort. Provided Float, expected IntFilter or Int:[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m
[31mtype IntFilter {[39m
[31m  equals?: Int[39m
[31m  in?: List<Int>[39m
[31m  notIn?: List<Int>[39m
[31m  lt?: Int[39m
[31m  lte?: Int[39m
[31m  gt?: Int[39m
[31m  gte?: Int[39m
[31m  not?: Int | NestedIntFilter[39m
[31m}[39m

[31m[39m
2022-11-28 00:31:22:3122 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'number')[39m
2022-11-28 00:32:18:3218 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: TypeError: Cannot read properties of null (reading 'number')[39m
2022-11-28 00:34:19:3419 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: null,[39m
[31m    description: 'adsfasdfa',[39m
[31m    abstract: 'sdfdsfasdfa',[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Dr. Idris Winarno,S.ST, M.Kom'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Fathoni Lecturer'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Ira Prasetyaningrum, S.Si., M.T'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    video: 'asdfasdf',[39m
[31m    type: 'Generals',[39m
[31m    sourceCode: 'afadf',[39m
[31m    url: null,[39m
[31m    tech: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Node Js'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'MariaDB'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Adonis Js'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Microservices'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Pendidikan'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    documents: [],[39m
[31m    images: [],[39m
[31m    port: {[39m
[31m      create: {[39m
[31m        number: NaN[39m
[31m                ~~~[39m
[31m      }[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument number: Got invalid value NaN on prisma.createOneProject. Provided Float, expected Int.[39m

[31m[39m
2022-11-28 00:59:28:5928 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'asdfasdfasfffffff',[39m
[31m    description: 'asdf',[39m
[31m    abstract: 'asdf',[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Fathoni Lecturer'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Muarifin, S.ST., M.T.'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    video: 'sdfad',[39m
[31m    type: 'Node js',[39m
[31m          ~~~~~~~~~[39m
[31m    sourceCode: 'asdfasdfasdfsgdfsf',[39m
[31m    url: null,[39m
[31m    tech: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'React Js'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'React Native'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Node Js'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'PostgreSQL'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Express Js'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Microservices'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Pendidikan'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'E Goverment'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    documents: [],[39m
[31m    images: [],[39m
[31m    port: {[39m
[31m      create: {[39m
[31m        number: NaN[39m
[31m                ~~~[39m
[31m      }[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument type: Provided value 'Node js' of type String on prisma.createOneProject is not a ProjectType.[39m
[31m→ Possible values: ProjectType.Generals, ProjectType.SelfHostedWeb, ProjectType.NodeJs[39m
[31mArgument number: Got invalid value NaN on prisma.createOneProject. Provided Float, expected Int.[39m

[31m[39m
2022-11-28 01:01:19:119 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'asdfasdfasfffffff',[39m
[31m    description: 'asdf',[39m
[31m    abstract: 'asdf',[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Fathoni Lecturer'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Muarifin, S.ST., M.T.'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    video: 'sdfad',[39m
[31m    type: 'Node js',[39m
[31m          ~~~~~~~~~[39m
[31m    sourceCode: 'asdfasdfasdfsgdfsf',[39m
[31m    url: null,[39m
[31m    tech: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'React Js'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'React Native'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Node Js'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'PostgreSQL'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Express Js'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Microservices'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Pendidikan'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'E Goverment'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    documents: [],[39m
[31m    images: [],[39m
[31m    port: {[39m
[31m      create: {[39m
[31m        number: NaN[39m
[31m                ~~~[39m
[31m      }[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument type: Provided value 'Node js' of type String on prisma.createOneProject is not a ProjectType.[39m
[31m→ Possible values: ProjectType.Generals, ProjectType.SelfHostedWeb, ProjectType.NodeJs[39m
[31mArgument number: Got invalid value NaN on prisma.createOneProject. Provided Float, expected Int.[39m

[31m[39m
2022-11-28 01:01:49:149 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'asdfasdfasfffffff',[39m
[31m    description: 'asdf',[39m
[31m    abstract: 'asdf',[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Fathoni Lecturer'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Muarifin, S.ST., M.T.'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    video: 'sdfad',[39m
[31m    type: 'Node js',[39m
[31m          ~~~~~~~~~[39m
[31m    sourceCode: 'asdfasdfasdfsgdfsf',[39m
[31m    url: null,[39m
[31m    tech: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'React Js'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'React Native'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Node Js'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'PostgreSQL'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Express Js'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Microservices'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Pendidikan'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'E Goverment'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    documents: [],[39m
[31m    images: [],[39m
[31m    port: {[39m
[31m      create: {[39m
[31m        number: NaN[39m
[31m                ~~~[39m
[31m      }[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument type: Provided value 'Node js' of type String on prisma.createOneProject is not a ProjectType.[39m
[31m→ Possible values: ProjectType.Generals, ProjectType.SelfHostedWeb, ProjectType.NodeJs[39m
[31mArgument number: Got invalid value NaN on prisma.createOneProject. Provided Float, expected Int.[39m

[31m[39m
2022-11-28 01:02:29:229 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'asdfasdfasfffffff',[39m
[31m    description: 'asdf',[39m
[31m    abstract: 'asdf',[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Fathoni Lecturer'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Muarifin, S.ST., M.T.'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    video: 'sdfad',[39m
[31m    type: 'Node js',[39m
[31m          ~~~~~~~~~[39m
[31m    sourceCode: 'asdfasdfasdfsgdfsf',[39m
[31m    url: null,[39m
[31m    tech: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'React Js'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'React Native'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Node Js'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'PostgreSQL'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Express Js'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Microservices'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Pendidikan'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'E Goverment'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    documents: [],[39m
[31m    images: [],[39m
[31m    port: {[39m
[31m      create: {[39m
[31m        number: NaN[39m
[31m                ~~~[39m
[31m      }[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument type: Provided value 'Node js' of type String on prisma.createOneProject is not a ProjectType.[39m
[31m→ Possible values: ProjectType.Generals, ProjectType.SelfHostedWeb, ProjectType.NodeJs[39m
[31mArgument number: Got invalid value NaN on prisma.createOneProject. Provided Float, expected Int.[39m

[31m[39m
2022-11-28 01:03:23:323 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'asdfasdfasfffffff',[39m
[31m    description: 'asdf',[39m
[31m    abstract: 'asdf',[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Fathoni Lecturer'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Muarifin, S.ST., M.T.'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    video: 'sdfad',[39m
[31m    type: 'Node js',[39m
[31m          ~~~~~~~~~[39m
[31m    sourceCode: 'asdfasdfasdfsgdfsf',[39m
[31m    url: null,[39m
[31m    tech: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'React Js'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'React Native'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Node Js'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'PostgreSQL'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Express Js'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Microservices'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Pendidikan'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'E Goverment'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    documents: [],[39m
[31m    images: [],[39m
[31m    port: {[39m
[31m      create: {[39m
[31m        number: 23332[39m
[31m      }[39m
[31m    },[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mArgument type: Provided value 'Node js' of type String on prisma.createOneProject is not a ProjectType.[39m
[31m→ Possible values: ProjectType.Generals, ProjectType.SelfHostedWeb, ProjectType.NodeJs[39m

[31m[39m
2022-11-28 01:05:59:559 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mThe change you are trying to make would violate the required relation 'ProjectToStudent' between the `Project` and `Student` models.[39m
2022-11-28 01:06:20:620 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`number`)[39m
2022-11-28 14:30:40:3040 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mAn operation failed because it depends on one or more records that were required but not found. No 'Student' record (needed to inline connect on create for 'Project' record) was found for a nested connect on one-to-one relation 'ProjectToStudent'.[39m
2022-11-28 14:30:46:3046 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {}[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-28 14:30:48:3048 [31merror[39m: [31m[GET] /student >> StatusCode:: 500, Message:: NotFoundError: No Student found[39m
2022-11-28 14:52:49:5249 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {}[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-11-29 04:48:44:4844 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-29 04:48:44:4844 [31merror[39m: [31m[GET] /find-research-method >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchMethod.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-29 04:48:44:4844 [31merror[39m: [31m[GET] /find-research-field >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchField.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-29 04:48:44:4844 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-29 04:56:23:5623 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-29 04:56:23:5623 [31merror[39m: [31m[GET] /find-research-method >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchMethod.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-29 04:56:23:5623 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-29 04:56:23:5623 [31merror[39m: [31m[GET] /find-research-field >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchField.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-29 10:36:39:3639 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`username`)[39m
2022-11-29 11:33:29:3329 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`nip`)[39m
2022-11-29 12:34:48:3448 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`username`)[39m
2022-11-29 14:37:40:3740 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mAn operation failed because it depends on one or more records that were required but not found. Expected 2 records to be connected, found only 1.[39m
2022-11-29 14:39:50:3950 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m


[31mAn operation failed because it depends on one or more records that were required but not found. Expected 2 records to be connected, found only 1.[39m
2022-09-15 04:58:45:5845 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-09-15 04:58:45:5845 [31merror[39m: [31m[GET] /admin/list-project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-09-15 04:58:45:5845 [31merror[39m: [31m[GET] /find-research-method >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchMethod.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-09-15 04:58:45:5845 [31merror[39m: [31m[GET] /find-research-field >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchField.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-09-15 04:58:45:5845 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-11-30 09:42:27:4227 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      has: {[39m
[31m      ~~~[39m
[31m        name: {[39m
[31m          in: [[39m
[31m            'Express Js'[39m
[31m          ][39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        user: {[39m
[31m          select: {[39m
[31m            username: true[39m
[31m          }[39m
[31m        },[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    },[39m
[31m    port: {[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `has` in where.tech.has for type TechListListRelationFilter. Available args:[39m

[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-30 09:42:28:4228 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      has: {[39m
[31m      ~~~[39m
[31m        name: {[39m
[31m          in: [[39m
[31m            'Express Js'[39m
[31m          ][39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        user: {[39m
[31m          select: {[39m
[31m            username: true[39m
[31m          }[39m
[31m        },[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    },[39m
[31m    port: {[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `has` in where.tech.has for type TechListListRelationFilter. Available args:[39m

[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-30 09:57:11:5711 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          id: 1[39m
[31m          ~~[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        user: {[39m
[31m          select: {[39m
[31m            username: true[39m
[31m          }[39m
[31m        },[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    },[39m
[31m    port: {[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `id` in where.tech.every.name.id for type StringFilter. Did you mean `in`? Available args:[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m

[31m[39m
2022-11-30 09:57:58:5758 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      id: 1[39m
[31m      ~~[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        user: {[39m
[31m          select: {[39m
[31m            username: true[39m
[31m          }[39m
[31m        },[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    },[39m
[31m    port: {[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `id` in where.tech.id for type TechListListRelationFilter. Available args:[39m

[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-11-30 09:58:38:5838 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: {[39m
[31m        name: [[39m
[31m          'React Js'[39m
[31m        ][39m
[31m        ~~~~~~~~~~~~[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        user: {[39m
[31m          select: {[39m
[31m            username: true[39m
[31m          }[39m
[31m        },[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    },[39m
[31m    port: {[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument name: Got invalid value [39m
[31m[[39m
[31m  'React Js'[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<String>, expected StringFilter or String:[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m

[31m[39m
2022-11-30 09:59:14:5914 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: {[39m
[31m        name: [[39m
[31m          'React Js'[39m
[31m        ][39m
[31m        ~~~~~~~~~~~~[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        user: {[39m
[31m          select: {[39m
[31m            username: true[39m
[31m          }[39m
[31m        },[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    },[39m
[31m    port: {[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument name: Got invalid value [39m
[31m[[39m
[31m  'React Js'[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<String>, expected StringFilter or String:[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m

[31m[39m
2022-11-30 09:59:51:5951 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: {[39m
[31m        name: [[39m
[31m          'React Js'[39m
[31m        ][39m
[31m        ~~~~~~~~~~~~[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      every: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        user: {[39m
[31m          select: {[39m
[31m            username: true[39m
[31m          }[39m
[31m        },[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    },[39m
[31m    port: {[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument name: Got invalid value [39m
[31m[[39m
[31m  'React Js'[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<String>, expected StringFilter or String:[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m

[31m[39m
2022-11-30 10:08:50:850 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: ReferenceError: search is not defined[39m
2022-11-30 10:09:18:918 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: ReferenceError: search is not defined[39m
2022-11-30 10:09:19:919 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: ReferenceError: search is not defined[39m
2022-11-30 10:14:15:1415 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: null[39m
[31m              ~~~~[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        user: {[39m
[31m          select: {[39m
[31m            username: true[39m
[31m          }[39m
[31m        },[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    },[39m
[31m    port: {[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument in for where.tech.some.name.in must not be null. Please use undefined instead.[39m

[31m[39m
2022-11-30 10:14:17:1417 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: null[39m
[31m              ~~~~[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        user: {[39m
[31m          select: {[39m
[31m            username: true[39m
[31m          }[39m
[31m        },[39m
[31m        name: true,[39m
[31m        image: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    },[39m
[31m    port: {[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument in for where.tech.some.name.in must not be null. Please use undefined instead.[39m

[31m[39m
2022-11-30 10:15:47:1547 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: ReferenceError: search is not defined[39m
2022-11-30 10:16:04:164 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: ReferenceError: Cannot access 'search' before initialization[39m
2022-11-30 10:16:05:165 [31merror[39m: [31m[GET] /test >> StatusCode:: 500, Message:: ReferenceError: Cannot access 'search' before initialization[39m
2022-12-01 13:03:32:332 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m?   tech?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    },[39m
[31m?   researchFields?: true,[39m
[31m?   methods?: true,[39m
[31m?   lecturers?: true,[39m
[31m?   comments?: true,[39m
[31m?   _count?: true[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Project. Available options are listed in green. Did you mean `tech`?[39m
[31m[39m
2022-12-01 13:23:26:2326 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 12,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m?   tech?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    },[39m
[31m?   researchFields?: true,[39m
[31m?   methods?: true,[39m
[31m?   lecturers?: true,[39m
[31m?   comments?: true,[39m
[31m?   _count?: true[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Project. Available options are listed in green. Did you mean `tech`?[39m
[31m[39m
2022-12-02 17:16:48:1648 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'number')[39m
2022-12-02 17:16:54:1654 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'Judul Tugaass Akhir',[39m
[31m    studentId: 1,[39m
[31m    description: 'Descriptio',[39m
[31m    abstract: null,[39m
[31m    ~~~~~~~~[39m
[31m    lecturers: [[39m
[31m      {[39m
[31m        name: 'Fathoni Lecturer'[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'Mu\'arifin, S.ST., M.T.'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    video: '04EaHsbMd14',[39m
[31m    type: 'NodeJs',[39m
[31m    sourceCode: 'https://www.github.com',[39m
[31m    url: null,[39m
[31m    tech: [[39m
[31m      {[39m
[31m        name: 'React Js'[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'PostgreSQL'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    methods: [[39m
[31m      {[39m
[31m        name: 'Microservices'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    researchFields: [[39m
[31m      {[39m
[31m        name: 'Pengabdian Lembaga'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    documents: [[39m
[31m      {[39m
[31m        name: 'Detil Pembayaran UKT, SPP dan Ikoma Mahasiswa PENS.pdf',[39m
[31m        url: 'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/documents/Detil+Pembayaran+UKT,+SPP+dan+Ikoma+Mahasiswa+PENS.pdf'[39m
[31m      }[39m
[31m    ],[39m
[31m    images: [[39m
[31m      'https://etapens-storage140101-dev.s3.ap-southeast-1.amazonaws.com/public/fathonistudent/images/Screenshot+from+2022-11-11+13-00-00.png'[39m
[31m    ][39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mUnknown arg `abstract` in data.abstract for type ProjectUncheckedUpdateInput. Did you mean `select`?[39m
[31mArgument lecturers: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Fathoni Lecturer'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'Mu\'arifin, S.ST., M.T.'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected LecturerUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype LecturerUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: LecturerCreateWithoutProjectInput | List<LecturerCreateWithoutProjectInput> | LecturerUncheckedCreateWithoutProjectInput | List<LecturerUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | List<LecturerCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: LecturerUpsertWithWhereUniqueWithoutProjectInput | List<LecturerUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  disconnect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  delete?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  connect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  update?: LecturerUpdateWithWhereUniqueWithoutProjectInput | List<LecturerUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: LecturerUpdateManyWithWhereWithoutProjectInput | List<LecturerUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: LecturerScalarWhereInput | List<LecturerScalarWhereInput>[39m
[31m}[39m
[31mArgument tech: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'React Js'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'PostgreSQL'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected TechListUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype TechListUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: TechListCreateWithoutProjectInput | List<TechListCreateWithoutProjectInput> | TechListUncheckedCreateWithoutProjectInput | List<TechListUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: TechListCreateOrConnectWithoutProjectInput | List<TechListCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: TechListUpsertWithWhereUniqueWithoutProjectInput | List<TechListUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  disconnect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  delete?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  connect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  update?: TechListUpdateWithWhereUniqueWithoutProjectInput | List<TechListUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: TechListUpdateManyWithWhereWithoutProjectInput | List<TechListUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: TechListScalarWhereInput | List<TechListScalarWhereInput>[39m
[31m}[39m
[31mArgument methods: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Microservices'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchMethodUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchMethodUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchMethodCreateWithoutProjectInput | List<ResearchMethodCreateWithoutProjectInput> | ResearchMethodUncheckedCreateWithoutProjectInput | List<ResearchMethodUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchMethodCreateOrConnectWithoutProjectInput | List<ResearchMethodCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchMethodUpsertWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  disconnect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  delete?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  connect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  update?: ResearchMethodUpdateWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchMethodUpdateManyWithWhereWithoutProjectInput | List<ResearchMethodUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchMethodScalarWhereInput | List<ResearchMethodScalarWhereInput>[39m
[31m}[39m
[31mArgument researchFields: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Pengabdian Lembaga'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchFieldUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchFieldUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchFieldCreateWithoutProjectInput | List<ResearchFieldCreateWithoutProjectInput> | ResearchFieldUncheckedCreateWithoutProjectInput | List<ResearchFieldUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchFieldCreateOrConnectWithoutProjectInput | List<ResearchFieldCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchFieldUpsertWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  disconnect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  delete?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  connect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  update?: ResearchFieldUpdateWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchFieldUpdateManyWithWhereWithoutProjectInput | List<ResearchFieldUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchFieldScalarWhereInput | List<ResearchFieldScalarWhereInput>[39m
[31m}[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-02 17:18:53:1853 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'number')[39m
2022-12-02 17:18:53:1853 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'Test',[39m
[31m    studentId: 1,[39m
[31m    description: 'test',[39m
[31m    abstract: null,[39m
[31m    ~~~~~~~~[39m
[31m    lecturers: [[39m
[31m      {[39m
[31m        name: 'Ira Prasetyaningrum, S.Si., M.T'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    video: '04EaHsbMd14',[39m
[31m    type: 'NodeJs',[39m
[31m    sourceCode: 'some github',[39m
[31m    url: null,[39m
[31m    tech: [[39m
[31m      {[39m
[31m        name: 'React Js'[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'Express Js'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    methods: [[39m
[31m      {[39m
[31m        name: 'Microservices'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    researchFields: [[39m
[31m      {[39m
[31m        name: 'Pengabdian Lembaga'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    documents: [],[39m
[31m    images: [][39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mUnknown arg `abstract` in data.abstract for type ProjectUncheckedUpdateInput. Did you mean `select`?[39m
[31mArgument lecturers: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Ira Prasetyaningrum, S.Si., M.T'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected LecturerUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype LecturerUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: LecturerCreateWithoutProjectInput | List<LecturerCreateWithoutProjectInput> | LecturerUncheckedCreateWithoutProjectInput | List<LecturerUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | List<LecturerCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: LecturerUpsertWithWhereUniqueWithoutProjectInput | List<LecturerUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  disconnect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  delete?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  connect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  update?: LecturerUpdateWithWhereUniqueWithoutProjectInput | List<LecturerUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: LecturerUpdateManyWithWhereWithoutProjectInput | List<LecturerUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: LecturerScalarWhereInput | List<LecturerScalarWhereInput>[39m
[31m}[39m
[31mArgument tech: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'React Js'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'Express Js'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected TechListUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype TechListUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: TechListCreateWithoutProjectInput | List<TechListCreateWithoutProjectInput> | TechListUncheckedCreateWithoutProjectInput | List<TechListUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: TechListCreateOrConnectWithoutProjectInput | List<TechListCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: TechListUpsertWithWhereUniqueWithoutProjectInput | List<TechListUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  disconnect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  delete?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  connect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  update?: TechListUpdateWithWhereUniqueWithoutProjectInput | List<TechListUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: TechListUpdateManyWithWhereWithoutProjectInput | List<TechListUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: TechListScalarWhereInput | List<TechListScalarWhereInput>[39m
[31m}[39m
[31mArgument methods: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Microservices'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchMethodUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchMethodUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchMethodCreateWithoutProjectInput | List<ResearchMethodCreateWithoutProjectInput> | ResearchMethodUncheckedCreateWithoutProjectInput | List<ResearchMethodUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchMethodCreateOrConnectWithoutProjectInput | List<ResearchMethodCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchMethodUpsertWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  disconnect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  delete?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  connect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  update?: ResearchMethodUpdateWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchMethodUpdateManyWithWhereWithoutProjectInput | List<ResearchMethodUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchMethodScalarWhereInput | List<ResearchMethodScalarWhereInput>[39m
[31m}[39m
[31mArgument researchFields: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Pengabdian Lembaga'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchFieldUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchFieldUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchFieldCreateWithoutProjectInput | List<ResearchFieldCreateWithoutProjectInput> | ResearchFieldUncheckedCreateWithoutProjectInput | List<ResearchFieldUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchFieldCreateOrConnectWithoutProjectInput | List<ResearchFieldCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchFieldUpsertWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  disconnect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  delete?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  connect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  update?: ResearchFieldUpdateWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchFieldUpdateManyWithWhereWithoutProjectInput | List<ResearchFieldUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchFieldScalarWhereInput | List<ResearchFieldScalarWhereInput>[39m
[31m}[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-02 17:39:53:3953 [31merror[39m: [31m[POST] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m    title: 'judud;',[39m
[31m    description: 'sfas',[39m
[31m    abstract: null,[39m
[31m    ~~~~~~~~[39m
[31m    lecturers: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Ira Prasetyaningrum, S.Si., M.T'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'Dr. Idris Winarno,S.ST, M.Kom'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    video: 'asdfg',[39m
[31m    type: 'NodeJs',[39m
[31m    sourceCode: 'source',[39m
[31m    url: null,[39m
[31m    tech: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Flutter'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'MariaDB'[39m
[31m        },[39m
[31m        {[39m
[31m          name: 'PostgreSQL'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    methods: {[39m
[31m      connect: [[39m
[31m        {[39m
[31m          name: 'Microservices'[39m
[31m        }[39m
[31m      ][39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      connect: [][39m
[31m    },[39m
[31m    documents: [],[39m
[31m    images: [],[39m
[31m    student: {[39m
[31m      connect: {[39m
[31m        id: 1[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `abstract` in data.abstract for type ProjectCreateInput. Did you mean `select`? Available args:[39m
[31mtype ProjectCreateInput {[39m
[31m  title: String[39m
[31m  description: String[39m
[31m  documents?: NullableJsonNullValueInput | Json[39m
[31m  images?: ProjectCreateimagesInput | List<String>[39m
[31m  video?: String | Null[39m
[31m  sourceCode?: String | Null[39m
[31m  url?: String | Null[39m
[31m  isActive?: Boolean[39m
[31m  type?: ProjectType[39m
[31m  tech?: TechListCreateNestedManyWithoutProjectInput[39m
[31m  researchFields?: ResearchFieldCreateNestedManyWithoutProjectInput[39m
[31m  methods?: ResearchMethodCreateNestedManyWithoutProjectInput[39m
[31m  student: StudentCreateNestedOneWithoutProjectInput[39m
[31m  lecturers?: LecturerCreateNestedManyWithoutProjectInput[39m
[31m  comments?: CommentCreateNestedManyWithoutProjectInput[39m
[31m}[39m

[31m[39m
2022-12-02 17:39:53:3953 [31merror[39m: [31m[PATCH] /student/project >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   title?: String,[39m
[31m?   studentId?: Int[39m
[31m  },[39m
[31m  data: {[39m
[31m    title: 'judud;',[39m
[31m    studentId: 1,[39m
[31m    description: 'sfas',[39m
[31m    abstract: null,[39m
[31m    ~~~~~~~~[39m
[31m    lecturers: [[39m
[31m      {[39m
[31m        name: 'Ira Prasetyaningrum, S.Si., M.T'[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'Dr. Idris Winarno,S.ST, M.Kom'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    video: 'asdfg',[39m
[31m    type: 'NodeJs',[39m
[31m    sourceCode: 'source',[39m
[31m    url: null,[39m
[31m    tech: [[39m
[31m      {[39m
[31m        name: 'Flutter'[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'MariaDB'[39m
[31m      },[39m
[31m      {[39m
[31m        name: 'PostgreSQL'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    methods: [[39m
[31m      {[39m
[31m        name: 'Microservices'[39m
[31m      }[39m
[31m    ],[39m
[31m    ~~~~~~~~~~~~~~~~~~~~~~~~~[39m
[31m    researchFields: [],[39m
[31m    ~~~~~~~~~~~~~~[39m
[31m    documents: [],[39m
[31m    images: [][39m
[31m  }[39m
[31m}[39m

[31mArgument where of type ProjectWhereUniqueInput needs at least one argument. Available args are listed in green.[39m
[31mUnknown arg `abstract` in data.abstract for type ProjectUncheckedUpdateInput. Did you mean `select`?[39m
[31mArgument lecturers: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Ira Prasetyaningrum, S.Si., M.T'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'Dr. Idris Winarno,S.ST, M.Kom'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected LecturerUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype LecturerUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: LecturerCreateWithoutProjectInput | List<LecturerCreateWithoutProjectInput> | LecturerUncheckedCreateWithoutProjectInput | List<LecturerUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: LecturerCreateOrConnectWithoutProjectInput | List<LecturerCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: LecturerUpsertWithWhereUniqueWithoutProjectInput | List<LecturerUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  disconnect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  delete?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  connect?: LecturerWhereUniqueInput | List<LecturerWhereUniqueInput>[39m
[31m  update?: LecturerUpdateWithWhereUniqueWithoutProjectInput | List<LecturerUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: LecturerUpdateManyWithWhereWithoutProjectInput | List<LecturerUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: LecturerScalarWhereInput | List<LecturerScalarWhereInput>[39m
[31m}[39m
[31mArgument tech: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Flutter'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'MariaDB'[39m
[31m  },[39m
[31m  {[39m
[31m    name: 'PostgreSQL'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected TechListUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype TechListUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: TechListCreateWithoutProjectInput | List<TechListCreateWithoutProjectInput> | TechListUncheckedCreateWithoutProjectInput | List<TechListUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: TechListCreateOrConnectWithoutProjectInput | List<TechListCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: TechListUpsertWithWhereUniqueWithoutProjectInput | List<TechListUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  disconnect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  delete?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  connect?: TechListWhereUniqueInput | List<TechListWhereUniqueInput>[39m
[31m  update?: TechListUpdateWithWhereUniqueWithoutProjectInput | List<TechListUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: TechListUpdateManyWithWhereWithoutProjectInput | List<TechListUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: TechListScalarWhereInput | List<TechListScalarWhereInput>[39m
[31m}[39m
[31mArgument methods: Got invalid value [39m
[31m[[39m
[31m  {[39m
[31m    name: 'Microservices'[39m
[31m  }[39m
[31m][39m
[31mon prisma.updateOneProject. Provided List<Json>, expected ResearchMethodUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchMethodUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchMethodCreateWithoutProjectInput | List<ResearchMethodCreateWithoutProjectInput> | ResearchMethodUncheckedCreateWithoutProjectInput | List<ResearchMethodUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchMethodCreateOrConnectWithoutProjectInput | List<ResearchMethodCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchMethodUpsertWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  disconnect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  delete?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  connect?: ResearchMethodWhereUniqueInput | List<ResearchMethodWhereUniqueInput>[39m
[31m  update?: ResearchMethodUpdateWithWhereUniqueWithoutProjectInput | List<ResearchMethodUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchMethodUpdateManyWithWhereWithoutProjectInput | List<ResearchMethodUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchMethodScalarWhereInput | List<ResearchMethodScalarWhereInput>[39m
[31m}[39m
[31mArgument researchFields: Got invalid value [] on prisma.updateOneProject. Provided List<>, expected ResearchFieldUncheckedUpdateManyWithoutProjectNestedInput:[39m
[31mtype ResearchFieldUncheckedUpdateManyWithoutProjectNestedInput {[39m
[31m  create?: ResearchFieldCreateWithoutProjectInput | List<ResearchFieldCreateWithoutProjectInput> | ResearchFieldUncheckedCreateWithoutProjectInput | List<ResearchFieldUncheckedCreateWithoutProjectInput>[39m
[31m  connectOrCreate?: ResearchFieldCreateOrConnectWithoutProjectInput | List<ResearchFieldCreateOrConnectWithoutProjectInput>[39m
[31m  upsert?: ResearchFieldUpsertWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpsertWithWhereUniqueWithoutProjectInput>[39m
[31m  set?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  disconnect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  delete?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  connect?: ResearchFieldWhereUniqueInput | List<ResearchFieldWhereUniqueInput>[39m
[31m  update?: ResearchFieldUpdateWithWhereUniqueWithoutProjectInput | List<ResearchFieldUpdateWithWhereUniqueWithoutProjectInput>[39m
[31m  updateMany?: ResearchFieldUpdateManyWithWhereWithoutProjectInput | List<ResearchFieldUpdateManyWithWhereWithoutProjectInput>[39m
[31m  deleteMany?: ResearchFieldScalarWhereInput | List<ResearchFieldScalarWhereInput>[39m
[31m}[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-05 17:30:12:3012 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-12-05 17:30:12:3012 [31merror[39m: [31m[GET] /find-research-method >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchMethod.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-12-05 17:30:12:3012 [31merror[39m: [31m[GET] /find-research-field >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.researchField.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-12-05 17:30:12:3012 [31merror[39m: [31m[GET] /find-tech-list >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
2022-12-05 20:24:46:2446 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-05 20:27:21:2721 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-05 20:33:30:3330 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-05 20:33:32:3332 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 13:27:27:2727 [31merror[39m: [31m[GET] /admin/list-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  data: {[39m
[31m    isActive: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.updateOneDatabase. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 13:27:50:2750 [31merror[39m: [31m[GET] /admin/list-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  data: {[39m
[31m    isActive: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.updateOneDatabase. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 13:29:17:2917 [31merror[39m: [31m[GET] /admin/list-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  data: {[39m
[31m    isActive: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.updateOneDatabase. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 13:29:21:2921 [31merror[39m: [31m[GET] /admin/list-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  data: {[39m
[31m    isActive: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.updateOneDatabase. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 13:29:24:2924 [31merror[39m: [31m[GET] /admin/list-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.update()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  },[39m
[31m  data: {[39m
[31m    isActive: true[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.updateOneDatabase. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 13:32:27:3227 [31merror[39m: [31m[GET] /admin/list-tech >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'itemPerPage')[39m
2022-12-06 13:32:54:3254 [31merror[39m: [31m[GET] /admin/list-tech >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'itemPerPage')[39m
2022-12-06 13:34:08:348 [31merror[39m: [31m[GET] /admin/list-tech >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'itemPerPage')[39m
2022-12-06 13:35:14:3514 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 13:37:24:3724 [31merror[39m: [31m[GET] /admin/list-tech >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'itemPerPage')[39m
2022-12-06 13:37:55:3755 [31merror[39m: [31m[GET] /admin/list-tech >> StatusCode:: 500, Message:: TypeError: Cannot read properties of undefined (reading 'itemPerPage')[39m
2022-12-06 13:48:24:4824 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: '14'[39m
[31m        ~~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value '14' on prisma.deleteOneTechList. Provided String, expected Int.[39m

[31m[39m
2022-12-06 14:08:17:817 [31merror[39m: [31m[GET] /find-research-method >> StatusCode:: 500, Message:: ReferenceError: techList is not defined[39m
2022-12-06 14:09:44:944 [31merror[39m: [31m[POST] /admin/create-research-field >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.create()` invocation:[39m

[31m{[39m
[31m  data: {[39m
[31m+   name: String,[39m
[31m?   Project?: {[39m
[31m?     create?: ProjectCreateWithoutTechInput | ProjectCreateWithoutTechInput | ProjectUncheckedCreateWithoutTechInput | ProjectUncheckedCreateWithoutTechInput,[39m
[31m?     connectOrCreate?: ProjectCreateOrConnectWithoutTechInput | ProjectCreateOrConnectWithoutTechInput,[39m
[31m?     connect?: ProjectWhereUniqueInput | ProjectWhereUniqueInput[39m
[31m?   }[39m
[31m  }[39m
[31m}[39m

[31mArgument name for data.name is missing.[39m

[31mNote: Lines with + are required, lines with ? are optional.[39m
[31m[39m
2022-12-06 14:10:52:1052 [31merror[39m: [31m[POST] /admin/create-research-field >> StatusCode:: 500, Message:: ReferenceError: data is not defined[39m
2022-12-06 14:56:10:5610 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 14:56:19:5619 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 15:28:17:2817 [31merror[39m: [31m[GET] /admin/list-tech >> StatusCode:: 500, Message:: ReferenceError: projects is not defined[39m
2022-12-06 15:28:21:2821 [31merror[39m: [31m[GET] /admin/list-tech >> StatusCode:: 500, Message:: ReferenceError: projects is not defined[39m
2022-12-06 15:34:35:3435 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 15:43:57:4357 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 15:43:58:4358 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 15:52:57:5257 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.deleteOneTechList. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 15:53:58:5358 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.deleteOneTechList. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 15:55:04:554 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   name?: String[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type TechListWhereUniqueInput needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-06 15:55:30:5530 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m?   id?: Int,[39m
[31m?   name?: String[39m
[31m  }[39m
[31m}[39m

[31mArgument where of type TechListWhereUniqueInput needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-06 15:56:04:564 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.deleteOneTechList. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 15:56:25:5625 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.deleteOneTechList. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 15:58:45:5845 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m


[31mAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.[39m
2022-12-06 15:59:16:5916 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.deleteOneTechList. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 16:00:36:036 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.deleteOneTechList. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 16:01:40:140 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.deleteOneTechList. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 16:01:41:141 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.deleteOneTechList. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 16:01:42:142 [31merror[39m: [31m[DELETE] /admin/delete-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.delete()` invocation:[39m

[31m{[39m
[31m  where: {[39m
[31m    id: NaN[39m
[31m        ~~~[39m
[31m  }[39m
[31m}[39m

[31mArgument id: Got invalid value NaN on prisma.deleteOneTechList. Provided Float, expected Int.[39m

[31m[39m
2022-12-06 16:05:02:52 [31merror[39m: [31m[POST] /admin/create-tech >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.techList.create()` invocation:[39m


[31mUnique constraint failed on the fields: (`name`)[39m
2022-12-06 16:07:53:753 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 16:16:55:1655 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 16:20:41:2041 [31merror[39m: [31m[GET] /admin/list-research-method >> StatusCode:: 500, Message:: ReferenceError: researchField is not defined[39m
2022-12-06 16:22:09:229 [31merror[39m: [31m[GET] /admin/list-research-method >> StatusCode:: 500, Message:: ReferenceError: researchField is not defined[39m
2022-12-06 16:23:41:2341 [31merror[39m: [31m[DELETE] /admin/delete-research-method >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.database.update()` invocation:[39m


[31mAn operation failed because it depends on one or more records that were required but not found. Record to update not found.[39m
2022-12-06 16:53:05:535 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 16:53:07:537 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 16:53:09:539 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 16:58:57:5857 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 17:03:54:354 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: null[39m
[31m              ~~~~[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    researchFields: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: null[39m
[31m              ~~~~[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    methods: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: null[39m
[31m              ~~~~[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        user: {[39m
[31m          select: {[39m
[31m            username: true[39m
[31m          }[39m
[31m        },[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument in for where.tech.some.name.in must not be null. Please use undefined instead.[39m
[31mArgument in for where.researchFields.some.name.in must not be null. Please use undefined instead.[39m
[31mArgument in for where.methods.some.name.in must not be null. Please use undefined instead.[39m

[31m[39m
2022-12-06 17:15:04:154 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    tech: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    },[39m
[31m?   lecturers?: true,[39m
[31m?   comments?: true,[39m
[31m?   _count?: true[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m


[31mInvalid scalar field `tech` for include statement on model Project. Available options are listed in green.[39m
[31mNote, that include statements only accept relation fields.[39m
[31m[39m
2022-12-06 17:15:12:1512 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    tech: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    },[39m
[31m?   lecturers?: true,[39m
[31m?   comments?: true,[39m
[31m?   _count?: true[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m


[31mInvalid scalar field `tech` for include statement on model Project. Available options are listed in green.[39m
[31mNote, that include statements only accept relation fields.[39m
[31m[39m
2022-12-06 17:16:37:1637 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 17:16:39:1639 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 17:16:42:1642 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-06 17:19:02:192 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    researchField: {[39m
[31m      every: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    method: {[39m
[31m      every: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   type?: EnumProjectTypeFilter | ProjectType,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturers?: LecturerListRelationFilter,[39m
[31m?   comments?: CommentListRelationFilter[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.researchField of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.method of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-06 17:19:04:194 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    researchField: {[39m
[31m      every: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    method: {[39m
[31m      every: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   type?: EnumProjectTypeFilter | ProjectType,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturers?: LecturerListRelationFilter,[39m
[31m?   comments?: CommentListRelationFilter[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.researchField of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.method of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-06 17:19:20:1920 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    researchField: {[39m
[31m      every: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    method: {[39m
[31m      every: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   type?: EnumProjectTypeFilter | ProjectType,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturers?: LecturerListRelationFilter,[39m
[31m?   comments?: CommentListRelationFilter[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.researchField of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.method of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-06 17:19:32:1932 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: undefined,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   type?: EnumProjectTypeFilter | ProjectType,[39m
[31m?   researchField?: StringNullableListFilter,[39m
[31m?   method?: StringNullableListFilter,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturers?: LecturerListRelationFilter,[39m
[31m?   comments?: CommentListRelationFilter[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-06 17:20:14:2014 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    researchField: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    method: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   type?: EnumProjectTypeFilter | ProjectType,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturers?: LecturerListRelationFilter,[39m
[31m?   comments?: CommentListRelationFilter[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.researchField of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.method of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-06 17:21:22:2122 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    researchField: {[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    method: {[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasEvery?: String,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   type?: EnumProjectTypeFilter | ProjectType,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturers?: LecturerListRelationFilter,[39m
[31m?   comments?: CommentListRelationFilter[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.researchField of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.method of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-06 17:21:52:2152 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    researchField: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    method: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   type?: EnumProjectTypeFilter | ProjectType,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturers?: LecturerListRelationFilter,[39m
[31m?   comments?: CommentListRelationFilter[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.researchField of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.method of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-06 17:22:28:2228 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: null[39m
[31m                ~~~~[39m
[31m    },[39m
[31m    researchField: {[39m
[31m      hasEvery: null[39m
[31m                ~~~~[39m
[31m    },[39m
[31m    method: {[39m
[31m      hasEvery: null[39m
[31m                ~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument hasEvery for where.tech.hasEvery must not be null. Please use undefined instead.[39m
[31mArgument hasEvery for where.researchField.hasEvery must not be null. Please use undefined instead.[39m
[31mArgument hasEvery for where.method.hasEvery must not be null. Please use undefined instead.[39m

[31m[39m
2022-12-06 17:25:06:256 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: null[39m
[31m                ~~~~[39m
[31m    },[39m
[31m    researchField: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    method: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   type?: EnumProjectTypeFilter | ProjectType,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturers?: LecturerListRelationFilter,[39m
[31m?   comments?: CommentListRelationFilter[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument hasEvery for where.tech.hasEvery must not be null. Please use undefined instead.[39m
[31mArgument where.researchField of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.method of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-06 17:25:15:2515 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    researchField: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    method: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   type?: EnumProjectTypeFilter | ProjectType,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturers?: LecturerListRelationFilter,[39m
[31m?   comments?: CommentListRelationFilter[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.researchField of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.method of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-06 17:25:28:2528 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    researchField: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m    method: {[39m
[31m?     hasEvery?: String,[39m
[31m?     equals?: String[] | null,[39m
[31m?     has?: String | null,[39m
[31m?     hasSome?: String,[39m
[31m?     isEmpty?: Boolean[39m
[31m    },[39m
[31m?   AND?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   OR?: ProjectWhereInput,[39m
[31m?   NOT?: ProjectWhereInput | ProjectWhereInput[],[39m
[31m?   id?: IntFilter | Int,[39m
[31m?   description?: StringFilter | String,[39m
[31m?   documents?: JsonNullableFilter,[39m
[31m?   images?: StringNullableListFilter,[39m
[31m?   video?: StringNullableFilter | String | null,[39m
[31m?   sourceCode?: StringNullableFilter | String | null,[39m
[31m?   url?: StringNullableFilter | String | null,[39m
[31m?   type?: EnumProjectTypeFilter | ProjectType,[39m
[31m?   studentId?: IntFilter | Int,[39m
[31m?   student?: StudentRelationFilter | StudentWhereInput,[39m
[31m?   lecturers?: LecturerListRelationFilter,[39m
[31m?   comments?: CommentListRelationFilter[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument where.tech of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.researchField of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m
[31mArgument where.method of type StringNullableListFilter needs at least one argument. Available args are listed in green.[39m

[31mNote: Lines with ? are optional.[39m
[31m[39m
2022-12-06 20:15:37:1537 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      hasEvery: {[39m
[31m      ~~~~~~~~[39m
[31m        name: {[39m
[31m          in: [[39m
[31m            'React Js'[39m
[31m          ][39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `hasEvery` in where.tech.hasEvery for type TechListListRelationFilter. Did you mean `every`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-12-06 20:22:29:2229 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: {[39m
[31m        name: [[39m
[31m          'React Js',[39m
[31m          'PostgreSQL'[39m
[31m        ][39m
[31m        ~~~~~~~~~~~~~~[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument name: Got invalid value [39m
[31m[[39m
[31m  'React Js',[39m
[31m  'PostgreSQL'[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<String>, expected StringFilter or String:[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m
[31mtype StringFilter {[39m
[31m  equals?: String[39m
[31m  in?: List<String>[39m
[31m  notIn?: List<String>[39m
[31m  lt?: String[39m
[31m  lte?: String[39m
[31m  gt?: String[39m
[31m  gte?: String[39m
[31m  contains?: String[39m
[31m  startsWith?: String[39m
[31m  endsWith?: String[39m
[31m  search?: String[39m
[31m  mode?: QueryMode[39m
[31m  not?: String | NestedStringFilter[39m
[31m}[39m

[31m[39m
2022-12-06 20:29:27:2927 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          search: [[39m
[31m            'React Js'[39m
[31m          ][39m
[31m          ~~~~~~~~~~~~[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument search: Got invalid value [39m
[31m[[39m
[31m  'React Js'[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<String>, expected String.[39m

[31m[39m
2022-12-06 20:29:52:2952 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mError occurred during query execution:[39m
[31mConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: "ERROR", parsed_severity: Some(Error), code: SqlState(E42601), message: "syntax error in tsquery: \"React Js & PostgreSQL\"", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("tsquery.c"), line: Some(689), routine: Some("makepol") }) }) })[39m
2022-12-06 20:30:22:3022 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      name: {[39m
[31m      ~~~~[39m
[31m        search: 'React Js & PostgreSQL'[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `name` in where.tech.name for type TechListListRelationFilter. Did you mean `some`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-12-06 20:31:05:315 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      name: {[39m
[31m      ~~~~[39m
[31m        every: [[39m
[31m          'React Js',[39m
[31m          'PostgreSQL'[39m
[31m        ][39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `name` in where.tech.name for type TechListListRelationFilter. Did you mean `some`? Available args:[39m
[31mtype TechListListRelationFilter {[39m
[31m  every?: TechListWhereInput[39m
[31m  some?: TechListWhereInput[39m
[31m  none?: TechListWhereInput[39m
[31m}[39m

[31m[39m
2022-12-06 20:31:29:3129 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      every: [[39m
[31m        'React Js',[39m
[31m        'PostgreSQL'[39m
[31m      ][39m
[31m      ~~~~~~~~~~~~~~[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument every: Got invalid value [39m
[31m[[39m
[31m  'React Js',[39m
[31m  'PostgreSQL'[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<String>, expected TechListWhereInput:[39m
[31mtype TechListWhereInput {[39m
[31m  AND?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  OR?: List<TechListWhereInput>[39m
[31m  NOT?: TechListWhereInput | List<TechListWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  name?: StringFilter | String[39m
[31m  Project?: ProjectListRelationFilter[39m
[31m  projectId?: IntNullableFilter | Int | Null[39m
[31m}[39m

[31m[39m
2022-12-06 20:43:33:4333 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: {[39m
[31m        id: {[39m
[31m          in: [[39m
[31m            'React Js',[39m
[31m            'PostgreSQL'[39m
[31m          ][39m
[31m          ~~~~~~~~~~~~~~[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mArgument in: Got invalid value [39m
[31m[[39m
[31m  'React Js',[39m
[31m  'PostgreSQL'[39m
[31m][39m
[31mon prisma.findManyProject. Provided List<String>, expected List<Int>.[39m

[31m[39m
2022-12-06 20:47:07:477 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 24,[39m
[31m  where: {[39m
[31m    isActive: true,[39m
[31m    title: {[39m
[31m      contains: undefined,[39m
[31m      mode: 'insensitive'[39m
[31m    },[39m
[31m    tech: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: [[39m
[31m            'React Js',[39m
[31m            'PostgreSQL'[39m
[31m          ][39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    researchField: {[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    },[39m
[31m    researchMethod: {[39m
[31m    ~~~~~~~~~~~~~~[39m
[31m      some: {[39m
[31m        name: {[39m
[31m          in: undefined[39m
[31m        }[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  include: {[39m
[31m    student: {[39m
[31m      select: {[39m
[31m        name: true,[39m
[31m        nrp: true[39m
[31m      }[39m
[31m    },[39m
[31m    tech: {[39m
[31m      select: {[39m
[31m        name: true[39m
[31m      }[39m
[31m    }[39m
[31m  },[39m
[31m  orderBy: {[39m
[31m    id: 'desc'[39m
[31m  }[39m
[31m}[39m

[31mUnknown arg `researchMethod` in where.researchMethod for type ProjectWhereInput. Did you mean `researchField`? Available args:[39m
[31mtype ProjectWhereInput {[39m
[31m  AND?: ProjectWhereInput | List<ProjectWhereInput>[39m
[31m  OR?: List<ProjectWhereInput>[39m
[31m  NOT?: ProjectWhereInput | List<ProjectWhereInput>[39m
[31m  id?: IntFilter | Int[39m
[31m  title?: StringFilter | String[39m
[31m  description?: StringFilter | String[39m
[31m  documents?: JsonNullableFilter[39m
[31m  images?: StringNullableListFilter[39m
[31m  video?: StringNullableFilter | String | Null[39m
[31m  sourceCode?: StringNullableFilter | String | Null[39m
[31m  url?: StringNullableFilter | String | Null[39m
[31m  isActive?: BoolFilter | Boolean[39m
[31m  type?: EnumProjectTypeFilter | ProjectType[39m
[31m  tech?: TechListListRelationFilter[39m
[31m  researchField?: ResearchFieldListRelationFilter[39m
[31m  method?: ResearchMethodListRelationFilter[39m
[31m  studentId?: IntFilter | Int[39m
[31m  student?: StudentRelationFilter | StudentWhereInput[39m
[31m  lecturers?: LecturerListRelationFilter[39m
[31m  comments?: CommentListRelationFilter[39m
[31m}[39m

[31m[39m
2022-12-08 15:51:48:5148 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-08 15:51:52:5152 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-08 15:51:59:5159 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-08 15:52:00:520 [31merror[39m: [31m[GET] /admin/list-backend >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.backend.findMany()` invocation:[39m

[31m{[39m
[31m  skip: 0,[39m
[31m  take: 25,[39m
[31m  where: {[39m
[31m    isActive: undefined[39m
[31m  },[39m
[31m  include: {[39m
[31m?   student?: true,[39m
[31m    port: {[39m
[31m    ~~~~[39m
[31m      select: {[39m
[31m        number: true[39m
[31m      }[39m
[31m    }[39m
[31m  }[39m
[31m}[39m


[31mUnknown field `port` for include statement on model Backend. Available options are listed in green.[39m
[31m[39m
2022-12-08 19:44:44:4444 [31merror[39m: [31m[GET] / >> StatusCode:: 500, Message:: Error: [39m
[31mInvalid `prisma.project.findMany()` invocation:[39m


[31mCan't reach database server at `localhost`:`5432`[39m

[31mPlease make sure your database server is running at `localhost`:`5432`.[39m
